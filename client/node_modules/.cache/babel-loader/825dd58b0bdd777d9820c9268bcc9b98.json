{"ast":null,"code":"/** @format */\nimport { createSlice } from \"@reduxjs/toolkit\";\nexport const authenticateSlice = createSlice({\n  name: \"authenticate\",\n  initialState: {\n    isAuthenticated: false,\n    isSignIn: true,\n    resetPassword: false,\n    userId: \"\",\n    credentials: {\n      email: \"\",\n      password: \"\",\n      conirmPassword: \"\"\n    },\n    error: {\n      message: \"\",\n      isHidden: true\n    }\n  },\n  reducers: {\n    authenticate: state => {\n      state.isAuthenticated = true;\n    },\n    deauthenticate: state => {\n      state.isAuthenticated = false;\n    },\n    resetCredentials: state => {\n      state.credentials = { ...state.credentials,\n        password: \"\",\n        conirmPassword: \"\"\n      };\n    },\n    setCredentials: (state, action) => {\n      const {\n        value,\n        name\n      } = action.payload;\n      state.credentials = { ...state.credentials,\n        [name]: value\n      };\n    },\n    setErrorMessage: (state, action) => {\n      state.error.error = action.payload;\n      state.error.isHidden = true;\n    },\n    hideError: state => {\n      state.error.isHidden = false;\n    },\n    setSignIn: state => {\n      state.isSignIn = !state.isSignIn;\n    },\n    setResetPassword: state => {\n      state.resetPassword = !state.resetPassword;\n    },\n    setUserId: (state, action) => {\n      state.userId = action.payload;\n    }\n  }\n});\nexport const {\n  authenticate,\n  deauthenticate,\n  resetCredentials,\n  setCredentials,\n  hideError,\n  setErrorMessage,\n  setResetPassword,\n  setSignIn,\n  setUserId\n} = authenticateSlice.actions; // The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\n\nexport const selectIsAuthenticated = state => state.authenticate.isAuthenticated;\nexport const selectCredentials = state => state.authenticate.credentials;\nexport const selectErrorMessage = state => state.authenticate.error.message;\nexport const selectIsErrorHidden = state => state.authenticate.error.isHidden;\nexport const selectIsSignIn = state => state.authenticate.isSignIn;\nexport const selectResetPassword = state => state.authenticate.resetPassword;\nexport const selectUserId = state => state.authenticate.userId;\nexport default authenticateSlice.reducer;","map":{"version":3,"sources":["/Users/atorenherrinton/Development/recipeas/client/src/slices/authenticate.slice.js"],"names":["createSlice","authenticateSlice","name","initialState","isAuthenticated","isSignIn","resetPassword","userId","credentials","email","password","conirmPassword","error","message","isHidden","reducers","authenticate","state","deauthenticate","resetCredentials","setCredentials","action","value","payload","setErrorMessage","hideError","setSignIn","setResetPassword","setUserId","actions","selectIsAuthenticated","selectCredentials","selectErrorMessage","selectIsErrorHidden","selectIsSignIn","selectResetPassword","selectUserId","reducer"],"mappings":"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","sourcesContent":["/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nexport const authenticateSlice = createSlice({\n  name: \"authenticate\",\n  initialState: {\n    isAuthenticated: false,\n    isSignIn: true,\n    resetPassword: false,\n    userId: \"\",\n    credentials: {\n      email: \"\",\n      password: \"\",\n      conirmPassword: \"\",\n    },\n    error: {\n      message: \"\",\n      isHidden: true,\n    },\n  },\n  reducers: {\n    authenticate: (state) => {\n      state.isAuthenticated = true;\n    },\n    deauthenticate: (state) => {\n      state.isAuthenticated = false;\n    },\n    resetCredentials: (state) => {\n      state.credentials = {\n        ...state.credentials,\n        password: \"\",\n        conirmPassword: \"\",\n      };\n    },\n    setCredentials: (state, action) => {\n      const { value, name } = action.payload;\n      state.credentials = { ...state.credentials, [name]: value };\n    },\n    setErrorMessage: (state, action) => {\n      state.error.error = action.payload;\n      state.error.isHidden = true;\n    },\n    hideError: (state) => {\n      state.error.isHidden = false;\n    },\n    setSignIn: (state) => {\n      state.isSignIn = !state.isSignIn;\n    },\n    setResetPassword: (state) => {\n      state.resetPassword = !state.resetPassword;\n    },\n    setUserId: (state, action) => {\n      state.userId = action.payload;\n    },\n  },\n});\n\nexport const {\n  authenticate,\n  deauthenticate,\n  resetCredentials,\n  setCredentials,\n  hideError,\n  setErrorMessage,\n  setResetPassword,\n  setSignIn,\n  setUserId,\n} = authenticateSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectIsAuthenticated = (state) =>\n  state.authenticate.isAuthenticated;\nexport const selectCredentials = (state) => state.authenticate.credentials;\nexport const selectErrorMessage = (state) => state.authenticate.error.message;\nexport const selectIsErrorHidden = (state) =>\n  state.authenticate.error.isHidden;\nexport const selectIsSignIn = (state) => state.authenticate.isSignIn;\nexport const selectResetPassword = (state) => state.authenticate.resetPassword;\nexport const selectUserId = (state) => state.authenticate.userId;\n\nexport default authenticateSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}