{"ast":null,"code":"var _jsxFileName = \"/Users/atorenherrinton/Development/recipeas/client/src/components/sign-up/sign-up.component.jsx\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React, { useState } from \"react\";\nimport withFirebaseAuth from \"react-with-firebase-auth\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseApp from \"../../firebase/firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authenticate, selectCredentials, selectErrorMessage, resetCredentials, resetErrorMessage, setCredentials, setErrorMessage, setSignIn } from \"../../slices/authenticate.slice\";\nimport { Alert, Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = props => {\n  _s();\n\n  const {\n    createUserWithEmailAndPassword,\n    setError,\n    error,\n    signInWithGoogle,\n    user\n  } = props;\n  const credentials = useSelector(selectCredentials);\n  const [doesNotMatch, setDoesNotMatch] = useState(false);\n\n  if (doesNotMatch) {\n    setTimeout(() => {}, 1750);\n  }\n\n  const errorMessage = useSelector(selectErrorMessage);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (credentials.password !== credentials.confirmPassword) {\n      setDoesNotMatch(true);\n    } else {\n      createUserWithEmailAndPassword(credentials.email, credentials.password);\n      dispatch(resetCredentials());\n    }\n  };\n\n  const dispatch = useDispatch();\n\n  if (error) {\n    dispatch(setErrorMessage(error));\n  }\n\n  if (user) {\n    dispatch(authenticate());\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            style: {\n              textAlign: \"center\"\n            },\n            as: \"h5\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formBasicEmail\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Email address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  onChange: event => {\n                    dispatch(setCredentials(event.target));\n                    setError(\"reset\");\n                    setDoesNotMatch(false);\n                  },\n                  name: \"email\",\n                  type: \"email\",\n                  value: credentials.email,\n                  placeholder: \"Enter email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                  className: \"text-muted\",\n                  children: \"We'll never share your email with anyone else.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formBasicPassword\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  onChange: event => {\n                    dispatch(setCredentials(event.target));\n                    setError(\"reset\");\n                    setDoesNotMatch(false);\n                  },\n                  name: \"password\",\n                  type: \"password\",\n                  placeholder: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formBasicPassword\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Confirm password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  onChange: event => {\n                    dispatch(setCredentials(event.target));\n                    setError(\"reset\");\n                    setDoesNotMatch(false);\n                  },\n                  name: \"confirmPassword\",\n                  type: \"password\",\n                  placeholder: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this), doesNotMatch ? /*#__PURE__*/_jsxDEV(Alert, {\n                variant: \"warning\",\n                children: \"The passwords do not match\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this) : null, errorMessage && errorMessage !== \"reset\" ? /*#__PURE__*/_jsxDEV(Alert, {\n                variant: \"warning\",\n                children: errorMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n                className: \"mt-3\",\n                block: true,\n                variant: \"outline-primary\",\n                type: \"submit\",\n                children: \"Sign Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: signInWithGoogle,\n                className: \"mt-3\",\n                block: true,\n                variant: \"outline-secondary\",\n                children: \"Continue with Google\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  dispatch(setSignIn());\n                  dispatch(resetErrorMessage());\n                },\n                className: \"mt-3\",\n                block: true,\n                variant: \"light\",\n                children: \"Already have an account? Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUp, \"VXyR09QrOwZ9auVegVPcmdrGDXg=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = SignUp;\nconst firebaseAppAuth = firebaseApp.auth();\nconst providers = {\n  googleProvider: new firebase.auth.GoogleAuthProvider()\n};\nexport default withFirebaseAuth({\n  providers,\n  firebaseAppAuth\n})(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/atorenherrinton/Development/recipeas/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","withFirebaseAuth","firebase","firebaseApp","useDispatch","useSelector","authenticate","selectCredentials","selectErrorMessage","resetCredentials","resetErrorMessage","setCredentials","setErrorMessage","setSignIn","Alert","Container","Row","Col","Card","Form","Button","SignUp","props","createUserWithEmailAndPassword","setError","error","signInWithGoogle","user","credentials","doesNotMatch","setDoesNotMatch","setTimeout","errorMessage","handleSubmit","event","preventDefault","password","confirmPassword","email","dispatch","textAlign","target","firebaseAppAuth","auth","providers","googleProvider","GoogleAuthProvider"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React, { useState } from \"react\";\nimport withFirebaseAuth from \"react-with-firebase-auth\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseApp from \"../../firebase/firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  authenticate,\n  selectCredentials,\n  selectErrorMessage,\n  resetCredentials,\n  resetErrorMessage,\n  setCredentials,\n  setErrorMessage,\n  setSignIn,\n} from \"../../slices/authenticate.slice\";\nimport {\n  Alert,\n  Container,\n  Row,\n  Col,\n  Card,\n  Form,\n  Button,\n} from \"react-bootstrap\";\n\nconst SignUp = (props) => {\n  const {\n    createUserWithEmailAndPassword,\n    setError,\n    error,\n    signInWithGoogle,\n    user,\n  } = props;\n  const credentials = useSelector(selectCredentials);\n  const [doesNotMatch, setDoesNotMatch] = useState(false);\n  if (doesNotMatch) {\n    setTimeout(() => {}, 1750);\n  }\n  const errorMessage = useSelector(selectErrorMessage);\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (credentials.password !== credentials.confirmPassword) {\n      setDoesNotMatch(true);\n    } else {\n      createUserWithEmailAndPassword(credentials.email, credentials.password);\n\n        dispatch(resetCredentials());\n\n    }\n  };\n  const dispatch = useDispatch();\n  if (error) {\n    dispatch(setErrorMessage(error));\n  }\n  if (user) {\n    dispatch(authenticate());\n  }\n  return (\n    <Container>\n      <Row className=\"justify-content-center\">\n        <Col>\n          <Card>\n            <Card.Header style={{ textAlign: \"center\" }} as=\"h5\">\n              Sign Up\n            </Card.Header>\n            <Card.Body>\n              <Form onSubmit={handleSubmit}>\n                <Form.Group controlId=\"formBasicEmail\">\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control\n                    onChange={(event) => {\n                      dispatch(setCredentials(event.target));\n                      setError(\"reset\");\n                      setDoesNotMatch(false);\n                    }}\n                    name=\"email\"\n                    type=\"email\"\n                    value={credentials.email}\n                    placeholder=\"Enter email\"\n                  />\n                  <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    onChange={(event) => {\n                      dispatch(setCredentials(event.target));\n                      setError(\"reset\");\n                      setDoesNotMatch(false);\n                    }}\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                  />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                  <Form.Label>Confirm password</Form.Label>\n                  <Form.Control\n                    onChange={(event) => {\n                      dispatch(setCredentials(event.target));\n                      setError(\"reset\");\n                      setDoesNotMatch(false);\n                    }}\n                    name=\"confirmPassword\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                  />\n                </Form.Group>\n                {doesNotMatch ? (\n                  <Alert variant=\"warning\">The passwords do not match</Alert>\n                ) : null}\n                {errorMessage && errorMessage !== \"reset\" ? (\n                  <Alert variant=\"warning\">{errorMessage}</Alert>\n                ) : null}\n\n                <Button\n                  className=\"mt-3\"\n                  block\n                  variant=\"outline-primary\"\n                  type=\"submit\"\n                >\n                  Sign Up\n                </Button>\n                <Button\n                  onClick={signInWithGoogle}\n                  className=\"mt-3\"\n                  block\n                  variant=\"outline-secondary\"\n                >\n                  Continue with Google\n                </Button>\n                <Button\n                  onClick={() => {\n                    dispatch(setSignIn());\n                    dispatch(resetErrorMessage());\n                  }}\n                  className=\"mt-3\"\n                  block\n                  variant=\"light\"\n                >\n                  Already have an account? Sign in\n                </Button>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nconst firebaseAppAuth = firebaseApp.auth();\n\nconst providers = {\n  googleProvider: new firebase.auth.GoogleAuthProvider(),\n};\n\nexport default withFirebaseAuth({\n  providers,\n  firebaseAppAuth,\n})(SignUp);\n"]},"metadata":{},"sourceType":"module"}