{"ast":null,"code":"var _jsxFileName = \"/Users/atorenherrinton/Development/recipeas/src/components/recipe-form/recipe-form.component.jsx\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport firebase from \"../../firebase/firebase\";\nimport { addIngredient, setIngredient, setFullRecipe, setUrl, resetIngredient, resetIngredientExists, selectFullRecipe, selectIngredient, selectIngredientExists, clearForm } from \"../../slices/input.slice\";\nimport { deactivateForm, validateForm, invalidateForm, selectIsValidated } from \"../../slices/form.slice\";\nimport { Container, Row, Col, Card, InputGroup, Form, FormControl, Button, Alert } from \"react-bootstrap\";\nimport List from \"../list/list.component\";\nimport { ButtonGroupContainer, ButtonContainer, AlertContainer, ListContainer } from \"./recipe-form.styles\";\nimport { Add } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecipeForm = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const isFormValidated = useSelector(selectIsValidated);\n  const ingredient = useSelector(selectIngredient);\n  const ingredientExists = useSelector(selectIngredientExists);\n\n  if (ingredientExists) {\n    setTimeout(() => {\n      dispatch(resetIngredient());\n      dispatch(resetIngredientExists());\n    }, 1750);\n  }\n\n  const fullRecipe = useSelector(selectFullRecipe);\n  const itemsRef = firebase.database().ref(\"items\");\n  console.log(ingredient);\n\n  const handleSubmit = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      dispatch(invalidateForm());\n      event.preventDefault();\n      event.stopPropagation();\n    } else {\n      dispatch(validateForm());\n      itemsRef.push(fullRecipe);\n      dispatch(clearForm());\n      dispatch(deactivateForm());\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            as: \"h5\",\n            children: \"New Recipe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              noValidate: true // validated={!isFormValidated}\n              ,\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Recipe Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  onChange: event => {\n                    dispatch(setFullRecipe(event.target));\n                  },\n                  type: \"text\",\n                  placeholder: \"Add the name of your recipe here\",\n                  name: \"title\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: \"Please enter a recipe name.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"basic-url\",\n                children: \"Image URL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                  children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                    id: \"basic-addon3\",\n                    children: \"https://\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  onChange: event => {\n                    dispatch(setUrl(event.target));\n                  },\n                  type: \"text\",\n                  name: \"imageUrl\",\n                  id: \"basic-url\",\n                  \"aria-describedby\": \"basic-addon3\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: \"Please enter an image URL.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlid: \"exampleForm.ControlTextarea1\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  onChange: event => {\n                    dispatch(setFullRecipe(event.target));\n                  },\n                  type: \"text\",\n                  placeholder: \"Add your description here\",\n                  name: \"description\",\n                  as: \"textarea\",\n                  rows: 2,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: \"Please enter a recipe description.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Ingredients\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-1\",\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  onChange: event => {\n                    dispatch(setIngredient(event.target));\n                  },\n                  onKeyPress: event => {\n                    if (event.key === \"Enter\") {\n                      dispatch(addIngredient());\n                    }\n                  },\n                  id: \"ingredients\",\n                  type: \"text\",\n                  placeholder: \"Add ingredients here\",\n                  name: \"ingredients\",\n                  \"aria-label\": \"Ingredients list\",\n                  \"aria-describedby\": \"basic-addon2\",\n                  value: ingredient // required\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    style: {\n                      borderRadius: \"0 0.25rem 0.25rem 0\"\n                    },\n                    onClick: () => {\n                      dispatch(addIngredient());\n                    },\n                    variant: \"outline-secondary\",\n                    children: /*#__PURE__*/_jsxDEV(Add, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: \"Please add at least one ingredient.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), ingredientExists ? /*#__PURE__*/_jsxDEV(AlertContainer, {\n                children: /*#__PURE__*/_jsxDEV(Alert, {\n                  variant: \"warning\",\n                  children: [\"You've already entered \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: ingredient\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 46\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this) : null, /*#__PURE__*/_jsxDEV(ListContainer, {\n                children: /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlid: \"exampleForm.ControlTextarea3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Directions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  onChange: event => {\n                    dispatch(setFullRecipe(event.target));\n                  },\n                  type: \"text\",\n                  name: \"directions\",\n                  as: \"textarea\",\n                  rows: 8,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: \"Please add the directions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ButtonGroupContainer, {\n                children: [/*#__PURE__*/_jsxDEV(ButtonContainer, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => {\n                      dispatch(validateForm());\n                      dispatch(deactivateForm());\n                      dispatch(clearForm());\n                    },\n                    variant: \"outline-secondary\",\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-primary\",\n                  type: \"submit\",\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecipeForm, \"/xvtAohqh/1BgBoickhW0q+/x6E=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = RecipeForm;\nexport default RecipeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeForm\");","map":{"version":3,"sources":["/Users/atorenherrinton/Development/recipeas/src/components/recipe-form/recipe-form.component.jsx"],"names":["React","useDispatch","useSelector","firebase","addIngredient","setIngredient","setFullRecipe","setUrl","resetIngredient","resetIngredientExists","selectFullRecipe","selectIngredient","selectIngredientExists","clearForm","deactivateForm","validateForm","invalidateForm","selectIsValidated","Container","Row","Col","Card","InputGroup","Form","FormControl","Button","Alert","List","ButtonGroupContainer","ButtonContainer","AlertContainer","ListContainer","Add","RecipeForm","dispatch","isFormValidated","ingredient","ingredientExists","setTimeout","fullRecipe","itemsRef","database","ref","console","log","handleSubmit","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","push","target","key","borderRadius"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport firebase from \"../../firebase/firebase\";\nimport {\n  addIngredient,\n  setIngredient,\n  setFullRecipe,\n  setUrl,\n  resetIngredient,\n  resetIngredientExists,\n  selectFullRecipe,\n  selectIngredient,\n  selectIngredientExists,\n  clearForm,\n} from \"../../slices/input.slice\";\nimport {\n  deactivateForm,\n  validateForm,\n  invalidateForm,\n  selectIsValidated,\n} from \"../../slices/form.slice\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  InputGroup,\n  Form,\n  FormControl,\n  Button,\n  Alert,\n} from \"react-bootstrap\";\nimport List from \"../list/list.component\";\n\nimport {\n  ButtonGroupContainer,\n  ButtonContainer,\n  AlertContainer,\n  ListContainer,\n} from \"./recipe-form.styles\";\n\nimport { Add } from \"@material-ui/icons\";\n\nconst RecipeForm = () => {\n  const dispatch = useDispatch();\n  const isFormValidated = useSelector(selectIsValidated);\n  const ingredient = useSelector(selectIngredient);\n  const ingredientExists = useSelector(selectIngredientExists);\n  if (ingredientExists) {\n    setTimeout(() => {\n      dispatch(resetIngredient());\n      dispatch(resetIngredientExists());\n    }, 1750);\n  }\n\n  const fullRecipe = useSelector(selectFullRecipe);\n  const itemsRef = firebase.database().ref(\"items\");\n  console.log(ingredient)\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      dispatch(invalidateForm());\n      event.preventDefault();\n      event.stopPropagation();\n    } else {\n      dispatch(validateForm());\n      itemsRef.push(fullRecipe);\n      dispatch(clearForm());\n      dispatch(deactivateForm());\n    }\n  };\n\n  return (\n    <Container>\n      <Row className=\"justify-content-center\">\n        <Col md={8}>\n          <Card>\n            <Card.Header as=\"h5\">New Recipe</Card.Header>\n            <Card.Body>\n              <Form\n                noValidate\n                // validated={!isFormValidated}\n                onSubmit={handleSubmit}\n              >\n                <Form.Group>\n                  <Form.Label>Recipe Name</Form.Label>\n                  <Form.Control\n                    onChange={(event) => {\n                      dispatch(setFullRecipe(event.target));\n                    }}\n                    type=\"text\"\n                    placeholder=\"Add the name of your recipe here\"\n                    name=\"title\"\n                    required\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please enter a recipe name.\n                  </Form.Control.Feedback>\n                </Form.Group>\n\n                <label htmlFor=\"basic-url\">Image URL</label>\n                <InputGroup className=\"mb-3\">\n                  <InputGroup.Prepend>\n                    <InputGroup.Text id=\"basic-addon3\">\n                      https://\n                    </InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <FormControl\n                    onChange={(event) => {\n                      dispatch(setUrl(event.target));\n                    }}\n                    type=\"text\"\n                    name=\"imageUrl\"\n                    id=\"basic-url\"\n                    aria-describedby=\"basic-addon3\"\n                    required\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please enter an image URL.\n                  </Form.Control.Feedback>\n                </InputGroup>\n\n                <Form.Group controlid=\"exampleForm.ControlTextarea1\">\n                  <Form.Label>Description</Form.Label>\n                  <Form.Control\n                    onChange={(event) => {\n                      dispatch(setFullRecipe(event.target));\n                    }}\n                    type=\"text\"\n                    placeholder=\"Add your description here\"\n                    name=\"description\"\n                    as=\"textarea\"\n                    rows={2}\n                    required\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please enter a recipe description.\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <label>Ingredients</label>\n                <InputGroup className=\"mb-1\">\n                  <FormControl\n                    onChange={(event) => {\n                      dispatch(setIngredient(event.target));\n                    }}\n                    onKeyPress={(event) => {\n                      if (event.key === \"Enter\") {\n                        dispatch(addIngredient());\n                      }\n                    }}\n                    id=\"ingredients\"\n                    type=\"text\"\n                    placeholder=\"Add ingredients here\"\n                    name=\"ingredients\"\n                    aria-label=\"Ingredients list\"\n                    aria-describedby=\"basic-addon2\"\n                    value={ingredient}\n                    // required\n                  />\n\n                  <InputGroup.Append>\n                    <Button\n                      style={{ borderRadius: \"0 0.25rem 0.25rem 0\" }}\n                      onClick={() => {\n                        dispatch(addIngredient());\n                      }}\n                      variant=\"outline-secondary\"\n                    >\n                      <Add fontSize=\"small\" />\n                    </Button>\n                  </InputGroup.Append>\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please add at least one ingredient.\n                  </Form.Control.Feedback>\n                </InputGroup>\n                {ingredientExists ? (\n                  <AlertContainer>\n                    <Alert variant=\"warning\">\n                      You've already entered <strong>{ingredient}</strong>\n                    </Alert>\n                  </AlertContainer>\n                ) : null}\n                <ListContainer>\n                  <List />\n                </ListContainer>\n                <Form.Group controlid=\"exampleForm.ControlTextarea3\">\n                  <Form.Label>Directions</Form.Label>\n                  <Form.Control\n                    onChange={(event) => {\n                      dispatch(setFullRecipe(event.target));\n                    }}\n                    type=\"text\"\n                    name=\"directions\"\n                    as=\"textarea\"\n                    rows={8}\n                    required\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please add the directions\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <ButtonGroupContainer>\n                  <ButtonContainer>\n                    <Button\n                      onClick={() => {\n                        dispatch(validateForm());\n                        dispatch(deactivateForm());\n                        dispatch(clearForm());\n                      }}\n                      variant=\"outline-secondary\"\n                    >\n                      Cancel\n                    </Button>\n                  </ButtonContainer>\n                  <Button variant=\"outline-primary\" type=\"submit\">\n                    Save\n                  </Button>\n                </ButtonGroupContainer>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default RecipeForm;\n"]},"metadata":{},"sourceType":"module"}