{"ast":null,"code":"/** @format */import React,{useState}from\"react\";import{useDispatch}from\"react-redux\";import{closeRecipe}from\"../../slices/recipe.slice\";import{Button,Card,Col,Container,Row,Table}from\"react-bootstrap\";import DropdownButton from\"../dropdown/dropdown.component\";import Ingredient from\"../ingredient/ingredient.component\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FullRecipe=function FullRecipe(props){var dispatch=useDispatch();return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(Row,{className:\"justify-content-center\",children:/*#__PURE__*/_jsx(Col,{xl:7,children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(DropdownButton,{id:props.id}),/*#__PURE__*/_jsx(Card.Img,{style:{height:\"25rem\",objectFit:\"cover\"},variant:\"top\",src:props.imageUrl}),/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h4\",{children:props.title}),/*#__PURE__*/_jsx(\"p\",{children:props.description}),props.ingredients?/*#__PURE__*/_jsxs(Table,{hover:true,size:\"sm\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"th\",{children:\"Ingredients\"})}),/*#__PURE__*/_jsx(\"tbody\",{children:props.ingredients.map(function(ingredient,idx){return/*#__PURE__*/_jsx(Ingredient,{ingredient:ingredient},idx);})})]}):null,/*#__PURE__*/_jsxs(Table,{hover:true,striped:true,size:\"sm\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"th\",{children:\"Directions\"})}),/*#__PURE__*/_jsx(\"tbody\",{children:props.directions.split(\"\\n\").map(function(step,idx){return/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{children:step},idx)});})})]}),/*#__PURE__*/_jsx(Button,{style:{width:\"100%\"},variant:\"outline-primary\",onClick:function onClick(){dispatch(closeRecipe());},children:\"Close Recipe\"})]})]})})})});};export default FullRecipe;","map":{"version":3,"sources":["/Users/atorenherrinton/Development/recipeas/client/src/components/full-recipe/full-recipe.component.jsx"],"names":["React","useState","useDispatch","closeRecipe","Button","Card","Col","Container","Row","Table","DropdownButton","Ingredient","FullRecipe","props","dispatch","id","height","objectFit","imageUrl","title","description","ingredients","map","ingredient","idx","directions","split","step","width"],"mappings":"AAAA,cAEA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,WAAT,KAA4B,2BAA5B,CACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,GAAvB,CAA4BC,SAA5B,CAAuCC,GAAvC,CAA4CC,KAA5C,KAAyD,iBAAzD,CACA,MAAOC,CAAAA,cAAP,KAA2B,gCAA3B,CACA,MAAOC,CAAAA,UAAP,KAAuB,oCAAvB,C,wFAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAC5B,GAAMC,CAAAA,QAAQ,CAAGZ,WAAW,EAA5B,CAEA,mBACE,KAAC,SAAD,wBACE,KAAC,GAAD,EAAK,SAAS,CAAC,wBAAf,uBACE,KAAC,GAAD,EAAK,EAAE,CAAE,CAAT,uBACE,MAAC,IAAD,yBACE,KAAC,cAAD,EAAgB,EAAE,CAAEW,KAAK,CAACE,EAA1B,EADF,cAEE,KAAC,IAAD,CAAM,GAAN,EACE,KAAK,CAAE,CAAEC,MAAM,CAAE,OAAV,CAAmBC,SAAS,CAAE,OAA9B,CADT,CAEE,OAAO,CAAC,KAFV,CAGE,GAAG,CAAEJ,KAAK,CAACK,QAHb,EAFF,cAOE,MAAC,IAAD,CAAM,IAAN,yBACE,oBAAKL,KAAK,CAACM,KAAX,EADF,cAEE,mBAAIN,KAAK,CAACO,WAAV,EAFF,CAGGP,KAAK,CAACQ,WAAN,cACC,MAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,IAAlB,wBACE,oCACE,mCADF,EADF,cAIE,uBACGR,KAAK,CAACQ,WAAN,CAAkBC,GAAlB,CAAsB,SAACC,UAAD,CAAaC,GAAb,qBACrB,KAAC,UAAD,EAAsB,UAAU,CAAED,UAAlC,EAAiBC,GAAjB,CADqB,EAAtB,CADH,EAJF,GADD,CAWG,IAdN,cAeE,MAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,OAAO,KAApB,CAAqB,IAAI,CAAC,IAA1B,wBACE,oCACE,kCADF,EADF,cAIE,uBACGX,KAAK,CAACY,UAAN,CAAiBC,KAAjB,CAAuB,IAAvB,EAA6BJ,GAA7B,CAAiC,SAACK,IAAD,CAAOH,GAAP,qBAChC,iCACE,oBAAeG,IAAf,EAASH,GAAT,CADF,EADgC,EAAjC,CADH,EAJF,GAfF,cA4BE,KAAC,MAAD,EACE,KAAK,CAAE,CAAEI,KAAK,CAAE,MAAT,CADT,CAEE,OAAO,CAAC,iBAFV,CAGE,OAAO,CAAE,kBAAM,CACbd,QAAQ,CAACX,WAAW,EAAZ,CAAR,CACD,CALH,0BA5BF,GAPF,GADF,EADF,EADF,EADF,CAsDD,CAzDD,CA2DA,cAAeS,CAAAA,UAAf","sourcesContent":["/** @format */\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { closeRecipe } from \"../../slices/recipe.slice\";\nimport { Button, Card, Col, Container, Row, Table } from \"react-bootstrap\";\nimport DropdownButton from \"../dropdown/dropdown.component\";\nimport Ingredient from \"../ingredient/ingredient.component\";\n\nconst FullRecipe = (props) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Container>\n      <Row className=\"justify-content-center\">\n        <Col xl={7}>\n          <Card>\n            <DropdownButton id={props.id} />\n            <Card.Img\n              style={{ height: \"25rem\", objectFit: \"cover\" }}\n              variant=\"top\"\n              src={props.imageUrl}\n            />\n            <Card.Body>\n              <h4>{props.title}</h4>\n              <p>{props.description}</p>\n              {props.ingredients ? (\n                <Table hover size=\"sm\">\n                  <thead>\n                    <th>Ingredients</th>\n                  </thead>\n                  <tbody>\n                    {props.ingredients.map((ingredient, idx) => (\n                      <Ingredient key={idx} ingredient={ingredient} />\n                    ))}\n                  </tbody>\n                </Table>\n              ) : null}\n              <Table hover striped size=\"sm\">\n                <thead>\n                  <th>Directions</th>\n                </thead>\n                <tbody>\n                  {props.directions.split(\"\\n\").map((step, idx) => (\n                    <tr>\n                      <td key={idx}>{step}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n\n              <Button\n                style={{ width: \"100%\" }}\n                variant=\"outline-primary\"\n                onClick={() => {\n                  dispatch(closeRecipe());\n                }}\n              >\n                Close Recipe\n              </Button>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default FullRecipe;\n"]},"metadata":{},"sourceType":"module"}