{"ast":null,"code":"var _jsxFileName = \"/Users/atorenherrinton/Development/recipeas/client/src/components/recipe-form/recipe-form.component.jsx\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport firebase from \"../../firebase/firebase\";\nimport { selectUserId } from \"../../slices/authenticate.slice\";\nimport { addIngredient, setIngredient, setFullRecipe, setUrl, resetIngredient, resetIngredientExists, selectFullRecipe, selectIngredient, selectIngredientExists, clearForm } from \"../../slices/input.slice\";\nimport { deactivateForm, validateForm, invalidateForm, selectIsValidated } from \"../../slices/form.slice\";\nimport { Container, Row, Col, Card, InputGroup, Form, FormControl, Button, Alert } from \"react-bootstrap\";\nimport List from \"../list/list.component\";\nimport { ButtonGroupContainer, ButtonContainer, AlertContainer, ListContainer } from \"./recipe-form.styles\";\nimport { Add } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecipeForm = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const userId = useSelector(selectUserId);\n  const [ingredient, setIngredient] = useState(\"\");\n  const [ingredientExists, setIngredientExists] = useState(false);\n  const [fullRecipe, setFullRecipe] = useState({\n    imageUrl: \"\",\n    title: \"\",\n    description: \"\",\n    ingredients: [],\n    directions: \"\"\n  });\n  const fractions = {\n    \"1/4\": \"¼\",\n    \"1/3\": \"⅓\",\n    \"1/2\": \"½\",\n    \"2/3\": \"⅔\",\n    \"3/4\": \"¾\"\n  };\n\n  if (ingredientExists) {\n    setTimeout(() => {\n      setIngredient(\"\");\n      setIngredientExists(false);\n    }, 1750);\n  }\n\n  const itemsRef = firebase.database().ref(\"users\").child(userId).child(\"items\");\n\n  const addIngredient = () => {\n    if (ingredient.length > 0 && !fullRecipe.ingredients.includes(ingredient)) {\n      setFullRecipe({ ...fullRecipe,\n        [\"ingredients\"]: [...fullRecipe.ingredients, ingredient]\n      });\n      setIngredient(\"\");\n    } else if (fullRecipe.ingredients.includes(ingredient)) {\n      setIngredientExists(true);\n    }\n\n    document.querySelector(\"#ingredients\").value = \"\";\n  };\n\n  const deleteIngredient = event => {\n    setFullRecipe({ ...fullRecipe,\n      [\"ingredients\"]: [...fullRecipe.ingredients, ...fullRecipe.ingredients.filter(ingredient => ingredient !== action.payload)]\n    });\n    setFullRecipe.ingredients = [...fullRecipe.ingredients.filter(ingredient => ingredient !== action.payload)];\n  };\n\n  const handleUpload = event => {\n    event.preventDefault();\n    const data = new FormData();\n    data.append(\"file\", this.uploadInput.files[0]);\n    data.append(\"filename\", this.fileName.value);\n    fetch(\"https://recipeaz.herokuapp.com/upload\", {\n      method: \"POST\",\n      body: data\n    }).then(response => {\n      response.json().then(body => {\n        this.setState({\n          imageURL: `https://recipeaz.herokuapp.com/${body.file}`\n        });\n      });\n    });\n  };\n\n  const handleSubmit = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      dispatch(invalidateForm());\n      event.preventDefault();\n      event.stopPropagation();\n    } else {\n      dispatch(validateForm());\n      itemsRef.push(fullRecipe);\n      dispatch(clearForm());\n      dispatch(deactivateForm());\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 7,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            style: {\n              textAlign: \"center\"\n            },\n            as: \"h5\",\n            children: \"New Recipe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              noValidate: true // validated={!isFormValidated}\n              ,\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Recipe Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  onChange: event => {\n                    const {\n                      value,\n                      name\n                    } = event.target;\n                    setFullRecipe({ ...fullRecipe,\n                      [name]: value\n                    });\n                  },\n                  type: \"text\",\n                  placeholder: \"Add the name of your recipe here\",\n                  name: \"title\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: \"Please enter a recipe name.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: /*#__PURE__*/_jsxDEV(Form.File, {\n                  id: \"exampleFormControlFile1\",\n                  label: \"Example file input\",\n                  onChange: () => {\n                    console.log(\"hello\");\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"basic-url\",\n                children: \"Image URL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                  children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                    id: \"basic-addon3\",\n                    children: \"https://\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  type: \"text\",\n                  name: \"imageUrl\",\n                  id: \"basic-url\",\n                  \"aria-describedby\": \"basic-addon3\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: \"Please enter an image URL.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlid: \"exampleForm.ControlTextarea1\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  onChange: event => {\n                    const {\n                      value,\n                      name\n                    } = event.target;\n                    setFullRecipe({ ...fullRecipe,\n                      [name]: value\n                    });\n                  },\n                  type: \"text\",\n                  placeholder: \"Add your description here\",\n                  name: \"description\",\n                  as: \"textarea\",\n                  rows: 2,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: \"Please enter a recipe description.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Ingredients\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-1\",\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  onChange: event => {\n                    setIngredient(event.target.value);\n\n                    for (const [key, value] of Object.entries(fractions)) {\n                      if (ingredient.includes(key)) {\n                        setIngredient(ingredient.replace(key, value));\n                      }\n                    }\n                  },\n                  onKeyPress: event => {\n                    if (event.key === \"Enter\") {\n                      addIngredient();\n                    }\n                  },\n                  id: \"ingredients\",\n                  type: \"text\",\n                  placeholder: \"Add ingredients here\",\n                  name: \"ingredients\",\n                  \"aria-label\": \"Ingredients list\",\n                  \"aria-describedby\": \"basic-addon2\",\n                  value: ingredient // required\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    style: {\n                      borderRadius: \"0 0.25rem 0.25rem 0\"\n                    },\n                    onClick: addIngredient,\n                    variant: \"outline-secondary\",\n                    children: /*#__PURE__*/_jsxDEV(Add, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 248,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: \"Please add at least one ingredient.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this), ingredientExists ? /*#__PURE__*/_jsxDEV(AlertContainer, {\n                children: /*#__PURE__*/_jsxDEV(Alert, {\n                  variant: \"warning\",\n                  children: [\"You've already entered \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: ingredient\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 46\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this) : null, /*#__PURE__*/_jsxDEV(ListContainer, {\n                children: /*#__PURE__*/_jsxDEV(List, {\n                  ingredients: fullRecipe.ingredients\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlid: \"exampleForm.ControlTextarea3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Directions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  onChange: event => {\n                    const {\n                      value,\n                      name\n                    } = event.target;\n                    setFullRecipe({ ...fullRecipe,\n                      [name]: value\n                    });\n                  },\n                  type: \"text\",\n                  name: \"directions\",\n                  as: \"textarea\",\n                  rows: 8,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: \"Please add the directions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ButtonGroupContainer, {\n                children: [/*#__PURE__*/_jsxDEV(ButtonContainer, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => {\n                      dispatch(validateForm());\n                      dispatch(deactivateForm());\n                      setIngredient(\"\");\n                      setFullRecipe({\n                        imageUrl: \"\",\n                        title: \"\",\n                        description: \"\",\n                        ingredients: [],\n                        directions: \"\"\n                      });\n                    },\n                    variant: \"outline-secondary\",\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-primary\",\n                  type: \"submit\",\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecipeForm, \"KsfcS+isCb1TRoUyL63NzMJYAa4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = RecipeForm;\nexport default RecipeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeForm\");","map":{"version":3,"sources":["/Users/atorenherrinton/Development/recipeas/client/src/components/recipe-form/recipe-form.component.jsx"],"names":["React","useState","useDispatch","useSelector","firebase","selectUserId","addIngredient","setIngredient","setFullRecipe","setUrl","resetIngredient","resetIngredientExists","selectFullRecipe","selectIngredient","selectIngredientExists","clearForm","deactivateForm","validateForm","invalidateForm","selectIsValidated","Container","Row","Col","Card","InputGroup","Form","FormControl","Button","Alert","List","ButtonGroupContainer","ButtonContainer","AlertContainer","ListContainer","Add","RecipeForm","dispatch","userId","ingredient","ingredientExists","setIngredientExists","fullRecipe","imageUrl","title","description","ingredients","directions","fractions","setTimeout","itemsRef","database","ref","child","length","includes","document","querySelector","value","deleteIngredient","event","filter","action","payload","handleUpload","preventDefault","data","FormData","append","uploadInput","files","fileName","fetch","method","body","then","response","json","setState","imageURL","file","handleSubmit","form","currentTarget","checkValidity","stopPropagation","push","textAlign","name","target","console","log","key","Object","entries","replace","borderRadius"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport firebase from \"../../firebase/firebase\";\nimport { selectUserId } from \"../../slices/authenticate.slice\";\nimport {\n  addIngredient,\n  setIngredient,\n  setFullRecipe,\n  setUrl,\n  resetIngredient,\n  resetIngredientExists,\n  selectFullRecipe,\n  selectIngredient,\n  selectIngredientExists,\n  clearForm,\n} from \"../../slices/input.slice\";\nimport {\n  deactivateForm,\n  validateForm,\n  invalidateForm,\n  selectIsValidated,\n} from \"../../slices/form.slice\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  InputGroup,\n  Form,\n  FormControl,\n  Button,\n  Alert,\n} from \"react-bootstrap\";\nimport List from \"../list/list.component\";\n\nimport {\n  ButtonGroupContainer,\n  ButtonContainer,\n  AlertContainer,\n  ListContainer,\n} from \"./recipe-form.styles\";\n\nimport { Add } from \"@material-ui/icons\";\n\nconst RecipeForm = () => {\n  const dispatch = useDispatch();\n  const userId = useSelector(selectUserId);\n\n  const [ingredient, setIngredient] = useState(\"\");\n  const [ingredientExists, setIngredientExists] = useState(false);\n  const [fullRecipe, setFullRecipe] = useState({\n    imageUrl: \"\",\n    title: \"\",\n    description: \"\",\n    ingredients: [],\n    directions: \"\",\n  });\n\n  const fractions = {\n    \"1/4\": \"¼\",\n    \"1/3\": \"⅓\",\n    \"1/2\": \"½\",\n    \"2/3\": \"⅔\",\n    \"3/4\": \"¾\",\n  };\n\n  if (ingredientExists) {\n    setTimeout(() => {\n      setIngredient(\"\");\n      setIngredientExists(false);\n    }, 1750);\n  }\n\n  const itemsRef = firebase\n    .database()\n    .ref(\"users\")\n    .child(userId)\n    .child(\"items\");\n\n  const addIngredient = () => {\n    if (ingredient.length > 0 && !fullRecipe.ingredients.includes(ingredient)) {\n      setFullRecipe({\n        ...fullRecipe,\n        [\"ingredients\"]: [...fullRecipe.ingredients, ingredient],\n      });\n      setIngredient(\"\");\n    } else if (fullRecipe.ingredients.includes(ingredient)) {\n      setIngredientExists(true);\n    }\n    document.querySelector(\"#ingredients\").value = \"\";\n  };\n  const deleteIngredient = (event) => {\n    setFullRecipe({\n      ...fullRecipe,\n      [\"ingredients\"]: [...fullRecipe.ingredients, ...fullRecipe.ingredients.filter(\n        (ingredient) => ingredient !== action.payload\n      )],\n    });\n    setFullRecipe.ingredients = [\n      ...fullRecipe.ingredients.filter(\n        (ingredient) => ingredient !== action.payload\n      ),\n    ];\n  };\n  const handleUpload = (event) => {\n    event.preventDefault();\n\n    const data = new FormData();\n    data.append(\"file\", this.uploadInput.files[0]);\n    data.append(\"filename\", this.fileName.value);\n\n    fetch(\"https://recipeaz.herokuapp.com/upload\", {\n      method: \"POST\",\n      body: data,\n    }).then((response) => {\n      response.json().then((body) => {\n        this.setState({\n          imageURL: `https://recipeaz.herokuapp.com/${body.file}`,\n        });\n      });\n    });\n  };\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      dispatch(invalidateForm());\n      event.preventDefault();\n      event.stopPropagation();\n    } else {\n      dispatch(validateForm());\n      itemsRef.push(fullRecipe);\n      dispatch(clearForm());\n      dispatch(deactivateForm());\n    }\n  };\n\n  return (\n    <Container>\n      <Row className=\"justify-content-center\">\n        <Col md={7}>\n          <Card>\n            <Card.Header style={{ textAlign: \"center\" }} as=\"h5\">\n              New Recipe\n            </Card.Header>\n            <Card.Body>\n              <Form\n                noValidate\n                // validated={!isFormValidated}\n                onSubmit={handleSubmit}\n              >\n                <Form.Group>\n                  <Form.Label>Recipe Name</Form.Label>\n                  <Form.Control\n                    onChange={(event) => {\n                      const { value, name } = event.target;\n                      setFullRecipe({ ...fullRecipe, [name]: value });\n                    }}\n                    type=\"text\"\n                    placeholder=\"Add the name of your recipe here\"\n                    name=\"title\"\n                    required\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please enter a recipe name.\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group>\n                  <Form.File\n                    id=\"exampleFormControlFile1\"\n                    label=\"Example file input\"\n                    onChange={() => {\n                      console.log(\"hello\");\n                    }}\n                  />\n                </Form.Group>\n                <label htmlFor=\"basic-url\">Image URL</label>\n                <InputGroup className=\"mb-3\">\n                  <InputGroup.Prepend>\n                    <InputGroup.Text id=\"basic-addon3\">\n                      https://\n                    </InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <FormControl\n                    type=\"text\"\n                    name=\"imageUrl\"\n                    id=\"basic-url\"\n                    aria-describedby=\"basic-addon3\"\n                    required\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please enter an image URL.\n                  </Form.Control.Feedback>\n                </InputGroup>\n\n                <Form.Group controlid=\"exampleForm.ControlTextarea1\">\n                  <Form.Label>Description</Form.Label>\n                  <Form.Control\n                    onChange={(event) => {\n                      const { value, name } = event.target;\n                      setFullRecipe({ ...fullRecipe, [name]: value });\n                    }}\n                    type=\"text\"\n                    placeholder=\"Add your description here\"\n                    name=\"description\"\n                    as=\"textarea\"\n                    rows={2}\n                    required\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please enter a recipe description.\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <label>Ingredients</label>\n                <InputGroup className=\"mb-1\">\n                  <FormControl\n                    onChange={(event) => {\n                      setIngredient(event.target.value);\n                      for (const [key, value] of Object.entries(fractions)) {\n                        if (ingredient.includes(key)) {\n                          setIngredient(ingredient.replace(key, value));\n                        }\n                      }\n                    }}\n                    onKeyPress={(event) => {\n                      if (event.key === \"Enter\") {\n                        addIngredient();\n                      }\n                    }}\n                    id=\"ingredients\"\n                    type=\"text\"\n                    placeholder=\"Add ingredients here\"\n                    name=\"ingredients\"\n                    aria-label=\"Ingredients list\"\n                    aria-describedby=\"basic-addon2\"\n                    value={ingredient}\n                    // required\n                  />\n\n                  <InputGroup.Append>\n                    <Button\n                      style={{ borderRadius: \"0 0.25rem 0.25rem 0\" }}\n                      onClick={addIngredient}\n                      variant=\"outline-secondary\"\n                    >\n                      <Add fontSize=\"small\" />\n                    </Button>\n                  </InputGroup.Append>\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please add at least one ingredient.\n                  </Form.Control.Feedback>\n                </InputGroup>\n                {ingredientExists ? (\n                  <AlertContainer>\n                    <Alert variant=\"warning\">\n                      You've already entered <strong>{ingredient}</strong>\n                    </Alert>\n                  </AlertContainer>\n                ) : null}\n                <ListContainer>\n                  <List ingredients={fullRecipe.ingredients} />\n                </ListContainer>\n                <Form.Group controlid=\"exampleForm.ControlTextarea3\">\n                  <Form.Label>Directions</Form.Label>\n                  <Form.Control\n                    onChange={(event) => {\n                      const { value, name } = event.target;\n                      setFullRecipe({ ...fullRecipe, [name]: value });\n                    }}\n                    type=\"text\"\n                    name=\"directions\"\n                    as=\"textarea\"\n                    rows={8}\n                    required\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please add the directions\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <ButtonGroupContainer>\n                  <ButtonContainer>\n                    <Button\n                      onClick={() => {\n                        dispatch(validateForm());\n                        dispatch(deactivateForm());\n                        setIngredient(\"\");\n                        setFullRecipe({\n                          imageUrl: \"\",\n                          title: \"\",\n                          description: \"\",\n                          ingredients: [],\n                          directions: \"\",\n                        });\n                      }}\n                      variant=\"outline-secondary\"\n                    >\n                      Cancel\n                    </Button>\n                  </ButtonContainer>\n                  <Button variant=\"outline-primary\" type=\"submit\">\n                    Save\n                  </Button>\n                </ButtonGroupContainer>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default RecipeForm;\n"]},"metadata":{},"sourceType":"module"}