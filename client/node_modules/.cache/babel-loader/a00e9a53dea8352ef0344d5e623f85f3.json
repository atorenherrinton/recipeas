{"ast":null,"code":"var _jsxFileName = \"/Users/atorenherrinton/Development/recipeas/client/src/components/recipe-form/recipe-form.component.jsx\";\n\n/** @format */\nimport React, { useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport firebase from \"../../firebase/firebase\";\nimport { selectUserId } from \"../../slices/authenticate.slice\";\nimport { addIngredient, setIngredient, setFullRecipe, setUrl, resetIngredient, resetIngredientExists, selectFullRecipe, selectIngredient, selectIngredientExists, clearForm } from \"../../slices/input.slice\";\nimport { deactivateForm, validateForm, invalidateForm, selectIsValidated } from \"../../slices/form.slice\";\nimport { Container, Row, Col, Card, InputGroup, Form, FormControl, Button, Alert } from \"react-bootstrap\";\nimport List from \"../list/list.component\";\nimport { ButtonGroupContainer, ButtonContainer, AlertContainer, ListContainer } from \"./recipe-form.styles\";\nimport { Add } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RecipeForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dispatch = useDispatch();\n    this.fullRecipe = useSelector(selectFullRecipe);\n    this.itemsRef = firebase.database().ref(\"users\").child(userId).child(\"items\");\n\n    this.handleUpload = event => {\n      event.preventDefault();\n      const data = new FormData();\n      data.append(\"file\", uploadInput.files[0]);\n      data.append(\"filename\", uploadInput.value);\n      fetch(\"http://localhost:5000/upload\", {\n        method: \"POST\",\n        body: data\n      }).then(response => {\n        response.json().then(body => {\n          console.log(body.file);\n        });\n      });\n    };\n\n    this.handleSubmit = event => {\n      const form = event.currentTarget;\n\n      if (form.checkValidity() === false) {\n        dispatch(invalidateForm());\n        event.preventDefault();\n        event.stopPropagation();\n      } else {\n        dispatch(validateForm());\n        itemsRef.push(fullRecipe);\n        dispatch(clearForm());\n        dispatch(deactivateForm());\n      }\n    };\n\n    this.uploadInput = /*#__PURE__*/React.createRef();\n    this.userId = useSelector(selectUserId);\n    this.ingredient = useSelector(selectIngredient);\n    this.ingredientExists = useSelector(selectIngredientExists);\n  }\n\n  if(ingredientExists) {\n    setTimeout(() => {\n      dispatch(resetIngredient());\n      dispatch(resetIngredientExists());\n    }, 1750);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 7,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              style: {\n                textAlign: \"center\"\n              },\n              as: \"h5\",\n              children: \"New Recipe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                noValidate: true // validated={!isFormValidated}\n                ,\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Recipe Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    onChange: event => {\n                      dispatch(setFullRecipe(event.target));\n                    },\n                    type: \"text\",\n                    placeholder: \"Add the name of your recipe here\",\n                    name: \"title\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Please enter a recipe name.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: /*#__PURE__*/_jsxDEV(Form.File, {\n                    label: \"Recipe Image\",\n                    type: \"file\",\n                    ref: this.uploadInput,\n                    onChange: handleUpload\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"basic-url\",\n                  children: \"Image URL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                    children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                      children: \"https://\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    onChange: event => {\n                      dispatch(setUrl(event.target));\n                    },\n                    type: \"text\",\n                    name: \"imageUrl\",\n                    \"aria-describedby\": \"imageUrl\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Please enter an image URL.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    onChange: event => {\n                      dispatch(setFullRecipe(event.target));\n                    },\n                    type: \"text\",\n                    placeholder: \"Add your description here\",\n                    name: \"description\",\n                    as: \"textarea\",\n                    rows: 2,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Please enter a recipe description.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Ingredients\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                  className: \"mb-1\",\n                  children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                    onChange: event => {\n                      dispatch(setIngredient(event.target));\n                    },\n                    onKeyPress: event => {\n                      if (event.key === \"Enter\") {\n                        dispatch(addIngredient());\n                      }\n                    },\n                    type: \"text\",\n                    placeholder: \"Add ingredients here\",\n                    name: \"ingredients\",\n                    \"aria-label\": \"Ingredients list\",\n                    \"aria-describedby\": \"Ingredients list\",\n                    value: ingredient // required\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      style: {\n                        borderRadius: \"0 0.25rem 0.25rem 0\"\n                      },\n                      onClick: () => {\n                        dispatch(addIngredient());\n                      },\n                      variant: \"outline-secondary\",\n                      children: /*#__PURE__*/_jsxDEV(Add, {\n                        fontSize: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 201,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 194,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Please add at least one ingredient.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 19\n                }, this), ingredientExists ? /*#__PURE__*/_jsxDEV(AlertContainer, {\n                  children: /*#__PURE__*/_jsxDEV(Alert, {\n                    variant: \"warning\",\n                    children: [\"You've already entered \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: ingredient\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 211,\n                      columnNumber: 48\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 21\n                }, this) : null, /*#__PURE__*/_jsxDEV(ListContainer, {\n                  children: /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Directions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    onChange: event => {\n                      dispatch(setFullRecipe(event.target));\n                    },\n                    type: \"text\",\n                    name: \"directions\",\n                    as: \"textarea\",\n                    rows: 8,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Please add the directions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ButtonGroupContainer, {\n                  children: [/*#__PURE__*/_jsxDEV(ButtonContainer, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: () => {\n                        dispatch(validateForm());\n                        dispatch(deactivateForm());\n                        dispatch(clearForm());\n                      },\n                      variant: \"outline-secondary\",\n                      children: \"Cancel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-primary\",\n                    type: \"submit\",\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default RecipeForm;","map":{"version":3,"sources":["/Users/atorenherrinton/Development/recipeas/client/src/components/recipe-form/recipe-form.component.jsx"],"names":["React","useRef","useDispatch","useSelector","firebase","selectUserId","addIngredient","setIngredient","setFullRecipe","setUrl","resetIngredient","resetIngredientExists","selectFullRecipe","selectIngredient","selectIngredientExists","clearForm","deactivateForm","validateForm","invalidateForm","selectIsValidated","Container","Row","Col","Card","InputGroup","Form","FormControl","Button","Alert","List","ButtonGroupContainer","ButtonContainer","AlertContainer","ListContainer","Add","RecipeForm","Component","constructor","props","dispatch","fullRecipe","itemsRef","database","ref","child","userId","handleUpload","event","preventDefault","data","FormData","append","uploadInput","files","value","fetch","method","body","then","response","json","console","log","file","handleSubmit","form","currentTarget","checkValidity","stopPropagation","push","createRef","ingredient","ingredientExists","if","setTimeout","render","textAlign","target","key","borderRadius"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React, { useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport firebase from \"../../firebase/firebase\";\nimport { selectUserId } from \"../../slices/authenticate.slice\";\nimport {\n  addIngredient,\n  setIngredient,\n  setFullRecipe,\n  setUrl,\n  resetIngredient,\n  resetIngredientExists,\n  selectFullRecipe,\n  selectIngredient,\n  selectIngredientExists,\n  clearForm,\n} from \"../../slices/input.slice\";\nimport {\n  deactivateForm,\n  validateForm,\n  invalidateForm,\n  selectIsValidated,\n} from \"../../slices/form.slice\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  InputGroup,\n  Form,\n  FormControl,\n  Button,\n  Alert,\n} from \"react-bootstrap\";\nimport List from \"../list/list.component\";\n\nimport {\n  ButtonGroupContainer,\n  ButtonContainer,\n  AlertContainer,\n  ListContainer,\n} from \"./recipe-form.styles\";\n\nimport { Add } from \"@material-ui/icons\";\n\nclass RecipeForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.uploadInput = React.createRef();\n    this.userId = useSelector(selectUserId);\n    this.ingredient = useSelector(selectIngredient);\n    this.ingredientExists = useSelector(selectIngredientExists);\n  }\n  dispatch = useDispatch();\n  \n  \n  \n  if(ingredientExists) {\n    setTimeout(() => {\n      dispatch(resetIngredient());\n      dispatch(resetIngredientExists());\n    }, 1750);\n  }\n\n  fullRecipe = useSelector(selectFullRecipe);\n  itemsRef = firebase.database().ref(\"users\").child(userId).child(\"items\");\n\n  handleUpload = (event) => {\n    event.preventDefault();\n\n    const data = new FormData();\n    data.append(\"file\", uploadInput.files[0]);\n    data.append(\"filename\", uploadInput.value);\n\n    fetch(\"http://localhost:5000/upload\", {\n      method: \"POST\",\n      body: data,\n    }).then((response) => {\n      response.json().then((body) => {\n        console.log(body.file);\n      });\n    });\n  };\n\n  handleSubmit = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      dispatch(invalidateForm());\n      event.preventDefault();\n      event.stopPropagation();\n    } else {\n      dispatch(validateForm());\n      itemsRef.push(fullRecipe);\n      dispatch(clearForm());\n      dispatch(deactivateForm());\n    }\n  };\n  render() {\n    return (\n      <Container>\n        <Row className=\"justify-content-center\">\n          <Col md={7}>\n            <Card>\n              <Card.Header style={{ textAlign: \"center\" }} as=\"h5\">\n                New Recipe\n              </Card.Header>\n              <Card.Body>\n                <Form\n                  noValidate\n                  // validated={!isFormValidated}\n                  onSubmit={handleSubmit}\n                >\n                  <Form.Group>\n                    <Form.Label>Recipe Name</Form.Label>\n                    <Form.Control\n                      onChange={(event) => {\n                        dispatch(setFullRecipe(event.target));\n                      }}\n                      type=\"text\"\n                      placeholder=\"Add the name of your recipe here\"\n                      name=\"title\"\n                      required\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      Please enter a recipe name.\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                  <Form.Group>\n                    <Form.File\n                      label=\"Recipe Image\"\n                      type=\"file\"\n                      ref={this.uploadInput}\n                      onChange={handleUpload}\n                    />\n                  </Form.Group>\n                  <label htmlFor=\"basic-url\">Image URL</label>\n                  <InputGroup className=\"mb-3\">\n                    <InputGroup.Prepend>\n                      <InputGroup.Text>https://</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                      onChange={(event) => {\n                        dispatch(setUrl(event.target));\n                      }}\n                      type=\"text\"\n                      name=\"imageUrl\"\n                      aria-describedby=\"imageUrl\"\n                      required\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      Please enter an image URL.\n                    </Form.Control.Feedback>\n                  </InputGroup>\n\n                  <Form.Group>\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control\n                      onChange={(event) => {\n                        dispatch(setFullRecipe(event.target));\n                      }}\n                      type=\"text\"\n                      placeholder=\"Add your description here\"\n                      name=\"description\"\n                      as=\"textarea\"\n                      rows={2}\n                      required\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      Please enter a recipe description.\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                  <label>Ingredients</label>\n                  <InputGroup className=\"mb-1\">\n                    <FormControl\n                      onChange={(event) => {\n                        dispatch(setIngredient(event.target));\n                      }}\n                      onKeyPress={(event) => {\n                        if (event.key === \"Enter\") {\n                          dispatch(addIngredient());\n                        }\n                      }}\n                      type=\"text\"\n                      placeholder=\"Add ingredients here\"\n                      name=\"ingredients\"\n                      aria-label=\"Ingredients list\"\n                      aria-describedby=\"Ingredients list\"\n                      value={ingredient}\n                      // required\n                    />\n\n                    <InputGroup.Append>\n                      <Button\n                        style={{ borderRadius: \"0 0.25rem 0.25rem 0\" }}\n                        onClick={() => {\n                          dispatch(addIngredient());\n                        }}\n                        variant=\"outline-secondary\"\n                      >\n                        <Add fontSize=\"small\" />\n                      </Button>\n                    </InputGroup.Append>\n                    <Form.Control.Feedback type=\"invalid\">\n                      Please add at least one ingredient.\n                    </Form.Control.Feedback>\n                  </InputGroup>\n                  {ingredientExists ? (\n                    <AlertContainer>\n                      <Alert variant=\"warning\">\n                        You've already entered <strong>{ingredient}</strong>\n                      </Alert>\n                    </AlertContainer>\n                  ) : null}\n                  <ListContainer>\n                    <List />\n                  </ListContainer>\n                  <Form.Group>\n                    <Form.Label>Directions</Form.Label>\n                    <Form.Control\n                      onChange={(event) => {\n                        dispatch(setFullRecipe(event.target));\n                      }}\n                      type=\"text\"\n                      name=\"directions\"\n                      as=\"textarea\"\n                      rows={8}\n                      required\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      Please add the directions\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                  <ButtonGroupContainer>\n                    <ButtonContainer>\n                      <Button\n                        onClick={() => {\n                          dispatch(validateForm());\n                          dispatch(deactivateForm());\n                          dispatch(clearForm());\n                        }}\n                        variant=\"outline-secondary\"\n                      >\n                        Cancel\n                      </Button>\n                    </ButtonContainer>\n                    <Button variant=\"outline-primary\" type=\"submit\">\n                      Save\n                    </Button>\n                  </ButtonGroupContainer>\n                </Form>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default RecipeForm;\n"]},"metadata":{},"sourceType":"module"}