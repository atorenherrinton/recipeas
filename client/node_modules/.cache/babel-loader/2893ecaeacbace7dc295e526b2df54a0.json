{"ast":null,"code":"var _jsxFileName = \"/Users/atorenherrinton/Development/recipeas/src/components/full-recipe/full-recipe.component.jsx\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { closeRecipe } from \"../../slices/recipe.slice\";\nimport firebase from \"../../firebase/firebase\";\nimport { Button, ButtonGroup, Card, Col, Container, Dropdown, Row } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FullRecipe = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const itemRef = firebase.database().ref(`/items/${props.id}`);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xl: 7,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(ImageContainer, {\n            children: [/*#__PURE__*/_jsxDEV(ButtonContainer, {\n              children: /*#__PURE__*/_jsxDEV(Dropdown, {\n                as: ButtonGroup,\n                style: {\n                  width: \"100%\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n                  style: {\n                    opacity: \"0.9\"\n                  },\n                  variant: \"info\",\n                  size: \"sm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                  children: /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                    onClick: () => {\n                      itemRef.remove();\n                    },\n                    children: \"Delete Recipe\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 34,\n                    columnNumber: 15\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Card.Img, {\n              style: {\n                height: \"25rem\",\n                objectFit: \"cover\"\n              },\n              variant: \"top\",\n              src: props.imageUrl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: props.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: props.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), props.ingredients ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Ingredients\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: props.ingredients.map((ingredient, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: ingredient\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Directions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), props.directions.split(\"\\n\").map((step, idx) => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: step\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(Dropdown, {\n              as: ButtonGroup,\n              style: {\n                width: \"100%\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  width: \"95%\"\n                },\n                variant: \"outline-primary\",\n                onClick: () => {\n                  dispatch(closeRecipe());\n                },\n                children: \"Close Recipe\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n                split: true,\n                variant: \"outline-primary\",\n                id: \"dropdown-split-basic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                children: /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  onClick: () => {\n                    itemRef.remove();\n                    dispatch(closeRecipe());\n                  },\n                  children: \"Delete Recipe\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FullRecipe, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = FullRecipe;\nexport default FullRecipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"FullRecipe\");","map":{"version":3,"sources":["/Users/atorenherrinton/Development/recipeas/src/components/full-recipe/full-recipe.component.jsx"],"names":["React","useDispatch","closeRecipe","firebase","Button","ButtonGroup","Card","Col","Container","Dropdown","Row","FullRecipe","props","dispatch","itemRef","database","ref","id","width","opacity","remove","height","objectFit","imageUrl","title","description","ingredients","map","ingredient","idx","directions","split","step"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { closeRecipe } from \"../../slices/recipe.slice\";\nimport firebase from \"../../firebase/firebase\";\nimport {\n  Button,\n  ButtonGroup,\n  Card,\n  Col,\n  Container,\n  Dropdown,\n  Row,\n} from \"react-bootstrap\";\n\nconst FullRecipe = (props) => {\n  const dispatch = useDispatch();\n  const itemRef = firebase.database().ref(`/items/${props.id}`);\n  return (\n    <Container>\n      <Row className=\"justify-content-center\">\n        <Col xl={7}>\n          <Card>\n            <ImageContainer>\n          <ButtonContainer>\n          <Dropdown as={ButtonGroup} style={{ width: \"100%\" }}>\n            <Dropdown.Toggle\n              style={{ opacity: \"0.9\" }}\n              variant=\"info\"\n              size=\"sm\"\n            />\n            <Dropdown.Menu>\n              <Dropdown.Item\n                onClick={() => {\n                  itemRef.remove();\n                }}\n              >\n                Delete Recipe\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </ButtonContainer>\n            <Card.Img\n              style={{ height: \"25rem\", objectFit: \"cover\" }}\n              variant=\"top\"\n              src={props.imageUrl}\n            />\n            </ImageContainer>\n            <Card.Body>\n              <h4>{props.title}</h4>\n              <p>{props.description}</p>\n              {props.ingredients ? (\n                <div>\n                  <h5>Ingredients</h5>\n                  <ul>\n                    {props.ingredients.map((ingredient, idx) => (\n                      <li key={idx}>{ingredient}</li>\n                    ))}\n                  </ul>\n                </div>\n              ) : null}\n              <h5>Directions</h5>\n              {props.directions.split(\"\\n\").map((step, idx) => (\n                <p key={idx}>{step}</p>\n              ))}\n\n              <Dropdown as={ButtonGroup} style={{ width: \"100%\" }}>\n                <Button\n                  style={{ width: \"95%\" }}\n                  variant=\"outline-primary\"\n                  onClick={() => {\n                    dispatch(closeRecipe());\n                  }}\n                >\n                  Close Recipe\n                </Button>\n\n                <Dropdown.Toggle\n                  split\n                  variant=\"outline-primary\"\n                  id=\"dropdown-split-basic\"\n                />\n                <Dropdown.Menu>\n                  <Dropdown.Item\n                    onClick={() => {\n                      itemRef.remove();\n                      dispatch(closeRecipe());\n                    }}\n                  >\n                    Delete Recipe\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default FullRecipe;\n"]},"metadata":{},"sourceType":"module"}