{"ast":null,"code":"var _jsxFileName = \"/Users/atorenherrinton/Development/recipeas/client/src/components/reset-password/reset-password.component.jsx\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React, { useState } from \"react\";\nimport withFirebaseAuth from \"react-with-firebase-auth\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseApp from \"../../firebase/firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectCredentials, setCredentials, setResetPassword } from \"../../slices/authenticate.slice\";\nimport { Alert, Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResetPassword = props => {\n  _s();\n\n  const {\n    resetEmail\n  } = props;\n  const credentials = useSelector(selectCredentials);\n  const [emailSent, setEmailSent] = useState(false);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    resetEmail(credentials.email);\n    setTimeout(() => {\n      setEmailSent(True);\n    }, 1000);\n    setTimeout(() => {\n      setEmailSent(False);\n    }, 1000);\n    dispatch(setResetPassword());\n  };\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            style: {\n              textAlign: \"center\"\n            },\n            as: \"h5\",\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"success\",\n              children: \"An email has been sent to reset your password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formBasicEmail\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Email address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  onChange: event => {\n                    dispatch(setCredentials(event.target));\n                  },\n                  name: \"email\",\n                  type: \"email\",\n                  value: credentials.email,\n                  placeholder: \"Enter email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"mt-2\",\n                block: true,\n                variant: \"outline-primary\",\n                type: \"submit\",\n                children: \"Reset Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResetPassword, \"Fzd/hW3ptW/BzHDr/mPlack4rFs=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ResetPassword;\nconst firebaseAppAuth = firebaseApp.auth();\nconst providers = {\n  googleProvider: new firebase.auth.GoogleAuthProvider()\n};\nexport default withFirebaseAuth({\n  providers,\n  firebaseAppAuth\n})(ResetPassword);\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["/Users/atorenherrinton/Development/recipeas/client/src/components/reset-password/reset-password.component.jsx"],"names":["React","useState","withFirebaseAuth","firebase","firebaseApp","useDispatch","useSelector","selectCredentials","setCredentials","setResetPassword","Alert","Container","Row","Col","Card","Form","Button","ResetPassword","props","resetEmail","credentials","emailSent","setEmailSent","handleSubmit","event","preventDefault","email","setTimeout","True","False","dispatch","textAlign","target","firebaseAppAuth","auth","providers","googleProvider","GoogleAuthProvider"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React, { useState } from \"react\";\nimport withFirebaseAuth from \"react-with-firebase-auth\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseApp from \"../../firebase/firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectCredentials,\n  setCredentials,\n  setResetPassword,\n} from \"../../slices/authenticate.slice\";\nimport {\n  Alert,\n  Container,\n  Row,\n  Col,\n  Card,\n  Form,\n  Button,\n} from \"react-bootstrap\";\n\nconst ResetPassword = (props) => {\n  const { resetEmail } = props;\n  const credentials = useSelector(selectCredentials);\n  const [emailSent, setEmailSent] = useState(false);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    resetEmail(credentials.email);\n    setTimeout(() => {\n      setEmailSent(True);\n    }, 1000);\n    setTimeout(() => {\n      setEmailSent(False);\n    }, 1000);\n\n    dispatch(setResetPassword());\n  };\n  const dispatch = useDispatch();\n  return (\n    <Container>\n      <Row className=\"justify-content-center\">\n        <Col>\n          <Card>\n            <Card.Header style={{ textAlign: \"center\" }} as=\"h5\">\n              Reset Password\n            </Card.Header>\n            <Card.Body>\n              <Alert variant=\"success\">\n                An email has been sent to reset your password\n              </Alert>\n              <Form onSubmit={handleSubmit}>\n                <Form.Group controlId=\"formBasicEmail\">\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control\n                    onChange={(event) => {\n                      dispatch(setCredentials(event.target));\n                    }}\n                    name=\"email\"\n                    type=\"email\"\n                    value={credentials.email}\n                    placeholder=\"Enter email\"\n                  />\n                </Form.Group>\n\n                <Button\n                  className=\"mt-2\"\n                  block\n                  variant=\"outline-primary\"\n                  type=\"submit\"\n                >\n                  Reset Password\n                </Button>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nconst firebaseAppAuth = firebaseApp.auth();\n\nconst providers = {\n  googleProvider: new firebase.auth.GoogleAuthProvider(),\n};\n\nexport default withFirebaseAuth({\n  providers,\n  firebaseAppAuth,\n})(ResetPassword);\n"]},"metadata":{},"sourceType":"module"}