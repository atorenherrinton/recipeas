{"ast":null,"code":"/** @format */\nimport { createSlice } from \"@reduxjs/toolkit\";\nexport const authenticateSlice = createSlice({\n  name: \"authenticate\",\n  initialState: {\n    isAuthenticated: false,\n    isSignIn: false,\n    isSignUp: false\n  },\n  reducers: {\n    authenticate: state => {\n      state.isAuthenticated = true;\n    },\n    deauthenticate: state => {\n      state.isAuthenticated = false;\n    },\n    setSignIn: state => {\n      state.isSignIn = !state.isSignIn;\n    },\n    setSignUp: state => {\n      state.isSignUp = true;\n    }\n  }\n});\nexport const {\n  authenticate,\n  deauthenticate,\n  setSignIn,\n  setSignUp\n} = authenticateSlice.actions; // The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\n\nexport const selectIsAuthenticated = state => state.authenticate.isAuthenticated;\nexport const selectIsSignIn = state => state.authenticate.isSignIn;\nexport const selectIsSignUp = state => state.authenticate.isSignUp;\nexport default authenticateSlice.reducer;","map":{"version":3,"sources":["/Users/atorenherrinton/Development/recipeas/client/src/slices/authenticate.slice.js"],"names":["createSlice","authenticateSlice","name","initialState","isAuthenticated","isSignIn","isSignUp","reducers","authenticate","state","deauthenticate","setSignIn","setSignUp","actions","selectIsAuthenticated","selectIsSignIn","selectIsSignUp","reducer"],"mappings":"AAAA;AAEA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,iBAAiB,GAAGD,WAAW,CAAC;AAC3CE,EAAAA,IAAI,EAAE,cADqC;AAE3CC,EAAAA,YAAY,EAAE;AACZC,IAAAA,eAAe,EAAE,KADL;AAEZC,IAAAA,QAAQ,EAAE,KAFE;AAGZC,IAAAA,QAAQ,EAAE;AAHE,GAF6B;AAO3CC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,EAAGC,KAAD,IAAW;AACvBA,MAAAA,KAAK,CAACL,eAAN,GAAwB,IAAxB;AACD,KAHO;AAIRM,IAAAA,cAAc,EAAGD,KAAD,IAAW;AACzBA,MAAAA,KAAK,CAACL,eAAN,GAAwB,KAAxB;AACD,KANO;AAORO,IAAAA,SAAS,EAAGF,KAAD,IAAW;AACpBA,MAAAA,KAAK,CAACJ,QAAN,GAAiB,CAACI,KAAK,CAACJ,QAAxB;AACD,KATO;AAURO,IAAAA,SAAS,EAAGH,KAAD,IAAW;AACpBA,MAAAA,KAAK,CAACH,QAAN,GAAiB,IAAjB;AACD;AAZO;AAPiC,CAAD,CAArC;AAuBP,OAAO,MAAM;AACXE,EAAAA,YADW;AAEXE,EAAAA,cAFW;AAGXC,EAAAA,SAHW;AAIXC,EAAAA;AAJW,IAKTX,iBAAiB,CAACY,OALf,C,CAOP;AACA;AACA;;AACA,OAAO,MAAMC,qBAAqB,GAAIL,KAAD,IACnCA,KAAK,CAACD,YAAN,CAAmBJ,eADd;AAEP,OAAO,MAAMW,cAAc,GAAIN,KAAD,IAAWA,KAAK,CAACD,YAAN,CAAmBH,QAArD;AACP,OAAO,MAAMW,cAAc,GAAIP,KAAD,IAAWA,KAAK,CAACD,YAAN,CAAmBF,QAArD;AAEP,eAAeL,iBAAiB,CAACgB,OAAjC","sourcesContent":["/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nexport const authenticateSlice = createSlice({\n  name: \"authenticate\",\n  initialState: {\n    isAuthenticated: false,\n    isSignIn: false,\n    isSignUp: false,\n  },\n  reducers: {\n    authenticate: (state) => {\n      state.isAuthenticated = true;\n    },\n    deauthenticate: (state) => {\n      state.isAuthenticated = false;\n    },\n    setSignIn: (state) => {\n      state.isSignIn = !state.isSignIn;\n    },\n    setSignUp: (state) => {\n      state.isSignUp = true;\n    },\n  },\n});\n\nexport const {\n  authenticate,\n  deauthenticate,\n  setSignIn,\n  setSignUp,\n} = authenticateSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectIsAuthenticated = (state) =>\n  state.authenticate.isAuthenticated;\nexport const selectIsSignIn = (state) => state.authenticate.isSignIn;\nexport const selectIsSignUp = (state) => state.authenticate.isSignUp;\n\nexport default authenticateSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}