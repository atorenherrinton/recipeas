[{"/Users/atorenherrinton/Development/recipeas/client/src/index.js":"1","/Users/atorenherrinton/Development/recipeas/client/src/App.js":"2","/Users/atorenherrinton/Development/recipeas/client/src/serviceWorker.js":"3","/Users/atorenherrinton/Development/recipeas/client/src/app/store.js":"4","/Users/atorenherrinton/Development/recipeas/client/src/firebase/firebase.js":"5","/Users/atorenherrinton/Development/recipeas/client/src/slices/recipe.slice.js":"6","/Users/atorenherrinton/Development/recipeas/client/src/slices/input.slice.js":"7","/Users/atorenherrinton/Development/recipeas/client/src/slices/form.slice.js":"8","/Users/atorenherrinton/Development/recipeas/client/src/components/header/header.component.jsx":"9","/Users/atorenherrinton/Development/recipeas/client/src/components/body/body.component.jsx":"10","/Users/atorenherrinton/Development/recipeas/client/src/components/body/body.styles.jsx":"11","/Users/atorenherrinton/Development/recipeas/client/src/components/create-button/create-button.component.jsx":"12","/Users/atorenherrinton/Development/recipeas/client/src/components/recipe-list/recipe-list.component.jsx":"13","/Users/atorenherrinton/Development/recipeas/client/src/components/new-recipe/new-recipe.component.jsx":"14","/Users/atorenherrinton/Development/recipeas/client/src/components/saved-recipe-card/saved-recipe-card.component.jsx":"15","/Users/atorenherrinton/Development/recipeas/client/src/components/getting-started/getting-started.component.jsx":"16","/Users/atorenherrinton/Development/recipeas/client/src/components/full-recipe/full-recipe.component.jsx":"17","/Users/atorenherrinton/Development/recipeas/client/src/components/recipe-form/recipe-form.component.jsx":"18","/Users/atorenherrinton/Development/recipeas/client/src/components/recipe-url/recipe-url.component.jsx":"19","/Users/atorenherrinton/Development/recipeas/client/src/components/recipe-url/recipe-url.styles.jsx":"20","/Users/atorenherrinton/Development/recipeas/client/src/components/recipe-form/recipe-form.styles.jsx":"21","/Users/atorenherrinton/Development/recipeas/client/src/components/getting-started/getting-started.styles.jsx":"22","/Users/atorenherrinton/Development/recipeas/client/src/components/list/list.component.jsx":"23","/Users/atorenherrinton/Development/recipeas/client/src/components/dropdown/dropdown.component.jsx":"24","/Users/atorenherrinton/Development/recipeas/client/src/components/dropdown/dropdown.styles.jsx":"25","/Users/atorenherrinton/Development/recipeas/client/src/components/list/list.styles.jsx":"26","/Users/atorenherrinton/Development/recipeas/client/src/components/list-item/list-item.component.jsx":"27","/Users/atorenherrinton/Development/recipeas/client/src/components/ingredient/ingredient.component.jsx":"28","/Users/atorenherrinton/Development/recipeas/client/src/components/sign-up/sign-up.component.jsx":"29","/Users/atorenherrinton/Development/recipeas/client/src/slices/authenticate.slice.js":"30","/Users/atorenherrinton/Development/recipeas/client/src/components/authenticate/authenticate.component.jsx":"31","/Users/atorenherrinton/Development/recipeas/client/src/components/sign-in/sign-in.component.jsx":"32","/Users/atorenherrinton/Development/recipeas/client/src/components/signout-button/signout-button.component.jsx":"33","/Users/atorenherrinton/Development/recipeas/client/src/components/reset-password/reset-password.component.jsx":"34","/Users/atorenherrinton/Development/recipeas/client/src/components/authenticate/authenticate.styles.jsx":"35"},{"size":692,"mtime":1614375206718,"results":"36","hashOfConfig":"37"},{"size":1630,"mtime":1614972315605,"results":"38","hashOfConfig":"37"},{"size":5141,"mtime":1614375206718,"results":"39","hashOfConfig":"37"},{"size":466,"mtime":1614887603985,"results":"40","hashOfConfig":"37"},{"size":498,"mtime":1614887438447,"results":"41","hashOfConfig":"37"},{"size":1507,"mtime":1614887471102,"results":"42","hashOfConfig":"37"},{"size":3529,"mtime":1615319485114,"results":"43","hashOfConfig":"37"},{"size":1703,"mtime":1614887469029,"results":"44","hashOfConfig":"37"},{"size":769,"mtime":1615250440775,"results":"45","hashOfConfig":"37"},{"size":1172,"mtime":1614919158939,"results":"46","hashOfConfig":"37"},{"size":146,"mtime":1614375206715,"results":"47","hashOfConfig":"37"},{"size":861,"mtime":1615251388796,"results":"48","hashOfConfig":"37"},{"size":1772,"mtime":1615228047940,"results":"49","hashOfConfig":"37"},{"size":412,"mtime":1614457451271,"results":"50","hashOfConfig":"37"},{"size":1023,"mtime":1614712868497,"results":"51","hashOfConfig":"37"},{"size":1529,"mtime":1614805215709,"results":"52","hashOfConfig":"37"},{"size":1663,"mtime":1615013269545,"results":"53","hashOfConfig":"37"},{"size":8096,"mtime":1615402655322,"results":"54","hashOfConfig":"37"},{"size":2474,"mtime":1615014017888,"results":"55","hashOfConfig":"37"},{"size":212,"mtime":1614383555941,"results":"56","hashOfConfig":"37"},{"size":349,"mtime":1614375206717,"results":"57","hashOfConfig":"37"},{"size":226,"mtime":1614409188308,"results":"58","hashOfConfig":"59"},{"size":625,"mtime":1615319229253,"results":"60","hashOfConfig":"37"},{"size":1223,"mtime":1615251074476,"results":"61","hashOfConfig":"37"},{"size":159,"mtime":1614704959375,"results":"62","hashOfConfig":"37"},{"size":187,"mtime":1614375206716,"results":"63","hashOfConfig":"37"},{"size":625,"mtime":1615319225863,"results":"64","hashOfConfig":"37"},{"size":616,"mtime":1614824511065,"results":"65","hashOfConfig":"37"},{"size":4926,"mtime":1615240452877,"results":"66","hashOfConfig":"37"},{"size":2422,"mtime":1615244158299,"results":"67","hashOfConfig":"37"},{"size":1388,"mtime":1615253475429,"results":"68","hashOfConfig":"37"},{"size":4723,"mtime":1615242054314,"results":"69","hashOfConfig":"37"},{"size":862,"mtime":1615250614539,"results":"70","hashOfConfig":"37"},{"size":1843,"mtime":1615242225837,"results":"71","hashOfConfig":"37"},{"size":124,"mtime":1615249411845,"results":"72","hashOfConfig":"37"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xsi9jg",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"1nrnp66",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/atorenherrinton/Development/recipeas/client/src/index.js",[],"/Users/atorenherrinton/Development/recipeas/client/src/App.js",[],"/Users/atorenherrinton/Development/recipeas/client/src/serviceWorker.js",[],"/Users/atorenherrinton/Development/recipeas/client/src/app/store.js",[],"/Users/atorenherrinton/Development/recipeas/client/src/firebase/firebase.js",[],"/Users/atorenherrinton/Development/recipeas/client/src/slices/recipe.slice.js",[],"/Users/atorenherrinton/Development/recipeas/client/src/slices/input.slice.js",[],"/Users/atorenherrinton/Development/recipeas/client/src/slices/form.slice.js",[],"/Users/atorenherrinton/Development/recipeas/client/src/components/header/header.component.jsx",[],"/Users/atorenherrinton/Development/recipeas/client/src/components/body/body.component.jsx",[],"/Users/atorenherrinton/Development/recipeas/client/src/components/body/body.styles.jsx",[],"/Users/atorenherrinton/Development/recipeas/client/src/components/create-button/create-button.component.jsx",["151"],"/** @format */\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  activateForm,\n  activateUrl,\n  deactivateUrl,\n} from \"../../slices/form.slice\";\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\n\nconst CreateButton = () => {\n  const dispatch = useDispatch();\n  return (\n    <DropdownButton\n      variant=\"primary\"\n      id=\"dropdown-basic-button\"\n      title=\"Create Recipe\"\n    >\n      <Dropdown.Item\n        onClick={() => {\n          dispatch(activateForm());\n          dispatch(activateUrl());\n        }}\n      >\n        allrecipes.com\n      </Dropdown.Item>\n      <Dropdown.Item\n        onClick={() => {\n          dispatch(activateForm());\n          dispatch(deactivateUrl());\n        }}\n      >\n        from scratch\n      </Dropdown.Item>\n    </DropdownButton>\n  );\n};\n\nexport default CreateButton;\n","/Users/atorenherrinton/Development/recipeas/client/src/components/recipe-list/recipe-list.component.jsx",[],"/Users/atorenherrinton/Development/recipeas/client/src/components/new-recipe/new-recipe.component.jsx",[],"/Users/atorenherrinton/Development/recipeas/client/src/components/saved-recipe-card/saved-recipe-card.component.jsx",["152","153"],"/** @format */\n\nimport React from \"react\";\nimport firebase from \"../../firebase/firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { openRecipe } from \"../../slices/recipe.slice\";\nimport { Card, Button } from \"react-bootstrap\";\n\nimport { MoreHoriz } from \"@material-ui/icons\";\nimport DropdownButton from \"../dropdown/dropdown.component\";\n\nconst SavedRecipeCard = (props) => {\n  const dispatch = useDispatch();\n  return (\n    <Card>\n      <DropdownButton id={props.id} />\n      <Card.Img\n        style={{ height: \"20rem\", objectFit: \"cover\" }}\n        variant=\"top\"\n        src={props.imageUrl}\n      />\n\n      <Card.Body>\n        <Card.Title>{props.title}</Card.Title>\n\n        <Card.Text>{props.description}</Card.Text>\n\n        <Button\n          style={{ width: \"100%\" }}\n          variant=\"outline-primary\"\n          onClick={() => {\n            dispatch(openRecipe(props));\n          }}\n        >\n          Open Recipe\n        </Button>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default SavedRecipeCard;\n","/Users/atorenherrinton/Development/recipeas/client/src/components/getting-started/getting-started.component.jsx",[],"/Users/atorenherrinton/Development/recipeas/client/src/components/full-recipe/full-recipe.component.jsx",["154","155","156","157"],"/** @format */\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { closeRecipe } from \"../../slices/recipe.slice\";\nimport { Button, Card, Col, Container, Row, Table } from \"react-bootstrap\";\nimport DropdownButton from \"../dropdown/dropdown.component\";\nimport Ingredient from \"../ingredient/ingredient.component\";\n\nconst FullRecipe = (props) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Card>\n      <DropdownButton id={props.id} />\n      <Card.Img\n        style={{ height: \"25rem\", objectFit: \"cover\" }}\n        variant=\"top\"\n        src={props.imageUrl}\n      />\n      <Card.Body>\n        <h4>{props.title}</h4>\n        <p>{props.description}</p>\n        {props.ingredients ? (\n          <Table hover size=\"sm\">\n            <thead>\n              <th>Ingredients</th>\n            </thead>\n            <tbody>\n              {props.ingredients.map((ingredient, idx) => (\n                <Ingredient key={idx} ingredient={ingredient} />\n              ))}\n            </tbody>\n          </Table>\n        ) : null}\n        <Table striped size=\"sm\">\n          <thead>\n            <th>Directions</th>\n          </thead>\n          <tbody>\n            {props.directions.split(\"\\n\").map((step, idx) => (\n              <tr>\n                <td key={idx}>{step}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n\n        <Button\n          style={{ width: \"100%\" }}\n          variant=\"outline-primary\"\n          onClick={() => {\n            dispatch(closeRecipe());\n          }}\n        >\n          Close Recipe\n        </Button>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default FullRecipe;\n","/Users/atorenherrinton/Development/recipeas/client/src/components/recipe-form/recipe-form.component.jsx",["158","159"],"/** @format */\n\nimport React, { useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport firebase from \"../../firebase/firebase\";\nimport { selectUserId } from \"../../slices/authenticate.slice\";\nimport {\n  addIngredient,\n  setIngredient,\n  setFullRecipe,\n  setUrl,\n  resetIngredient,\n  resetIngredientExists,\n  selectFullRecipe,\n  selectIngredient,\n  selectIngredientExists,\n  clearForm,\n} from \"../../slices/input.slice\";\nimport {\n  deactivateForm,\n  validateForm,\n  invalidateForm,\n  selectIsValidated,\n} from \"../../slices/form.slice\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  InputGroup,\n  Form,\n  FormControl,\n  Button,\n  Alert,\n} from \"react-bootstrap\";\nimport List from \"../list/list.component\";\n\nimport {\n  ButtonGroupContainer,\n  ButtonContainer,\n  AlertContainer,\n  ListContainer,\n} from \"./recipe-form.styles\";\n\nimport { Add } from \"@material-ui/icons\";\n\nconst RecipeForm = () => {\n  const dispatch = useDispatch();\n  const ref = useRef(null);\n  const userId = useSelector(selectUserId);\n  const ingredient = useSelector(selectIngredient);\n  const ingredientExists = useSelector(selectIngredientExists);\n  if (ingredientExists) {\n    setTimeout(() => {\n      dispatch(resetIngredient());\n      dispatch(resetIngredientExists());\n    }, 1750);\n  }\n\n  const fullRecipe = useSelector(selectFullRecipe);\n  const itemsRef = firebase\n    .database()\n    .ref(\"users\")\n    .child(userId)\n    .child(\"items\");\n\n  const handleUpload = (event) => {\n    event.preventDefault();\n    const data = new FormData();\n    console.log(ref.current.files[0]);\n    data.append(\"file\", ref.current.files[0]);\n    data.append(\"filename\", ref.current.value);\n\n    fetch(\"https://recipeaz.herokuapp.com/upload\", {\n      method: \"POST\",\n      body: data,\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data.result);\n      });\n  };\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      dispatch(invalidateForm());\n      event.preventDefault();\n      event.stopPropagation();\n    } else {\n      dispatch(validateForm());\n      itemsRef.push(fullRecipe);\n      dispatch(clearForm());\n      dispatch(deactivateForm());\n    }\n  };\n\n  return (\n    <Container>\n      <Row className=\"justify-content-center\">\n        <Col md={7}>\n          <Card>\n            <Card.Header style={{ textAlign: \"center\" }} as=\"h5\">\n              New Recipe\n            </Card.Header>\n            <Card.Body>\n              <Form\n                noValidate\n                // validated={!isFormValidated}\n                onSubmit={handleSubmit}\n              >\n                <Form.Group>\n                  <Form.Label>Recipe Name</Form.Label>\n                  <Form.Control\n                    onChange={(event) => {\n                      dispatch(setFullRecipe(event.target));\n                    }}\n                    type=\"text\"\n                    placeholder=\"Add the name of your recipe here\"\n                    name=\"title\"\n                    required\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please enter a recipe name.\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group>\n                  <input\n                    label=\"Recipe Image\"\n                    type=\"file\"\n                    ref={ref}\n                    onChange={handleUpload}\n                  />\n                </Form.Group>\n                <label htmlFor=\"basic-url\">Image URL</label>\n                <InputGroup className=\"mb-3\">\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>https://</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <FormControl\n                    onChange={(event) => {\n                      dispatch(setUrl(event.target));\n                    }}\n                    type=\"text\"\n                    name=\"imageUrl\"\n                    aria-describedby=\"imageUrl\"\n                    required\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please enter an image URL.\n                  </Form.Control.Feedback>\n                </InputGroup>\n\n                <Form.Group>\n                  <Form.Label>Description</Form.Label>\n                  <Form.Control\n                    onChange={(event) => {\n                      dispatch(setFullRecipe(event.target));\n                    }}\n                    type=\"text\"\n                    placeholder=\"Add your description here\"\n                    name=\"description\"\n                    as=\"textarea\"\n                    rows={2}\n                    required\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please enter a recipe description.\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <label>Ingredients</label>\n                <InputGroup className=\"mb-1\">\n                  <FormControl\n                    onChange={(event) => {\n                      dispatch(setIngredient(event.target));\n                    }}\n                    onKeyPress={(event) => {\n                      if (event.key === \"Enter\") {\n                        dispatch(addIngredient());\n                      }\n                    }}\n                    type=\"text\"\n                    placeholder=\"Add ingredients here\"\n                    name=\"ingredients\"\n                    aria-label=\"Ingredients list\"\n                    aria-describedby=\"Ingredients list\"\n                    value={ingredient}\n                    // required\n                  />\n\n                  <InputGroup.Append>\n                    <Button\n                      style={{ borderRadius: \"0 0.25rem 0.25rem 0\" }}\n                      onClick={() => {\n                        dispatch(addIngredient());\n                      }}\n                      variant=\"outline-secondary\"\n                    >\n                      <Add fontSize=\"small\" />\n                    </Button>\n                  </InputGroup.Append>\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please add at least one ingredient.\n                  </Form.Control.Feedback>\n                </InputGroup>\n                {ingredientExists ? (\n                  <AlertContainer>\n                    <Alert variant=\"warning\">\n                      You've already entered <strong>{ingredient}</strong>\n                    </Alert>\n                  </AlertContainer>\n                ) : null}\n                <ListContainer>\n                  <List />\n                </ListContainer>\n                <Form.Group>\n                  <Form.Label>Directions</Form.Label>\n                  <Form.Control\n                    onChange={(event) => {\n                      dispatch(setFullRecipe(event.target));\n                    }}\n                    type=\"text\"\n                    name=\"directions\"\n                    as=\"textarea\"\n                    rows={8}\n                    required\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please add the directions\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <ButtonGroupContainer>\n                  <ButtonContainer>\n                    <Button\n                      onClick={() => {\n                        dispatch(validateForm());\n                        dispatch(deactivateForm());\n                        dispatch(clearForm());\n                      }}\n                      variant=\"outline-secondary\"\n                    >\n                      Cancel\n                    </Button>\n                  </ButtonContainer>\n                  <Button variant=\"outline-primary\" type=\"submit\">\n                    Save\n                  </Button>\n                </ButtonGroupContainer>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default RecipeForm;\n","/Users/atorenherrinton/Development/recipeas/client/src/components/recipe-url/recipe-url.component.jsx",["160"],"/** @format */\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport firebase from \"../../firebase/firebase\";\nimport { selectUserId } from \"../../slices/authenticate.slice\";\nimport { deactivateUrl, deactivateForm } from \"../../slices/form.slice\";\nimport { Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\nimport { ButtonContainer, ButtonGroupContainer } from \"./recipe-url.styles\";\n\nconst RecipeUrl = () => {\n  const [url, setUrl] = useState(\"\");\n  const userId = useSelector(selectUserId);\n  const itemsRef = firebase\n    .database()\n    .ref(\"users\")\n    .child(userId)\n    .child(\"items\");\n  const handleChange = (event) => {\n    setUrl(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    const url_req_string =\n      \"https://recipeaz.herokuapp.com/api/\" + \"?url=\" + url;\n    fetch(url_req_string)\n      .then((res) => res.json())\n      .then((data) => {\n        itemsRef.push(data.result);\n      });\n    dispatch(deactivateForm());\n    dispatch(deactivateUrl());\n  };\n\n  const dispatch = useDispatch();\n\n  return (\n    <Container>\n      <Row className=\"justify-content-center\">\n        <Col md={6}>\n          <Card style={{ marginTop: \"4rem\" }}>\n            <Card.Header style={{ textAlign: \"center\" }} as=\"h5\">\n              New recipe\n            </Card.Header>\n            <Card.Body>\n              <Form onSubmit={handleSubmit}>\n                <Form.Group controlId=\"formBasicEmail\">\n                  <Form.Label>Recipe URL</Form.Label>\n                  <Form.Control\n                    onChange={handleChange}\n                    placeholder=\"Enter the URL of the allrecipes.com recipe\"\n                  />\n                </Form.Group>\n\n                <ButtonGroupContainer>\n                  <ButtonContainer>\n                    <Button\n                      onClick={() => {\n                        dispatch(deactivateForm());\n                        dispatch(deactivateUrl());\n                      }}\n                      variant=\"outline-secondary\"\n                    >\n                      Cancel\n                    </Button>\n                  </ButtonContainer>\n                  <Button type=\"submit\" variant=\"outline-primary\">\n                    Save\n                  </Button>\n                </ButtonGroupContainer>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default RecipeUrl;\n","/Users/atorenherrinton/Development/recipeas/client/src/components/recipe-url/recipe-url.styles.jsx",[],"/Users/atorenherrinton/Development/recipeas/client/src/components/recipe-form/recipe-form.styles.jsx",[],"/Users/atorenherrinton/Development/recipeas/client/src/components/getting-started/getting-started.styles.jsx",[],["161","162"],"/Users/atorenherrinton/Development/recipeas/client/src/components/list/list.component.jsx",[],"/Users/atorenherrinton/Development/recipeas/client/src/components/dropdown/dropdown.component.jsx",[],"/Users/atorenherrinton/Development/recipeas/client/src/components/dropdown/dropdown.styles.jsx",[],"/Users/atorenherrinton/Development/recipeas/client/src/components/list/list.styles.jsx",[],"/Users/atorenherrinton/Development/recipeas/client/src/components/list-item/list-item.component.jsx",[],"/Users/atorenherrinton/Development/recipeas/client/src/components/ingredient/ingredient.component.jsx",[],"/Users/atorenherrinton/Development/recipeas/client/src/components/sign-up/sign-up.component.jsx",[],"/Users/atorenherrinton/Development/recipeas/client/src/slices/authenticate.slice.js",[],"/Users/atorenherrinton/Development/recipeas/client/src/components/authenticate/authenticate.component.jsx",["163","164"],"/** @format */\n\nimport React from \"react\";\n\nimport { useSelector } from \"react-redux\";\nimport {\n  selectIsSignIn,\n  selectResetPassword,\n} from \"../../slices/authenticate.slice\";\nimport { Card, Container, Row, Col, Image } from \"react-bootstrap\";\nimport SignIn from \"../sign-in/sign-in.component\";\nimport SignUp from \"../sign-up/sign-up.component\";\nimport ResetPassword from \"../reset-password/reset-password.component\";\nimport image from \"../../assets/breakfast.svg\";\nimport { TitleContainer } from \"./authenticate.styles\";\n\nconst Authenticate = () => {\n  const isSignIn = useSelector(selectIsSignIn);\n  const resetPassword = useSelector(selectResetPassword);\n\n  return (\n    <Container\n      style={{\n        marginTop: \"150px\",\n      }}\n    >\n      <Row className=\"justify-content-center\">\n        <Col\n          style={{\n            marginBottom: \"2rem\",\n            position: \"relative\",\n            textAlign: \"center\",\n          }}\n          xs={8}\n          sm={8}\n          md={6}\n          lg={5}\n        >\n          <Image src={image} />\n        </Col>\n        <Col class=\"mt-1\" xs={12} sm={10} md={8} lg={{ span: 5, offset: 1 }}>\n          {!isSignIn ? (\n            <SignUp />\n          ) : !resetPassword ? (\n            <SignIn />\n          ) : (\n            <ResetPassword />\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Authenticate;\n","/Users/atorenherrinton/Development/recipeas/client/src/components/sign-in/sign-in.component.jsx",["165"],"/** @format */\n\nimport React, { useState } from \"react\";\nimport withFirebaseAuth from \"react-with-firebase-auth\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseApp from \"../../firebase/firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  authenticate,\n  selectCredentials,\n  resetCredentials,\n  setCredentials,\n  setIsEmailSent,\n  selectIsEmailSent,\n  resetErrorMessage,\n  selectErrorMessage,\n  setErrorMessage,\n  setResetPassword,\n  setSignIn,\n} from \"../../slices/authenticate.slice\";\nimport {\n  Alert,\n  Container,\n  Row,\n  Col,\n  Card,\n  Form,\n  Button,\n} from \"react-bootstrap\";\n\nconst SignUp = (props) => {\n  const {\n    error,\n    setError,\n    signInWithEmailAndPassword,\n    signInWithGoogle,\n    user,\n  } = props;\n  const credentials = useSelector(selectCredentials);\n  const dispatch = useDispatch();\n  const errorMessage = useSelector(selectErrorMessage);\n  const isEmailSent = useSelector(selectIsEmailSent);\n\n  if (isEmailSent) {\n    setTimeout(() => {\n      dispatch(setIsEmailSent(false));\n    }, 2000);\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    signInWithEmailAndPassword(credentials.email, credentials.password);\n    dispatch(resetCredentials());\n  };\n\n  if (error) {\n    dispatch(setErrorMessage(error));\n  }\n  if (user) {\n    dispatch(authenticate());\n  }\n\n  return (\n    <Container>\n      <Row className=\"justify-content-center\">\n        <Col>\n          <Card>\n            <Card.Header style={{ textAlign: \"center\" }} as=\"h5\">\n              Sign In\n            </Card.Header>\n            <Card.Body>\n              <Form onSubmit={handleSubmit}>\n                {isEmailSent ? (\n                  <Alert variant=\"success\">\n                    An email has been sent to reset your password\n                  </Alert>\n                ) : null}\n                <Form.Group controlId=\"formBasicEmail\">\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control\n                    onChange={(event) => {\n                      dispatch(setCredentials(event.target));\n                      setError(\"reset\");\n                    }}\n                    name=\"email\"\n                    type=\"email\"\n                    value={credentials.email}\n                    placeholder=\"Enter email\"\n                  />\n                </Form.Group>\n\n                <Form.Group\n                  style={{ marginBottom: \"0.25rem\" }}\n                  controlId=\"formBasicPassword\"\n                >\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    onChange={(event) => {\n                      dispatch(setCredentials(event.target));\n                      setError(\"reset\");\n                    }}\n                    name=\"password\"\n                    type=\"password\"\n                    value={credentials.password}\n                    placeholder=\"Password\"\n                  />\n                </Form.Group>\n                {errorMessage && errorMessage !== \"reset\" ? (\n                  <Alert className=\"mt-3\" variant=\"warning\">\n                    {errorMessage}\n                  </Alert>\n                ) : null}\n                <Button\n                  className=\"mt-2\"\n                  onClick={() => {\n                    dispatch(setResetPassword());\n                  }}\n                  block\n                  variant=\"link\"\n                >\n                  Forgot password?\n                </Button>\n                <Button\n                  className=\"mt-2\"\n                  block\n                  variant=\"outline-primary\"\n                  type=\"submit\"\n                >\n                  Sign In\n                </Button>\n\n                <Button\n                  onClick={signInWithGoogle}\n                  className=\"mt-3\"\n                  block\n                  variant=\"outline-secondary\"\n                >\n                  Continue with Google\n                </Button>\n\n                <Button\n                  onClick={() => {\n                    dispatch(setSignIn());\n                    dispatch(resetErrorMessage());\n                    dispatch(resetCredentials());\n                  }}\n                  className=\"mt-3\"\n                  block\n                  variant=\"light\"\n                >\n                  Don't have an account? Sign up\n                </Button>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nconst firebaseAppAuth = firebaseApp.auth();\n\nconst providers = {\n  googleProvider: new firebase.auth.GoogleAuthProvider(),\n};\n\nexport default withFirebaseAuth({\n  providers,\n  firebaseAppAuth,\n})(SignUp);\n","/Users/atorenherrinton/Development/recipeas/client/src/components/signout-button/signout-button.component.jsx",[],"/Users/atorenherrinton/Development/recipeas/client/src/components/reset-password/reset-password.component.jsx",[],"/Users/atorenherrinton/Development/recipeas/client/src/components/authenticate/authenticate.styles.jsx",[],{"ruleId":"166","severity":1,"message":"167","line":3,"column":17,"nodeType":"168","messageId":"169","endLine":3,"endColumn":25},{"ruleId":"166","severity":1,"message":"170","line":4,"column":8,"nodeType":"168","messageId":"169","endLine":4,"endColumn":16},{"ruleId":"166","severity":1,"message":"171","line":9,"column":10,"nodeType":"168","messageId":"169","endLine":9,"endColumn":19},{"ruleId":"166","severity":1,"message":"167","line":3,"column":17,"nodeType":"168","messageId":"169","endLine":3,"endColumn":25},{"ruleId":"166","severity":1,"message":"172","line":6,"column":24,"nodeType":"168","messageId":"169","endLine":6,"endColumn":27},{"ruleId":"166","severity":1,"message":"173","line":6,"column":29,"nodeType":"168","messageId":"169","endLine":6,"endColumn":38},{"ruleId":"166","severity":1,"message":"174","line":6,"column":40,"nodeType":"168","messageId":"169","endLine":6,"endColumn":43},{"ruleId":"166","severity":1,"message":"167","line":3,"column":25,"nodeType":"168","messageId":"169","endLine":3,"endColumn":33},{"ruleId":"166","severity":1,"message":"175","line":23,"column":3,"nodeType":"168","messageId":"169","endLine":23,"endColumn":20},{"ruleId":"176","severity":1,"message":"177","line":25,"column":45,"nodeType":"178","messageId":"179","endLine":25,"endColumn":46},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"166","severity":1,"message":"184","line":10,"column":10,"nodeType":"168","messageId":"169","endLine":10,"endColumn":14},{"ruleId":"166","severity":1,"message":"185","line":15,"column":10,"nodeType":"168","messageId":"169","endLine":15,"endColumn":24},{"ruleId":"166","severity":1,"message":"167","line":3,"column":17,"nodeType":"168","messageId":"169","endLine":3,"endColumn":25},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'firebase' is defined but never used.","'MoreHoriz' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'selectIsValidated' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-native-reassign",["186"],"no-negated-in-lhs",["187"],"'Card' is defined but never used.","'TitleContainer' is defined but never used.","no-global-assign","no-unsafe-negation"]