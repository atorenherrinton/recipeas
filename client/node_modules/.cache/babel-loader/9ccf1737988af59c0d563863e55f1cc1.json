{"ast":null,"code":"/** @format */import React,{useState}from\"react\";import withFirebaseAuth from\"react-with-firebase-auth\";import firebase from\"firebase/app\";import\"firebase/auth\";import firebaseApp from\"../../firebase/firebase\";import{useDispatch,useSelector}from\"react-redux\";import{authenticate,selectCredentials,resetCredentials,setCredentials,setIsEmailSent,selectIsEmailSent,resetErrorMessage,selectErrorMessage,setErrorMessage,setResetPassword,setSignIn}from\"../../slices/authenticate.slice\";import{Alert,Container,Row,Col,Card,Form,Button}from\"react-bootstrap\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SignUp=function SignUp(props){var error=props.error,setError=props.setError,signInWithEmailAndPassword=props.signInWithEmailAndPassword,signInWithGoogle=props.signInWithGoogle,user=props.user;var credentials=useSelector(selectCredentials);var dispatch=useDispatch();var errorMessage=useSelector(selectErrorMessage);var isEmailSent=useSelector(selectIsEmailSent);if(isEmailSent){setTimeout(function(){dispatch(setIsEmailSent(false));},2000);}var handleSubmit=function handleSubmit(event){event.preventDefault();signInWithEmailAndPassword(credentials.email,credentials.password);dispatch(resetCredentials());};if(error){dispatch(setErrorMessage(error));}if(user){dispatch(authenticate());}return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(Row,{className:\"justify-content-center\",children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{style:{textAlign:\"center\"},as:\"h5\",children:\"Sign In\"}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[isEmailSent?/*#__PURE__*/_jsx(Alert,{variant:\"success\",children:\"An email has been sent to reset your password\"}):null,/*#__PURE__*/_jsxs(Form.Group,{controlId:\"formBasicEmail\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email address\"}),/*#__PURE__*/_jsx(Form.Control,{onChange:function onChange(event){dispatch(setCredentials(event.target));setError(\"reset\");},name:\"email\",type:\"email\",value:credentials.email,placeholder:\"Enter email\"})]}),/*#__PURE__*/_jsxs(Form.Group,{style:{marginBottom:\"0.25rem\"},controlId:\"formBasicPassword\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Form.Control,{onChange:function onChange(event){dispatch(setCredentials(event.target));setError(\"reset\");},name:\"password\",type:\"password\",value:credentials.password,placeholder:\"Password\"})]}),errorMessage&&errorMessage!==\"reset\"?/*#__PURE__*/_jsx(Alert,{className:\"mt-3\",variant:\"warning\",children:errorMessage}):null,/*#__PURE__*/_jsx(Button,{className:\"mt-2\",onClick:function onClick(){dispatch(setResetPassword());},block:true,variant:\"link\",children:\"Forgot password?\"}),/*#__PURE__*/_jsx(Button,{className:\"mt-2\",block:true,variant:\"outline-primary\",type:\"submit\",children:\"Sign In\"}),/*#__PURE__*/_jsx(Button,{onClick:signInWithGoogle,className:\"mt-3\",block:true,variant:\"outline-secondary\",children:\"Continue with Google\"}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){dispatch(setSignIn());dispatch(resetErrorMessage());dispatch(resetCredentials());},className:\"mt-3\",block:true,variant:\"light\",children:\"Don't have an account? Sign up\"})]})})]})})})});};var firebaseAppAuth=firebaseApp.auth();var providers={googleProvider:new firebase.auth.GoogleAuthProvider()};export default withFirebaseAuth({providers:providers,firebaseAppAuth:firebaseAppAuth})(SignUp);","map":{"version":3,"sources":["/Users/atorenherrinton/Development/recipeas/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","withFirebaseAuth","firebase","firebaseApp","useDispatch","useSelector","authenticate","selectCredentials","resetCredentials","setCredentials","setIsEmailSent","selectIsEmailSent","resetErrorMessage","selectErrorMessage","setErrorMessage","setResetPassword","setSignIn","Alert","Container","Row","Col","Card","Form","Button","SignUp","props","error","setError","signInWithEmailAndPassword","signInWithGoogle","user","credentials","dispatch","errorMessage","isEmailSent","setTimeout","handleSubmit","event","preventDefault","email","password","textAlign","target","marginBottom","firebaseAppAuth","auth","providers","googleProvider","GoogleAuthProvider"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React, { useState } from \"react\";\nimport withFirebaseAuth from \"react-with-firebase-auth\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseApp from \"../../firebase/firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  authenticate,\n  selectCredentials,\n  resetCredentials,\n  setCredentials,\n  setIsEmailSent,\n  selectIsEmailSent,\n  resetErrorMessage,\n  selectErrorMessage,\n  setErrorMessage,\n  setResetPassword,\n  setSignIn,\n} from \"../../slices/authenticate.slice\";\nimport {\n  Alert,\n  Container,\n  Row,\n  Col,\n  Card,\n  Form,\n  Button,\n} from \"react-bootstrap\";\n\nconst SignUp = (props) => {\n  const {\n    error,\n    setError,\n    signInWithEmailAndPassword,\n    signInWithGoogle,\n    user,\n  } = props;\n  const credentials = useSelector(selectCredentials);\n  const dispatch = useDispatch();\n  const errorMessage = useSelector(selectErrorMessage);\n  const isEmailSent = useSelector(selectIsEmailSent);\n\n  if (isEmailSent) {\n    setTimeout(() => {\n      dispatch(setIsEmailSent(false));\n    }, 2000);\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    signInWithEmailAndPassword(credentials.email, credentials.password);\n    dispatch(resetCredentials());\n  };\n\n  if (error) {\n    dispatch(setErrorMessage(error));\n  }\n  if (user) {\n    dispatch(authenticate());\n  }\n\n  return (\n    <Container>\n      <Row className=\"justify-content-center\">\n        <Col>\n          <Card>\n            <Card.Header style={{ textAlign: \"center\" }} as=\"h5\">\n              Sign In\n            </Card.Header>\n            <Card.Body>\n              <Form onSubmit={handleSubmit}>\n                {isEmailSent ? (\n                  <Alert variant=\"success\">\n                    An email has been sent to reset your password\n                  </Alert>\n                ) : null}\n                <Form.Group controlId=\"formBasicEmail\">\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control\n                    onChange={(event) => {\n                      dispatch(setCredentials(event.target));\n                      setError(\"reset\");\n                    }}\n                    name=\"email\"\n                    type=\"email\"\n                    value={credentials.email}\n                    placeholder=\"Enter email\"\n                  />\n                </Form.Group>\n\n                <Form.Group\n                  style={{ marginBottom: \"0.25rem\" }}\n                  controlId=\"formBasicPassword\"\n                >\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    onChange={(event) => {\n                      dispatch(setCredentials(event.target));\n                      setError(\"reset\");\n                    }}\n                    name=\"password\"\n                    type=\"password\"\n                    value={credentials.password}\n                    placeholder=\"Password\"\n                  />\n                </Form.Group>\n                {errorMessage && errorMessage !== \"reset\" ? (\n                  <Alert className=\"mt-3\" variant=\"warning\">\n                    {errorMessage}\n                  </Alert>\n                ) : null}\n                <Button\n                  className=\"mt-2\"\n                  onClick={() => {\n                    dispatch(setResetPassword());\n                  }}\n                  block\n                  variant=\"link\"\n                >\n                  Forgot password?\n                </Button>\n                <Button\n                  className=\"mt-2\"\n                  block\n                  variant=\"outline-primary\"\n                  type=\"submit\"\n                >\n                  Sign In\n                </Button>\n\n                <Button\n                  onClick={signInWithGoogle}\n                  className=\"mt-3\"\n                  block\n                  variant=\"outline-secondary\"\n                >\n                  Continue with Google\n                </Button>\n\n                <Button\n                  onClick={() => {\n                    dispatch(setSignIn());\n                    dispatch(resetErrorMessage());\n                    dispatch(resetCredentials());\n                  }}\n                  className=\"mt-3\"\n                  block\n                  variant=\"light\"\n                >\n                  Don't have an account? Sign up\n                </Button>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nconst firebaseAppAuth = firebaseApp.auth();\n\nconst providers = {\n  googleProvider: new firebase.auth.GoogleAuthProvider(),\n};\n\nexport default withFirebaseAuth({\n  providers,\n  firebaseAppAuth,\n})(SignUp);\n"]},"metadata":{},"sourceType":"module"}