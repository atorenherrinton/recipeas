{"ast":null,"code":"import _slicedToArray from\"/Users/atorenherrinton/Development/recipeas/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/** @format */import React,{useState}from\"react\";import{Form}from\"react-bootstrap\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Ingredient=function Ingredient(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),checked=_useState2[0],setChecked=_useState2[1];var handleClick=function handleClick(){setChecked(!checked);};return/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsxs(\"td\",{style:checked?{display:\"flex\",textDecoration:\"line-through\"}:{display:\"flex\"},children:[/*#__PURE__*/_jsx(Form.Check,{onClick:handleClick,type:\"checkbox\"}),props.ingredient]})});};export default Ingredient;","map":{"version":3,"sources":["/Users/atorenherrinton/Development/recipeas/client/src/components/ingredient/ingredient.component.jsx"],"names":["React","useState","Form","Ingredient","props","checked","setChecked","handleClick","display","textDecoration","ingredient"],"mappings":"yKAAA,cAEA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,IAAT,KAAqB,iBAArB,C,wFAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,eACEH,QAAQ,CAAC,KAAD,CADV,wCACrBI,OADqB,eACZC,UADY,eAG5B,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBD,UAAU,CAAC,CAACD,OAAF,CAAV,CACD,CAFD,CAGA,mBACE,iCACE,YACE,KAAK,CACHA,OAAO,CACH,CACEG,OAAO,CAAE,MADX,CAEEC,cAAc,CAAE,cAFlB,CADG,CAKH,CAAED,OAAO,CAAE,MAAX,CAPR,wBAUE,KAAC,IAAD,CAAM,KAAN,EAAY,OAAO,CAAED,WAArB,CAAkC,IAAI,CAAC,UAAvC,EAVF,CAWGH,KAAK,CAACM,UAXT,GADF,EADF,CAiBD,CAvBD,CAyBA,cAAeP,CAAAA,UAAf","sourcesContent":["/** @format */\n\nimport React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nconst Ingredient = (props) => {\n  const [checked, setChecked] = useState(false);\n\n  const handleClick = () => {\n    setChecked(!checked);\n  };\n  return (\n    <tr>\n      <td\n        style={\n          checked\n            ? {\n                display: \"flex\",\n                textDecoration: \"line-through\",\n              }\n            : { display: \"flex\" }\n        }\n      >\n        <Form.Check onClick={handleClick} type=\"checkbox\" />\n        {props.ingredient}\n      </td>\n    </tr>\n  );\n};\n\nexport default Ingredient;\n"]},"metadata":{},"sourceType":"module"}