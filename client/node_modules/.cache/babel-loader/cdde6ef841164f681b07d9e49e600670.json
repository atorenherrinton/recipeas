{"ast":null,"code":"var _jsxFileName = \"/Users/atorenherrinton/Development/recipeas/src/components/dropdown/dropdown.component.jsx\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React from \"react\";\nimport { closeRecipe } from \"../../slices/recipe.slice\";\nimport { useDispatch } from \"react-redux\";\nimport firebase from \"../../firebase/firebase\";\nimport { Dropdown, ButtonGroup } from \"react-bootstrap\";\nimport { ButtonContainer } from \"./dropdown.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropdownButton = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const itemRef = firebase.database().ref(`/items/${props.id}`);\n  return /*#__PURE__*/_jsxDEV(ButtonContainer, {\n    children: /*#__PURE__*/_jsxDEV(Dropdown, {\n      drop: \"down\",\n      as: ButtonGroup,\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n        style: {},\n        variant: \"primary\",\n        size: \"sm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n        children: /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          onClick: () => {\n            itemRef.remove();\n            dispatch(closeRecipe());\n          },\n          children: \"Delete Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DropdownButton, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = DropdownButton;\nexport default DropdownButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropdownButton\");","map":{"version":3,"sources":["/Users/atorenherrinton/Development/recipeas/src/components/dropdown/dropdown.component.jsx"],"names":["React","closeRecipe","useDispatch","firebase","Dropdown","ButtonGroup","ButtonContainer","DropdownButton","props","dispatch","itemRef","database","ref","id","width","remove"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,iBAAtC;AACA,SAASC,eAAT,QAAgC,mBAAhC;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,OAAO,GAAGP,QAAQ,CAACQ,QAAT,GAAoBC,GAApB,CAAyB,UAASJ,KAAK,CAACK,EAAG,EAA3C,CAAhB;AACA,sBACE,QAAC,eAAD;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAC,MAAf;AAAsB,MAAA,EAAE,EAAER,WAA1B;AAAuC,MAAA,KAAK,EAAE;AAAES,QAAAA,KAAK,EAAE;AAAT,OAA9C;AAAA,8BACE,QAAC,QAAD,CAAU,MAAV;AACE,QAAA,KAAK,EAAE,EADT;AAGE,QAAA,OAAO,EAAC,SAHV;AAIE,QAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,QAAD,CAAU,IAAV;AAAA,+BACE,QAAC,QAAD,CAAU,IAAV;AACE,UAAA,OAAO,EAAE,MAAM;AACbJ,YAAAA,OAAO,CAACK,MAAR;AACAN,YAAAA,QAAQ,CAACR,WAAW,EAAZ,CAAR;AACD,WAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAzBD;;GAAMM,c;UACaL,W;;;KADbK,c;AA2BN,eAAeA,cAAf","sourcesContent":["/** @format */\n\nimport React from \"react\";\nimport { closeRecipe } from \"../../slices/recipe.slice\";\nimport { useDispatch } from \"react-redux\";\nimport firebase from \"../../firebase/firebase\";\nimport { Dropdown, ButtonGroup } from \"react-bootstrap\";\nimport { ButtonContainer } from \"./dropdown.styles\";\n\nconst DropdownButton = (props) => {\n  const dispatch = useDispatch();\n  const itemRef = firebase.database().ref(`/items/${props.id}`);\n  return (\n    <ButtonContainer>\n      <Dropdown drop=\"down\" as={ButtonGroup} style={{ width: \"100%\" }}>\n        <Dropdown.Toggle\n          style={{\n          }}\n          variant=\"primary\"\n          size=\"sm\"\n        ></Dropdown.Toggle>\n        <Dropdown.Menu>\n          <Dropdown.Item\n            onClick={() => {\n              itemRef.remove();\n              dispatch(closeRecipe());\n            }}\n          >\n            Delete Recipe\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    </ButtonContainer>\n  );\n};\n\nexport default DropdownButton;\n"]},"metadata":{},"sourceType":"module"}