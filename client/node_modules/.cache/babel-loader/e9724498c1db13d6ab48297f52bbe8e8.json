{"ast":null,"code":"/** @format */import React,{useState}from\"react\";import withFirebaseAuth from\"react-with-firebase-auth\";import firebase from\"firebase/app\";import\"firebase/auth\";import firebaseApp from\"./firebase/firebase\";import Header from\"./components/header/header.component\";import Body from\"./components/body/body.component\";import{useEffect}from\"react\";import{loadRecipes}from\"./slices/recipe.slice\";import{setUserId}from\"./slices/authenticate.slice\";import{useDispatch}from\"react-redux\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(props){var user=props.user;var dispatch=useDispatch();useEffect(function(){// Update the document title using the browser API\nif(user){dispatch(setUserId(user.uid));var storage=firebaseApp.storage();var itemsRef=firebaseApp.database().ref(\"users\").child(user.uid).child(\"items\");itemsRef.on(\"value\",function(snapshot){var items=snapshot.val();var newState=[];var imageUrl=\"\";for(var item in items){if(items[item].imageUrl.includes(\"firebase\")){storage.ref().child(items[item].imageUrl).getDownloadURL().then(function(url){imageUrl=url;});}else{imageUrl=items[item].imageUrl;}newState.push({id:item,title:items[item].title,imageUrl:imageUrl,description:items[item].description,ingredients:items[item].ingredients,directions:items[item].directions});}dispatch(loadRecipes(newState));});}});return/*#__PURE__*/_jsxs(\"div\",{style:{overflowX:\"hidden\"},children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(Body,{})]});};var firebaseAppAuth=firebaseApp.auth();var providers={googleProvider:new firebase.auth.GoogleAuthProvider()};export default withFirebaseAuth({providers:providers,firebaseAppAuth:firebaseAppAuth})(App);","map":{"version":3,"sources":["/Users/atorenherrinton/Development/recipeas/client/src/App.js"],"names":["React","useState","withFirebaseAuth","firebase","firebaseApp","Header","Body","useEffect","loadRecipes","setUserId","useDispatch","App","props","user","dispatch","uid","storage","itemsRef","database","ref","child","on","snapshot","items","val","newState","imageUrl","item","includes","getDownloadURL","then","url","push","id","title","description","ingredients","directions","overflowX","firebaseAppAuth","auth","providers","googleProvider","GoogleAuthProvider"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React, { useState } from \"react\";\nimport withFirebaseAuth from \"react-with-firebase-auth\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseApp from \"./firebase/firebase\";\nimport Header from \"./components/header/header.component\";\nimport Body from \"./components/body/body.component\";\nimport { useEffect } from \"react\";\n\nimport { loadRecipes } from \"./slices/recipe.slice\";\nimport { setUserId } from \"./slices/authenticate.slice\";\nimport { useDispatch } from \"react-redux\";\n\nconst App = (props) => {\n  const { user } = props;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // Update the document title using the browser API\n    if (user) {\n      dispatch(setUserId(user.uid));\n      var storage = firebaseApp.storage();\n      const itemsRef = firebaseApp\n        .database()\n        .ref(\"users\")\n        .child(user.uid)\n        .child(\"items\");\n      itemsRef.on(\"value\", (snapshot) => {\n        let items = snapshot.val();\n        let newState = [];\n        let imageUrl = \"\";\n        for (let item in items) {\n          if (items[item].imageUrl.includes(\"firebase\")) {\n            storage\n              .ref()\n              .child(items[item].imageUrl)\n              .getDownloadURL()\n              .then((url) => {\n                imageUrl = url;\n              });\n          } else {\n            imageUrl = items[item].imageUrl;\n          }\n          newState.push({\n            id: item,\n            title: items[item].title,\n            imageUrl: imageUrl,\n            description: items[item].description,\n            ingredients: items[item].ingredients,\n            directions: items[item].directions,\n          });\n        }\n        dispatch(loadRecipes(newState));\n      });\n    }\n  });\n  return (\n    <div style={{ overflowX: \"hidden\" }}>\n      <Header />\n      <Body />\n    </div>\n  );\n};\n\nconst firebaseAppAuth = firebaseApp.auth();\n\nconst providers = {\n  googleProvider: new firebase.auth.GoogleAuthProvider(),\n};\n\nexport default withFirebaseAuth({\n  providers,\n  firebaseAppAuth,\n})(App);\n"]},"metadata":{},"sourceType":"module"}