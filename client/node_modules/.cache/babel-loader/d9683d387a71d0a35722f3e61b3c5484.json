{"ast":null,"code":"import _defineProperty from\"/Users/atorenherrinton/Development/recipeas/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/atorenherrinton/Development/recipeas/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/atorenherrinton/Development/recipeas/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"/Users/atorenherrinton/Development/recipeas/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";/** @format */import{createSlice}from\"@reduxjs/toolkit\";export var inputSlice=createSlice({name:\"input\",initialState:{ingredientExists:false,ingredient:\"\",fractions:{\"1/4\":\"¼\",\"1/3\":\"⅓\",\"1/2\":\"½\",\"2/3\":\"⅔\",\"3/4\":\"¾\"},fullRecipe:{imageUrl:\"\",title:\"\",description:\"\",ingredients:[],directions:\"\"}},reducers:{addIngredient:function addIngredient(state){if(state.ingredient.length>0&&!state.fullRecipe.ingredients.includes(state.ingredient)){state.fullRecipe.ingredients=[].concat(_toConsumableArray(state.fullRecipe.ingredients),[state.ingredient]);state.ingredient=\"\";}else if(state.fullRecipe.ingredients.includes(state.ingredient)){state.ingredientExists=true;}document.querySelector(\"#ingredients\").value=\"\";},deleteIngredient:function deleteIngredient(state,action){state.fullRecipe.ingredients=_toConsumableArray(state.fullRecipe.ingredients.filter(function(ingredient){return ingredient!==action.payload;}));},resetIngredient:function resetIngredient(state){state.ingredient=\"\";},resetIngredientExists:function resetIngredientExists(state){state.ingredientExists=false;},setIngredient:function setIngredient(state,action){state.ingredient=action.payload.value;for(var _i=0,_Object$entries=Object.entries(state.fractions);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),key=_Object$entries$_i[0],value=_Object$entries$_i[1];if(state.ingredient.includes(key)){state.ingredient=state.ingredient.replace(key,value);}}},setHovered:function setHovered(state){state.item.isHovered=!state.item.isHovered;},setUrl:function setUrl(state,action){var _action$payload=action.payload,value=_action$payload.value,name=_action$payload.name;state.fullRecipe=_objectSpread(_objectSpread({},state.fullRecipe),{},_defineProperty({},name,\"https://\"+value.replace(\"https://\",\"\")));},setFullRecipe:function setFullRecipe(state,action){var _action$payload2=action.payload,value=_action$payload2.value,name=_action$payload2.name;state.fullRecipe=_objectSpread(_objectSpread({},state.fullRecipe),{},_defineProperty({},name,value));},clearForm:function clearForm(state){state.ingredient=\"\";state.fullRecipe={imageUrl:\"\",title:\"\",description:\"\",ingredients:[],directions:\"\"};}}});var _inputSlice$actions=inputSlice.actions,addIngredient=_inputSlice$actions.addIngredient,deleteIngredient=_inputSlice$actions.deleteIngredient,setAllRecipesUrl=_inputSlice$actions.setAllRecipesUrl,setIngredient=_inputSlice$actions.setIngredient,setUrl=_inputSlice$actions.setUrl,resetIngredient=_inputSlice$actions.resetIngredient,resetIngredientExists=_inputSlice$actions.resetIngredientExists,setFullRecipe=_inputSlice$actions.setFullRecipe,clearForm=_inputSlice$actions.clearForm;// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\n// export const incrementAsync = (amount) => (dispatch) => {\n//   setTimeout(() => {\n//     dispatch(incrementByAmount(amount));\n//   }, 1000);\n// };\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport{addIngredient,deleteIngredient,setAllRecipesUrl,setIngredient,setUrl,resetIngredient,resetIngredientExists,setFullRecipe,clearForm};export var selectIngredient=function selectIngredient(state){return state.input.ingredient;};export var selectIngredients=function selectIngredients(state){return state.input.fullRecipe.ingredients;};export var selectFullRecipe=function selectFullRecipe(state){return state.input.fullRecipe;};export var selectIngredientExists=function selectIngredientExists(state){return state.input.ingredientExists;};export default inputSlice.reducer;","map":{"version":3,"sources":["/Users/atorenherrinton/Development/recipeas/client/src/slices/input.slice.js"],"names":["createSlice","inputSlice","name","initialState","ingredientExists","ingredient","fractions","fullRecipe","imageUrl","title","description","ingredients","directions","reducers","addIngredient","state","length","includes","document","querySelector","value","deleteIngredient","action","filter","payload","resetIngredient","resetIngredientExists","setIngredient","Object","entries","key","replace","setHovered","item","isHovered","setUrl","setFullRecipe","clearForm","actions","setAllRecipesUrl","selectIngredient","input","selectIngredients","selectFullRecipe","selectIngredientExists","reducer"],"mappings":"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","sourcesContent":["/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nexport const inputSlice = createSlice({\n  name: \"input\",\n  initialState: {\n    ingredientExists: false,\n    ingredient: \"\",\n    fractions: {\n      \"1/4\": \"¼\",\n      \"1/3\": \"⅓\",\n      \"1/2\": \"½\",\n      \"2/3\": \"⅔\",\n      \"3/4\": \"¾\",\n    },\n    fullRecipe: {\n      imageUrl: \"\",\n      title: \"\",\n      description: \"\",\n      ingredients: [],\n      directions: \"\",\n    },\n  },\n  reducers: {\n    addIngredient: (state) => {\n      if (\n        state.ingredient.length > 0 &&\n        !state.fullRecipe.ingredients.includes(state.ingredient)\n      ) {\n        state.fullRecipe.ingredients = [\n          ...state.fullRecipe.ingredients,\n          state.ingredient,\n        ];\n        state.ingredient = \"\";\n      } else if (state.fullRecipe.ingredients.includes(state.ingredient)) {\n        state.ingredientExists = true;\n      }\n      document.querySelector(\"#ingredients\").value = \"\";\n    },\n    deleteIngredient: (state, action) => {\n      state.fullRecipe.ingredients = [\n        ...state.fullRecipe.ingredients.filter(\n          (ingredient) => ingredient !== action.payload\n        ),\n      ];\n    },\n    resetIngredient: (state) => {\n      state.ingredient = \"\";\n    },\n    resetIngredientExists: (state) => {\n      state.ingredientExists = false;\n    },\n    setIngredient: (state, action) => {\n      state.ingredient = action.payload.value;\n      for (const [key, value] of Object.entries(state.fractions)) {\n        if (state.ingredient.includes(key)) {\n          state.ingredient = state.ingredient.replace(key, value);\n        }\n      }\n    },\n    setHovered: (state) => {\n      state.item.isHovered = !state.item.isHovered;\n    },\n    setUrl: (state, action) => {\n      const { value, name } = action.payload;\n      state.fullRecipe = {\n        ...state.fullRecipe,\n        [name]: \"https://\" + value.replace(\"https://\", \"\"),\n      };\n    },\n\n    setFullRecipe: (state, action) => {\n      const { value, name } = action.payload;\n      state.fullRecipe = { ...state.fullRecipe, [name]: value };\n    },\n    clearForm: (state) => {\n      state.ingredient = \"\";\n      state.fullRecipe = {\n        imageUrl: \"\",\n        title: \"\",\n        description: \"\",\n        ingredients: [],\n        directions: \"\",\n      };\n    },\n  },\n});\n\nexport const {\n  addIngredient,\n  deleteIngredient,\n  setAllRecipesUrl,\n  setIngredient,\n  setUrl,\n  resetIngredient,\n  resetIngredientExists,\n  setFullRecipe,\n  clearForm,\n} = inputSlice.actions;\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\n// export const incrementAsync = (amount) => (dispatch) => {\n//   setTimeout(() => {\n//     dispatch(incrementByAmount(amount));\n//   }, 1000);\n// };\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectIngredient = (state) => state.input.ingredient;\nexport const selectIngredients = (state) => state.input.fullRecipe.ingredients;\nexport const selectFullRecipe = (state) => state.input.fullRecipe;\nexport const selectIngredientExists = (state) => state.input.ingredientExists;\n\nexport default inputSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}