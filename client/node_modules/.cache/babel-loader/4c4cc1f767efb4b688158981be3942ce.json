{"ast":null,"code":"/** @format */\nimport { createSlice } from \"@reduxjs/toolkit\";\nexport const formSlice = createSlice({\n  name: \"url\",\n  initialState: {\n    url: \"\"\n  },\n  reducers: {\n    setUrl: (state, action) => {\n      state.url = action.payload.value;\n    }\n  }\n});\nexport const {\n  setUrl\n} = urlSlice.actions; // The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\n\nexport const selectUrl = state => state.url.url;\nexport default urlSlice.reducer;","map":{"version":3,"sources":["/Users/atorenherrinton/Development/recipeas/src/slices/url.slice.js"],"names":["createSlice","formSlice","name","initialState","url","reducers","setUrl","state","action","payload","value","urlSlice","actions","selectUrl","reducer"],"mappings":"AAAA;AAEA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;AACnCE,EAAAA,IAAI,EAAE,KAD6B;AAEnCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,GAAG,EAAE;AADO,GAFqB;AAKnCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzBD,MAAAA,KAAK,CAACH,GAAN,GAAYI,MAAM,CAACC,OAAP,CAAeC,KAA3B;AACD;AAHO;AALyB,CAAD,CAA7B;AAYP,OAAO,MAAM;AAAEJ,EAAAA;AAAF,IAAaK,QAAQ,CAACC,OAA5B,C,CAEP;AACA;AACA;;AACA,OAAO,MAAMC,SAAS,GAAIN,KAAD,IAAWA,KAAK,CAACH,GAAN,CAAUA,GAAvC;AAEP,eAAeO,QAAQ,CAACG,OAAxB","sourcesContent":["/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nexport const formSlice = createSlice({\n  name: \"url\",\n  initialState: {\n    url: \"\",\n  },\n  reducers: {\n    setUrl: (state, action) => {\n      state.url = action.payload.value;\n    },\n  },\n});\n\nexport const { setUrl } = urlSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectUrl = (state) => state.url.url;\n\nexport default urlSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}