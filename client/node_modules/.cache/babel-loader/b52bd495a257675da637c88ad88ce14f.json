{"ast":null,"code":"import _slicedToArray from\"/Users/atorenherrinton/Development/recipeas/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/** @format */import React,{useRef,useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import firebase from\"../../firebase/firebase\";import{selectUserId}from\"../../slices/authenticate.slice\";import{addIngredient,setIngredient,setFullRecipe,setUrl,resetIngredient,resetIngredientExists,selectFullRecipe,selectIngredient,selectIngredientExists,clearForm}from\"../../slices/input.slice\";import{deactivateForm,validateForm,invalidateForm,selectIsValidated}from\"../../slices/form.slice\";import{Container,Row,Col,Card,InputGroup,Form,FormControl,Button,Alert,ProgressBar}from\"react-bootstrap\";import List from\"../list/list.component\";import{ButtonGroupContainer,ButtonContainer,AlertContainer,ListContainer}from\"./recipe-form.styles\";import{Add}from\"@material-ui/icons\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RecipeForm=function RecipeForm(){var dispatch=useDispatch();var ref=useRef(null);var userId=useSelector(selectUserId);var ingredient=useSelector(selectIngredient);var ingredientExists=useSelector(selectIngredientExists);var _useState=useState(0),_useState2=_slicedToArray(_useState,2),uploadProgress=_useState2[0],setUploadProgress=_useState2[1];if(ingredientExists){setTimeout(function(){dispatch(resetIngredient());dispatch(resetIngredientExists());},1750);}var fullRecipe=useSelector(selectFullRecipe);var itemsRef=firebase.database().ref(\"users\").child(userId).child(\"items\");var handleUpload=function handleUpload(event){while(uploadProgress<100){setTimeout(function(){setUploadProgress(uploadProgress+10);},100);}event.preventDefault();var data=new FormData();console.log(ref.current.files[0]);data.append(\"file\",ref.current.files[0]);data.append(\"filename\",ref.current.value);fetch(\"/upload\",{method:\"POST\",body:data}).then(function(res){return res.json();}).then(function(data){dispatch(setUrl(data.result));});};var handleSubmit=function handleSubmit(event){var form=event.currentTarget;if(form.checkValidity()===false){dispatch(invalidateForm());event.preventDefault();event.stopPropagation();}else{dispatch(validateForm());itemsRef.push(fullRecipe);dispatch(clearForm());dispatch(deactivateForm());}};return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(Row,{className:\"justify-content-center\",children:/*#__PURE__*/_jsx(Col,{md:7,children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{style:{textAlign:\"center\"},as:\"h5\",children:\"New Recipe\"}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(Form,{noValidate:true// validated={!isFormValidated}\n,onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Recipe Name\"}),/*#__PURE__*/_jsx(Form.Control,{onChange:function onChange(event){dispatch(setFullRecipe(event.target));},type:\"text\",placeholder:\"Add the name of your recipe here\",name:\"title\",required:true}),/*#__PURE__*/_jsx(Form.Control.Feedback,{type:\"invalid\",children:\"Please enter a recipe name.\"})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.File,{label:\"Recipe Image\",type:\"file\",ref:ref,onChange:handleUpload}),uploadProgress?/*#__PURE__*/_jsx(ProgressBar,{className:\"mt-3\",now:uploadProgress}):null]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Description\"}),/*#__PURE__*/_jsx(Form.Control,{onChange:function onChange(event){dispatch(setFullRecipe(event.target));},type:\"text\",placeholder:\"Add your description here\",name:\"description\",as:\"textarea\",rows:2,required:true}),/*#__PURE__*/_jsx(Form.Control.Feedback,{type:\"invalid\",children:\"Please enter a recipe description.\"})]}),/*#__PURE__*/_jsx(\"label\",{children:\"Ingredients\"}),/*#__PURE__*/_jsxs(InputGroup,{className:\"mb-1\",children:[/*#__PURE__*/_jsx(FormControl,{onChange:function onChange(event){dispatch(setIngredient(event.target));},onKeyPress:function onKeyPress(event){if(event.key===\"Enter\"){dispatch(addIngredient());}},type:\"text\",placeholder:\"Add ingredients here\",name:\"ingredients\",\"aria-label\":\"Ingredients list\",\"aria-describedby\":\"Ingredients list\",value:ingredient// required\n}),/*#__PURE__*/_jsx(InputGroup.Append,{children:/*#__PURE__*/_jsx(Button,{style:{borderRadius:\"0 0.25rem 0.25rem 0\"},onClick:function onClick(){dispatch(addIngredient());},variant:\"outline-secondary\",children:/*#__PURE__*/_jsx(Add,{fontSize:\"small\"})})}),/*#__PURE__*/_jsx(Form.Control.Feedback,{type:\"invalid\",children:\"Please add at least one ingredient.\"})]}),ingredientExists?/*#__PURE__*/_jsx(AlertContainer,{children:/*#__PURE__*/_jsxs(Alert,{variant:\"warning\",children:[\"You've already entered \",/*#__PURE__*/_jsx(\"strong\",{children:ingredient})]})}):null,/*#__PURE__*/_jsx(ListContainer,{children:/*#__PURE__*/_jsx(List,{})}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Directions\"}),/*#__PURE__*/_jsx(Form.Control,{onChange:function onChange(event){dispatch(setFullRecipe(event.target));},type:\"text\",name:\"directions\",as:\"textarea\",rows:8,required:true}),/*#__PURE__*/_jsx(Form.Control.Feedback,{type:\"invalid\",children:\"Please add the directions\"})]}),/*#__PURE__*/_jsxs(ButtonGroupContainer,{children:[/*#__PURE__*/_jsx(ButtonContainer,{children:/*#__PURE__*/_jsx(Button,{onClick:function onClick(){dispatch(validateForm());dispatch(deactivateForm());dispatch(clearForm());},variant:\"outline-secondary\",children:\"Cancel\"})}),/*#__PURE__*/_jsx(Button,{variant:\"outline-primary\",type:\"submit\",children:\"Save\"})]})]})})]})})})});};export default RecipeForm;","map":{"version":3,"sources":["/Users/atorenherrinton/Development/recipeas/client/src/components/recipe-form/recipe-form.component.jsx"],"names":["React","useRef","useState","useDispatch","useSelector","firebase","selectUserId","addIngredient","setIngredient","setFullRecipe","setUrl","resetIngredient","resetIngredientExists","selectFullRecipe","selectIngredient","selectIngredientExists","clearForm","deactivateForm","validateForm","invalidateForm","selectIsValidated","Container","Row","Col","Card","InputGroup","Form","FormControl","Button","Alert","ProgressBar","List","ButtonGroupContainer","ButtonContainer","AlertContainer","ListContainer","Add","RecipeForm","dispatch","ref","userId","ingredient","ingredientExists","uploadProgress","setUploadProgress","setTimeout","fullRecipe","itemsRef","database","child","handleUpload","event","preventDefault","data","FormData","console","log","current","files","append","value","fetch","method","body","then","res","json","result","handleSubmit","form","currentTarget","checkValidity","stopPropagation","push","textAlign","target","key","borderRadius"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React, { useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport firebase from \"../../firebase/firebase\";\nimport { selectUserId } from \"../../slices/authenticate.slice\";\nimport {\n  addIngredient,\n  setIngredient,\n  setFullRecipe,\n  setUrl,\n  resetIngredient,\n  resetIngredientExists,\n  selectFullRecipe,\n  selectIngredient,\n  selectIngredientExists,\n  clearForm,\n} from \"../../slices/input.slice\";\nimport {\n  deactivateForm,\n  validateForm,\n  invalidateForm,\n  selectIsValidated,\n} from \"../../slices/form.slice\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  InputGroup,\n  Form,\n  FormControl,\n  Button,\n  Alert,\n  ProgressBar,\n} from \"react-bootstrap\";\nimport List from \"../list/list.component\";\n\nimport {\n  ButtonGroupContainer,\n  ButtonContainer,\n  AlertContainer,\n  ListContainer,\n} from \"./recipe-form.styles\";\n\nimport { Add } from \"@material-ui/icons\";\n\nconst RecipeForm = () => {\n  const dispatch = useDispatch();\n  const ref = useRef(null);\n  const userId = useSelector(selectUserId);\n  const ingredient = useSelector(selectIngredient);\n  const ingredientExists = useSelector(selectIngredientExists);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  if (ingredientExists) {\n    setTimeout(() => {\n      dispatch(resetIngredient());\n      dispatch(resetIngredientExists());\n    }, 1750);\n  }\n\n  const fullRecipe = useSelector(selectFullRecipe);\n  const itemsRef = firebase\n    .database()\n    .ref(\"users\")\n    .child(userId)\n    .child(\"items\");\n\n  const handleUpload = (event) => {\n    while (uploadProgress < 100) {\n      setTimeout(() => {\n        setUploadProgress(uploadProgress + 10);\n      }, 100);\n    }\n\n    event.preventDefault();\n    const data = new FormData();\n    console.log(ref.current.files[0]);\n    data.append(\"file\", ref.current.files[0]);\n    data.append(\"filename\", ref.current.value);\n\n    fetch(\"/upload\", {\n      method: \"POST\",\n      body: data,\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        dispatch(setUrl(data.result));\n      });\n  };\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      dispatch(invalidateForm());\n      event.preventDefault();\n      event.stopPropagation();\n    } else {\n      dispatch(validateForm());\n      itemsRef.push(fullRecipe);\n      dispatch(clearForm());\n      dispatch(deactivateForm());\n    }\n  };\n\n  return (\n    <Container>\n      <Row className=\"justify-content-center\">\n        <Col md={7}>\n          <Card>\n            <Card.Header style={{ textAlign: \"center\" }} as=\"h5\">\n              New Recipe\n            </Card.Header>\n            <Card.Body>\n              <Form\n                noValidate\n                // validated={!isFormValidated}\n                onSubmit={handleSubmit}\n              >\n                <Form.Group>\n                  <Form.Label>Recipe Name</Form.Label>\n                  <Form.Control\n                    onChange={(event) => {\n                      dispatch(setFullRecipe(event.target));\n                    }}\n                    type=\"text\"\n                    placeholder=\"Add the name of your recipe here\"\n                    name=\"title\"\n                    required\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please enter a recipe name.\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group>\n                  <Form.File\n                    label=\"Recipe Image\"\n                    type=\"file\"\n                    ref={ref}\n                    onChange={handleUpload}\n                  />\n                  {uploadProgress ? (\n                    <ProgressBar className=\"mt-3\" now={uploadProgress} />\n                  ) : null}\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>Description</Form.Label>\n                  <Form.Control\n                    onChange={(event) => {\n                      dispatch(setFullRecipe(event.target));\n                    }}\n                    type=\"text\"\n                    placeholder=\"Add your description here\"\n                    name=\"description\"\n                    as=\"textarea\"\n                    rows={2}\n                    required\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please enter a recipe description.\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <label>Ingredients</label>\n                <InputGroup className=\"mb-1\">\n                  <FormControl\n                    onChange={(event) => {\n                      dispatch(setIngredient(event.target));\n                    }}\n                    onKeyPress={(event) => {\n                      if (event.key === \"Enter\") {\n                        dispatch(addIngredient());\n                      }\n                    }}\n                    type=\"text\"\n                    placeholder=\"Add ingredients here\"\n                    name=\"ingredients\"\n                    aria-label=\"Ingredients list\"\n                    aria-describedby=\"Ingredients list\"\n                    value={ingredient}\n                    // required\n                  />\n\n                  <InputGroup.Append>\n                    <Button\n                      style={{ borderRadius: \"0 0.25rem 0.25rem 0\" }}\n                      onClick={() => {\n                        dispatch(addIngredient());\n                      }}\n                      variant=\"outline-secondary\"\n                    >\n                      <Add fontSize=\"small\" />\n                    </Button>\n                  </InputGroup.Append>\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please add at least one ingredient.\n                  </Form.Control.Feedback>\n                </InputGroup>\n                {ingredientExists ? (\n                  <AlertContainer>\n                    <Alert variant=\"warning\">\n                      You've already entered <strong>{ingredient}</strong>\n                    </Alert>\n                  </AlertContainer>\n                ) : null}\n                <ListContainer>\n                  <List />\n                </ListContainer>\n                <Form.Group>\n                  <Form.Label>Directions</Form.Label>\n                  <Form.Control\n                    onChange={(event) => {\n                      dispatch(setFullRecipe(event.target));\n                    }}\n                    type=\"text\"\n                    name=\"directions\"\n                    as=\"textarea\"\n                    rows={8}\n                    required\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please add the directions\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <ButtonGroupContainer>\n                  <ButtonContainer>\n                    <Button\n                      onClick={() => {\n                        dispatch(validateForm());\n                        dispatch(deactivateForm());\n                        dispatch(clearForm());\n                      }}\n                      variant=\"outline-secondary\"\n                    >\n                      Cancel\n                    </Button>\n                  </ButtonContainer>\n                  <Button variant=\"outline-primary\" type=\"submit\">\n                    Save\n                  </Button>\n                </ButtonGroupContainer>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default RecipeForm;\n"]},"metadata":{},"sourceType":"module"}