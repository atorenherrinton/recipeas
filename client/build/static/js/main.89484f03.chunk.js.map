{"version":3,"sources":["firebase/firebase.js","slices/authenticate.slice.js","slices/form.slice.js","components/create-button/create-button.component.jsx","components/signout-button/signout-button.component.jsx","components/header/header.component.jsx","slices/input.slice.js","components/list-item/list-item.component.jsx","components/list/list.styles.jsx","components/list/list.component.jsx","components/recipe-form/recipe-form.styles.jsx","components/recipe-form/recipe-form.component.jsx","components/recipe-url/recipe-url.styles.jsx","components/recipe-url/recipe-url.component.jsx","components/new-recipe/new-recipe.component.jsx","slices/recipe.slice.js","components/getting-started/getting-started.component.jsx","components/dropdown/dropdown.styles.jsx","components/dropdown/dropdown.component.jsx","components/saved-recipe-card/saved-recipe-card.component.jsx","components/ingredient/ingredient.component.jsx","components/full-recipe/full-recipe.component.jsx","components/recipe-list/recipe-list.component.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.component.jsx","components/reset-password/reset-password.component.jsx","assets/breakfast.svg","components/authenticate/authenticate.component.jsx","components/authenticate/authenticate.styles.jsx","components/body/body.styles.jsx","components/body/body.component.jsx","App.js","app/store.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","authenticateSlice","createSlice","name","initialState","isAuthenticated","isSignIn","resetPassword","userId","credentials","email","password","conirmPassword","isEmailSent","errorMessage","reducers","authenticate","state","deauthenticate","resetCredentials","resetErrorMessage","setCredentials","action","payload","value","setIsEmailSent","setErrorMessage","setSignIn","setResetPassword","setUserId","actions","selectIsAuthenticated","selectCredentials","selectIsEmailSent","selectErrorMessage","selectIsSignIn","selectResetPassword","selectUserId","formSlice","isActive","isUrl","isValidated","activateForm","activateUrl","deactivateForm","deactivateUrl","validateForm","invalidateForm","selectIsFormActive","form","selectIsUrl","CreateButton","dispatch","useDispatch","variant","id","title","Dropdown","Item","onClick","firebaseAppAuth","firebaseApp","auth","providers","googleProvider","GoogleAuthProvider","withFirebaseAuth","props","signOut","Button","Header","useSelector","Navbar","fixed","className","bg","expand","Brand","inputSlice","ingredientExists","ingredient","fractions","fullRecipe","imageUrl","description","ingredients","directions","addIngredient","length","includes","deleteIngredient","filter","resetIngredient","resetIngredientExists","setIngredient","Object","entries","key","replace","setHovered","item","isHovered","setFullRecipe","clearForm","setAllRecipesUrl","setUrl","selectIngredient","input","selectIngredients","selectFullRecipe","selectIngredientExists","ListItem","ListGroup","Close","style","float","color","cursor","fontSize","ListContainer","styled","div","List","map","idx","AlertContainer","ButtonGroupContainer","ButtonContainer","RecipeForm","storage","ref","useRef","setTimeout","itemsRef","database","child","Container","Row","Col","md","Card","textAlign","as","Body","Form","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","push","Group","Label","Control","onChange","target","type","placeholder","required","Feedback","File","label","delete","data","FormData","console","log","current","files","append","fetch","method","body","then","res","json","result","toString","rows","InputGroup","FormControl","onKeyPress","aria-label","aria-describedby","Append","borderRadius","Add","Alert","RecipeUrl","useState","url","marginTop","controlId","NewRecipe","recipeSlice","recipe","isOpen","recipes","loadRecipes","openRecipe","closeRecipe","selectRecipes","selectRecipe","GettingStarted","xl","Title","marginBottom","Text","marginRight","marginLeft","DropdownButton","itemRef","drop","ButtonGroup","width","Toggle","padding","size","Menu","remove","SavedRecipeCard","image","setImage","getDownloadURL","Img","height","objectFit","src","Ingredient","checked","setChecked","display","textDecoration","Check","FullRecipe","Table","hover","striped","split","step","RecipeList","xs","sm","lg","CardGroup","CardColumns","error","setError","signInWithEmailAndPassword","signInWithGoogle","user","block","createUserWithEmailAndPassword","doesNotMatch","setDoesNotMatch","confirmPassword","ResetPassword","sendPasswordResetEmail","Authenticate","position","Image","class","span","offset","BodyContainer","isLoading","setIsLoading","isFormActive","Spinner","top","left","animation","useEffect","uid","on","snapshot","items","val","newState","overflowX","configureStore","reducer","inputReducer","formReducer","recipeReducer","authenticateReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.89484f03.chunk.js","sourcesContent":["/** @format */\n\nimport firebase from \"firebase\";\nconst config = {\n  apiKey: \"AIzaSyBB1V0nXw9x3HjcdUEfogIwu9z5pTOSw7w\",\n  authDomain: \"recipeas-89ec5.firebaseapp.com\",\n  databaseURL: \"https://recipeas-89ec5-default-rtdb.firebaseio.com\",\n  projectId: \"recipeas-89ec5\",\n  storageBucket: \"recipeas-89ec5.appspot.com\",\n  messagingSenderId: \"202902121548\",\n  appId: \"1:202902121548:web:c48cf60578762f396318e9\",\n  measurementId: \"G-BTL7T8SJZJ\",\n};\nfirebase.initializeApp(config);\n\nexport default firebase;\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nexport const authenticateSlice = createSlice({\n  name: \"authenticate\",\n  initialState: {\n    isAuthenticated: false,\n    isSignIn: true,\n    resetPassword: false,\n    userId: \"\",\n    credentials: {\n      email: \"\",\n      password: \"\",\n      conirmPassword: \"\",\n    },\n    isEmailSent: false,\n    errorMessage: \"\",\n  },\n  reducers: {\n    authenticate: (state) => {\n      state.isAuthenticated = true;\n    },\n    deauthenticate: (state) => {\n      state.isAuthenticated = false;\n    },\n    resetCredentials: (state) => {\n      state.credentials = {\n        ...state.credentials,\n        password: \"\",\n        conirmPassword: \"\",\n      };\n    },\n    resetErrorMessage: (state) => {\n      state.errorMessage = \"\";\n    },\n    setCredentials: (state, action) => {\n      const { value, name } = action.payload;\n      state.credentials = { ...state.credentials, [name]: value };\n    },\n    setIsEmailSent: (state, action) => {\n      state.isEmailSent = action.payload;\n    },\n    setErrorMessage: (state, action) => {\n      state.errorMessage = action.payload;\n    },\n    setSignIn: (state) => {\n      state.isSignIn = !state.isSignIn;\n    },\n    setResetPassword: (state) => {\n      state.resetPassword = !state.resetPassword;\n    },\n    setUserId: (state, action) => {\n      state.userId = action.payload;\n    },\n  },\n});\n\nexport const {\n  authenticate,\n  deauthenticate,\n  resetCredentials,\n  setCredentials,\n  resetErrorMessage,\n  setErrorMessage,\n  setIsEmailSent,\n  setResetPassword,\n  setSignIn,\n  setUserId,\n} = authenticateSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectIsAuthenticated = (state) =>\n  state.authenticate.isAuthenticated;\nexport const selectCredentials = (state) => state.authenticate.credentials;\nexport const selectIsEmailSent = (state) => state.authenticate.isEmailSent;\nexport const selectErrorMessage = (state) => state.authenticate.errorMessage;\nexport const selectIsSignIn = (state) => state.authenticate.isSignIn;\nexport const selectResetPassword = (state) => state.authenticate.resetPassword;\nexport const selectUserId = (state) => state.authenticate.userId;\n\nexport default authenticateSlice.reducer;\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nexport const formSlice = createSlice({\n  name: \"form\",\n  initialState: {\n    isActive: false,\n    isUrl: false,\n    isValidated: true,\n  },\n  reducers: {\n    activateForm: (state) => {\n      state.isActive = true;\n    },\n    activateUrl: (state) => {\n      state.isUrl = true;\n    },\n    deactivateForm: (state) => {\n      state.isActive = false;\n    },\n    deactivateUrl: (state) => {\n      state.isUrl = false;\n    },\n    validateForm: (state) => {\n      state.isValidated = true;\n    },\n    invalidateForm: (state) => {\n      state.isValidated = false;\n    },\n  },\n});\n\nexport const {\n  activateForm,\n  activateUrl,\n  deactivateForm,\n  deactivateUrl,\n  validateForm,\n  invalidateForm,\n} = formSlice.actions;\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\n// export const incrementAsync = (amount) => (dispatch) => {\n//   setTimeout(() => {\n//     dispatch(incrementByAmount(amount));\n//   }, 1000);\n// };\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectIsFormActive = (state) => state.form.isActive;\nexport const selectIsUrl = (state) => state.form.isUrl;\nexport const selectIsValidated = (state) => state.form.isValidated;\n\nexport default formSlice.reducer;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  activateForm,\n  activateUrl,\n  deactivateUrl,\n} from \"../../slices/form.slice\";\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\n\nconst CreateButton = () => {\n  const dispatch = useDispatch();\n  return (\n    <DropdownButton\n      variant=\"primary\"\n      id=\"dropdown-basic-button\"\n      title=\"Create Recipe\"\n    >\n      <Dropdown.Item\n        onClick={() => {\n          dispatch(activateForm());\n          dispatch(activateUrl());\n        }}\n      >\n        allrecipes.com\n      </Dropdown.Item>\n      <Dropdown.Item\n        onClick={() => {\n          dispatch(activateForm());\n          dispatch(deactivateUrl());\n        }}\n      >\n        from scratch\n      </Dropdown.Item>\n    </DropdownButton>\n  );\n};\n\nexport default CreateButton;\n","/** @format */\n\nimport React from \"react\";\nimport withFirebaseAuth from \"react-with-firebase-auth\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseApp from \"../../firebase/firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { deauthenticate } from \"../../slices/authenticate.slice\";\nimport { Button } from \"react-bootstrap\";\n\nconst SignoutButton = (props) => {\n  const dispatch = useDispatch();\n  const { signOut } = props;\n  return (\n    <Button\n      onClick={() => {\n        signOut();\n        dispatch(deauthenticate());\n      }}\n      variant=\"outline-secondary\"\n    >\n      Sign Out\n    </Button>\n  );\n};\n\nconst firebaseAppAuth = firebaseApp.auth();\n\nconst providers = {\n  googleProvider: new firebase.auth.GoogleAuthProvider(),\n};\n\nexport default withFirebaseAuth({\n  providers,\n  firebaseAppAuth,\n})(SignoutButton);\n","/** @format */\n\nimport React from \"react\";\n\nimport { useSelector } from \"react-redux\";\nimport { selectIsAuthenticated } from \"../../slices/authenticate.slice\";\nimport { Navbar } from \"react-bootstrap\";\nimport CreateButton from \"../create-button/create-button.component\";\nimport SignoutButton from \"../signout-button/signout-button.component\";\n\nconst Header = () => {\n  const isAuthenticated = useSelector(selectIsAuthenticated);\n  return (\n    <Navbar\n      fixed=\"top\"\n      className=\"justify-content-between\"\n      bg=\"light\"\n      expand=\"lg\"\n    >\n      <Navbar.Brand>Recipeas</Navbar.Brand>\n      {isAuthenticated ? <CreateButton /> : <span>Make it your own</span>}\n      {isAuthenticated ? <SignoutButton /> : null}\n    </Navbar>\n  );\n};\n\nexport default Header;\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nexport const inputSlice = createSlice({\n  name: \"input\",\n  initialState: {\n    ingredientExists: false,\n    ingredient: \"\",\n    fractions: {\n      \"1/4\": \"¼\",\n      \"1/3\": \"⅓\",\n      \"1/2\": \"½\",\n      \"2/3\": \"⅔\",\n      \"3/4\": \"¾\",\n    },\n    fullRecipe: {\n      imageUrl: \"\",\n      title: \"\",\n      description: \"\",\n      ingredients: [],\n      directions: \"\",\n    },\n  },\n  reducers: {\n    addIngredient: (state) => {\n      if (\n        state.ingredient.length > 0 &&\n        !state.fullRecipe.ingredients.includes(state.ingredient)\n      ) {\n        state.fullRecipe.ingredients = [\n          ...state.fullRecipe.ingredients,\n          state.ingredient,\n        ];\n        state.ingredient = \"\";\n      } else if (state.fullRecipe.ingredients.includes(state.ingredient)) {\n        state.ingredientExists = true;\n      }\n    },\n    deleteIngredient: (state, action) => {\n      state.fullRecipe.ingredients = [\n        ...state.fullRecipe.ingredients.filter(\n          (ingredient) => ingredient !== action.payload\n        ),\n      ];\n    },\n    resetIngredient: (state) => {\n      state.ingredient = \"\";\n    },\n    resetIngredientExists: (state) => {\n      state.ingredientExists = false;\n    },\n    setIngredient: (state, action) => {\n      state.ingredient = action.payload.value;\n      for (const [key, value] of Object.entries(state.fractions)) {\n        if (state.ingredient.includes(key)) {\n          state.ingredient = state.ingredient.replace(key, value);\n        }\n      }\n    },\n    setHovered: (state) => {\n      state.item.isHovered = !state.item.isHovered;\n    },\n    setFullRecipe: (state, action) => {\n      const { value, name } = action.payload;\n      state.fullRecipe = { ...state.fullRecipe, [name]: value };\n    },\n    clearForm: (state) => {\n      state.ingredient = \"\";\n      state.fullRecipe = {\n        imageUrl: \"\",\n        title: \"\",\n        description: \"\",\n        ingredients: [],\n        directions: \"\",\n      };\n    },\n  },\n});\n\nexport const {\n  addIngredient,\n  deleteIngredient,\n  setAllRecipesUrl,\n  setIngredient,\n  setUrl,\n  resetIngredient,\n  resetIngredientExists,\n  setFullRecipe,\n  clearForm,\n} = inputSlice.actions;\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\n// export const incrementAsync = (amount) => (dispatch) => {\n//   setTimeout(() => {\n//     dispatch(incrementByAmount(amount));\n//   }, 1000);\n// };\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectIngredient = (state) => state.input.ingredient;\nexport const selectIngredients = (state) => state.input.fullRecipe.ingredients;\nexport const selectFullRecipe = (state) => state.input.fullRecipe;\nexport const selectIngredientExists = (state) => state.input.ingredientExists;\n\nexport default inputSlice.reducer;\n","/** @format */\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteIngredient } from \"../../slices/input.slice\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { Close } from \"@material-ui/icons\";\n\nconst ListItem = (props) => {\n  const dispatch = useDispatch();\n  return (\n    <ListGroup.Item>\n      {props.ingredient}\n      <Close\n        onClick={() => {\n          dispatch(deleteIngredient(props.ingredient));\n        }}\n        style={{ float: \"right\", color: \"#6c757d\", cursor: \"pointer\" }}\n        fontSize=\"small\"\n      />\n    </ListGroup.Item>\n  );\n};\n\nexport default ListItem;\n","/** @format */\n\nimport styled from \"styled-components\";\n\nexport const ListContainer = styled.div`\n  margin-bottom: 1rem;\n`;\n\nexport const ButtonContainer = styled.div`\n  float: right;\n`;\n","/** @format */\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectIngredients } from \"../../slices/input.slice\";\nimport { ListGroup } from \"react-bootstrap\";\nimport ListItem from \"../list-item/list-item.component\";\nimport { ListContainer } from \"./list.styles\";\n\nconst List = () => {\n  const ingredients = useSelector(selectIngredients);\n  return (\n    <ListContainer>\n      <ListGroup variant=\"flush\">\n        {ingredients.map((ingredient, idx) => (\n          <ListItem key={idx} ingredient={ingredient} />\n        ))}\n      </ListGroup>\n    </ListContainer>\n  );\n};\n\nexport default List;\n","/** @format */\n\nimport styled from \"styled-components\";\n\nexport const AlertContainer = styled.div`\n  margin-top: 0.75rem;\n`;\n\nexport const ListContainer = styled.div`\n  margin-top: 0.75rem;\n`;\n\nexport const ButtonGroupContainer = styled.div`\n  float: right;\n  display: flex;\n`;\n\nexport const ButtonContainer = styled.div`\n  margin-right: 0.5rem;\n`;\n","/** @format */\n\nimport React, { useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport firebase from \"../../firebase/firebase\";\nimport { selectUserId } from \"../../slices/authenticate.slice\";\nimport {\n  addIngredient,\n  setIngredient,\n  setFullRecipe,\n  resetIngredient,\n  resetIngredientExists,\n  selectFullRecipe,\n  selectIngredient,\n  selectIngredientExists,\n  clearForm,\n} from \"../../slices/input.slice\";\nimport {\n  deactivateForm,\n  validateForm,\n  invalidateForm,\n} from \"../../slices/form.slice\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  InputGroup,\n  Form,\n  FormControl,\n  Button,\n  Alert,\n} from \"react-bootstrap\";\nimport List from \"../list/list.component\";\n\nimport {\n  ButtonGroupContainer,\n  ButtonContainer,\n  AlertContainer,\n  ListContainer,\n} from \"./recipe-form.styles\";\n\nimport { Add } from \"@material-ui/icons\";\n\nconst RecipeForm = () => {\n  var storage = firebase.storage();\n  const dispatch = useDispatch();\n  const ref = useRef(null);\n  const userId = useSelector(selectUserId);\n  const ingredient = useSelector(selectIngredient);\n  const ingredientExists = useSelector(selectIngredientExists);\n  if (ingredientExists) {\n    setTimeout(() => {\n      dispatch(resetIngredient());\n      dispatch(resetIngredientExists());\n    }, 1750);\n  }\n\n  const fullRecipe = useSelector(selectFullRecipe);\n  const itemsRef = firebase\n    .database()\n    .ref(\"users\")\n    .child(userId)\n    .child(\"items\");\n\n  const handleUpload = (event) => {\n    event.preventDefault();\n    if (fullRecipe.imageUrl) {\n      storage.ref().child(fullRecipe.imageUrl).delete();\n    }\n    const data = new FormData();\n    console.log(ref.current.files[0]);\n    data.append(\"file\", ref.current.files[0]);\n    data.append(\"filename\", ref.current.value);\n\n    fetch(\"https://recipeas1.herokuapp.com/upload\", {\n      method: \"POST\",\n      body: data,\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data.result)\n        dispatch(\n          setFullRecipe({\n            [\"name\"]: \"imageUrl\",\n            [\"value\"]: data.result.toString(),\n          })\n        );\n      });\n  };\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      dispatch(invalidateForm());\n      event.preventDefault();\n      event.stopPropagation();\n    } else {\n      dispatch(validateForm());\n      itemsRef.push(fullRecipe);\n      dispatch(clearForm());\n      dispatch(deactivateForm());\n    }\n  };\n\n  return (\n    <Container>\n      <Row className=\"justify-content-center\">\n        <Col md={7}>\n          <Card>\n            <Card.Header style={{ textAlign: \"center\" }} as=\"h5\">\n              New Recipe\n            </Card.Header>\n            <Card.Body>\n              <Form\n                noValidate\n                // validated={!isFormValidated}\n                onSubmit={handleSubmit}\n              >\n                <Form.Group>\n                  <Form.Label>Recipe Name</Form.Label>\n                  <Form.Control\n                    onChange={(event) => {\n                      dispatch(setFullRecipe(event.target));\n                    }}\n                    type=\"text\"\n                    placeholder=\"Add the name of your recipe here\"\n                    name=\"title\"\n                    required\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please enter a recipe name.\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group>\n                  <Form.File\n                    label=\"Recipe Image\"\n                    type=\"file\"\n                    ref={ref}\n                    onChange={handleUpload}\n                  />\n                </Form.Group>\n\n                <Form.Group>\n                  <Form.Label>Description</Form.Label>\n                  <Form.Control\n                    onChange={(event) => {\n                      dispatch(setFullRecipe(event.target));\n                    }}\n                    type=\"text\"\n                    placeholder=\"Add your description here\"\n                    name=\"description\"\n                    as=\"textarea\"\n                    rows={2}\n                    required\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please enter a recipe description.\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <label>Ingredients</label>\n                <InputGroup className=\"mb-1\">\n                  <FormControl\n                    onChange={(event) => {\n                      dispatch(setIngredient(event.target));\n                    }}\n                    onKeyPress={(event) => {\n                      if (event.key === \"Enter\") {\n                        dispatch(addIngredient());\n                      }\n                    }}\n                    type=\"text\"\n                    placeholder=\"Add ingredients here\"\n                    name=\"ingredients\"\n                    aria-label=\"Ingredients list\"\n                    aria-describedby=\"Ingredients list\"\n                    value={ingredient}\n                    // required\n                  />\n\n                  <InputGroup.Append>\n                    <Button\n                      style={{ borderRadius: \"0 0.25rem 0.25rem 0\" }}\n                      onClick={() => {\n                        dispatch(addIngredient());\n                      }}\n                      variant=\"outline-secondary\"\n                    >\n                      <Add fontSize=\"small\" />\n                    </Button>\n                  </InputGroup.Append>\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please add at least one ingredient.\n                  </Form.Control.Feedback>\n                </InputGroup>\n                {ingredientExists ? (\n                  <AlertContainer>\n                    <Alert variant=\"warning\">\n                      You've already entered <strong>{ingredient}</strong>\n                    </Alert>\n                  </AlertContainer>\n                ) : null}\n                <ListContainer>\n                  <List />\n                </ListContainer>\n                <Form.Group>\n                  <Form.Label>Directions</Form.Label>\n                  <Form.Control\n                    onChange={(event) => {\n                      dispatch(setFullRecipe(event.target));\n                    }}\n                    type=\"text\"\n                    name=\"directions\"\n                    as=\"textarea\"\n                    rows={8}\n                    required\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please add the directions\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <ButtonGroupContainer>\n                  <ButtonContainer>\n                    <Button\n                      onClick={() => {\n                        if (fullRecipe.imageUrl) {\n                          storage.ref().child(fullRecipe.imageUrl).delete();\n                        }\n                        dispatch(validateForm());\n                        dispatch(deactivateForm());\n                        dispatch(clearForm());\n                      }}\n                      variant=\"outline-secondary\"\n                    >\n                      Cancel\n                    </Button>\n                  </ButtonContainer>\n                  <Button variant=\"outline-primary\" type=\"submit\">\n                    Save\n                  </Button>\n                </ButtonGroupContainer>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default RecipeForm;\n","/** @format */\n\nimport styled from \"styled-components\";\n\nexport const ButtonGroupContainer = styled.div`\n  float: right;\n  display: flex;\n`;\n\nexport const ButtonContainer = styled.div`\n  margin-right: 0.5rem;\n`;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport firebase from \"../../firebase/firebase\";\nimport { selectUserId } from \"../../slices/authenticate.slice\";\nimport { deactivateUrl, deactivateForm } from \"../../slices/form.slice\";\nimport { Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\nimport { ButtonContainer, ButtonGroupContainer } from \"./recipe-url.styles\";\n\nconst RecipeUrl = () => {\n  const [url, setUrl] = useState(\"\");\n  const userId = useSelector(selectUserId);\n  const itemsRef = firebase\n    .database()\n    .ref(\"users\")\n    .child(userId)\n    .child(\"items\");\n  const handleChange = (event) => {\n    setUrl(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    const url_req_string =\n      \"https://recipeas1.herokuapp.com/api/\" + \"?url=\" + url;\n    fetch(url_req_string)\n      .then((res) => res.json())\n      .then((data) => {\n        itemsRef.push(data.result);\n      });\n    dispatch(deactivateForm());\n    dispatch(deactivateUrl());\n  };\n\n  const dispatch = useDispatch();\n\n  return (\n    <Container>\n      <Row className=\"justify-content-center\">\n        <Col md={6}>\n          <Card style={{ marginTop: \"4rem\" }}>\n            <Card.Header style={{ textAlign: \"center\" }} as=\"h5\">\n              New recipe\n            </Card.Header>\n            <Card.Body>\n              <Form onSubmit={handleSubmit}>\n                <Form.Group controlId=\"formBasicEmail\">\n                  <Form.Label>Recipe URL</Form.Label>\n                  <Form.Control\n                    onChange={handleChange}\n                    placeholder=\"Enter the URL of the allrecipes.com recipe\"\n                  />\n                </Form.Group>\n\n                <ButtonGroupContainer>\n                  <ButtonContainer>\n                    <Button\n                      onClick={() => {\n                        dispatch(deactivateForm());\n                        dispatch(deactivateUrl());\n                      }}\n                      variant=\"outline-secondary\"\n                    >\n                      Cancel\n                    </Button>\n                  </ButtonContainer>\n                  <Button type=\"submit\" variant=\"outline-primary\">\n                    Save\n                  </Button>\n                </ButtonGroupContainer>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default RecipeUrl;\n","/** @format */\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectIsUrl } from \"../../slices/form.slice\";\nimport RecipeForm from \"../recipe-form/recipe-form.component\";\nimport RecipeUrl from \"../recipe-url/recipe-url.component\";\n\nconst NewRecipe = () => {\n  const isUrl = useSelector(selectIsUrl);\n  return isUrl ? <RecipeUrl /> : <RecipeForm />;\n};\n\nexport default NewRecipe;\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nexport const recipeSlice = createSlice({\n  name: \"recipe\",\n  initialState: {\n    recipe: {\n      isOpen: false,\n      fullRecipe: {},\n    },\n    imageUrl: \"\",\n    recipes: [],\n  },\n  reducers: {\n    loadRecipes: (state, action) => {\n      state.recipes = action.payload;\n    },\n    openRecipe: (state, action) => {\n      state.recipe.isOpen = true;\n      state.recipe.fullRecipe = action.payload;\n    },\n    closeRecipe: (state) => {\n      state.recipe.isOpen = false;\n      state.recipe.fullRecipe = \"\";\n    },\n\n  },\n});\n\nexport const { loadRecipes, openRecipe, closeRecipe } = recipeSlice.actions;\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\n// export const incrementAsync = (amount) => (dispatch) => {\n//   setTimeout(() => {\n//     dispatch(incrementByAmount(amount));\n//   }, 1000);\n// };\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectRecipes = (state) => state.recipe.recipes;\nexport const selectRecipe = (state) => state.recipe.recipe;\n\nexport default recipeSlice.reducer;\n","/** @format */\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Button, Card, Col, Row } from \"react-bootstrap\";\nimport {\n  activateForm,\n  activateUrl,\n  deactivateUrl,\n} from \"../../slices/form.slice\";\n\nconst GettingStarted = () => {\n  const dispatch = useDispatch();\n  return (\n    <Row className=\"justify-content-center\">\n      <Col md={6} xl={4}>\n        <Card style={{ marginTop: \"6rem\" }} className=\"text-center\">\n          <Card.Header>Getting Started</Card.Header>\n          <Card.Body>\n            <Card.Title style={{ marginBottom: \"0.5rem\" }}>\n              Create New Recipe\n            </Card.Title>\n            <Card.Text style={{ marginBottom: \"1.5rem\" }}>\n              Get started by creating a recipe\n            </Card.Text>\n            <Button\n              variant=\"outline-primary\"\n              onClick={() => {\n                dispatch(activateForm());\n                dispatch(activateUrl());\n              }}\n              style={{ marginRight: \"0.25rem\", marginBottom: \"1rem\" }}\n            >\n              allrecipes.com\n            </Button>\n            <Button\n              variant=\"outline-dark\"\n              onClick={() => {\n                dispatch(activateForm());\n                dispatch(deactivateUrl());\n              }}\n              style={{ marginLeft: \"0.25rem\", marginBottom: \"1rem\" }}\n            >\n              from scratch\n            </Button>\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default GettingStarted;\n","/** @format */\n\nimport styled from \"styled-components\";\n\nexport const ButtonContainer = styled.div`\n  position: absolute;\n  top: 1.25rem;\n  right: 1.25rem;\n`;\n","/** @format */\n\nimport React from \"react\";\nimport { closeRecipe } from \"../../slices/recipe.slice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUserId } from \"../../slices/authenticate.slice\";\nimport firebase from \"../../firebase/firebase\";\nimport { Dropdown, ButtonGroup } from \"react-bootstrap\";\nimport { ButtonContainer } from \"./dropdown.styles\";\n\nconst DropdownButton = (props) => {\n  const userId = useSelector(selectUserId);\n  const dispatch = useDispatch();\n  var storage = firebase.storage();\n  const itemRef = firebase\n    .database()\n    .ref(\"users\")\n    .child(userId)\n    .child(\"items\")\n    .child(props.id);\n  return (\n    <ButtonContainer>\n      <Dropdown drop=\"down\" as={ButtonGroup} style={{ width: \"100%\" }}>\n        <Dropdown.Toggle\n          style={{\n            padding: \".25rem .65rem\",\n          }}\n          variant=\"dark\"\n          size=\"sm\"\n        ></Dropdown.Toggle>\n        <Dropdown.Menu>\n          <Dropdown.Item\n            onClick={() => {\n              if (props.imageUrl.includes(\"firebase\")) {\n                storage.ref().child(props.imageUrl).delete();\n              }\n              itemRef.remove();\n              dispatch(closeRecipe());\n            }}\n          >\n            Delete Recipe\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    </ButtonContainer>\n  );\n};\n\nexport default DropdownButton;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport firebase from \"../../firebase/firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { openRecipe } from \"../../slices/recipe.slice\";\nimport { Card, Button } from \"react-bootstrap\";\nimport DropdownButton from \"../dropdown/dropdown.component\";\n\nconst SavedRecipeCard = (props) => {\n  const dispatch = useDispatch();\n  const [image, setImage] = useState(\"\");\n  var storage = firebase.storage();\n\n  if (props.imageUrl.includes(\"firebase\")) {\n    storage\n      .ref()\n      .child(props.imageUrl)\n      .getDownloadURL()\n      .then((url) => {\n        setImage(url);\n      });\n  }\n\n  return (\n    <Card>\n      <DropdownButton imageUrl={props.imageUrl} id={props.id} />\n      <Card.Img\n        style={{ height: \"20rem\", objectFit: \"cover\" }}\n        variant=\"top\"\n        src={image ? image : props.imageUrl}\n      />\n\n      <Card.Body>\n        <Card.Title>{props.title}</Card.Title>\n\n        <Card.Text>{props.description}</Card.Text>\n\n        <Button\n          style={{ width: \"100%\" }}\n          variant=\"outline-primary\"\n          onClick={() => {\n            dispatch(openRecipe(props));\n          }}\n        >\n          Open Recipe\n        </Button>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default SavedRecipeCard;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nconst Ingredient = (props) => {\n  const [checked, setChecked] = useState(false);\n\n  const handleClick = () => {\n    setChecked(!checked);\n  };\n  return (\n    <tr>\n      <td\n        style={\n          checked\n            ? {\n                display: \"flex\",\n                textDecoration: \"line-through\",\n              }\n            : { display: \"flex\" }\n        }\n      >\n        <Form.Check onClick={handleClick} type=\"checkbox\" />\n        {props.ingredient}\n      </td>\n    </tr>\n  );\n};\n\nexport default Ingredient;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { closeRecipe } from \"../../slices/recipe.slice\";\nimport { Button, Card, Col, Container, Row, Table } from \"react-bootstrap\";\nimport DropdownButton from \"../dropdown/dropdown.component\";\nimport Ingredient from \"../ingredient/ingredient.component\";\nimport firebase from \"../../firebase/firebase\";\n\nconst FullRecipe = (props) => {\n  const dispatch = useDispatch();\n  const [image, setImage] = useState(\"\");\n  var storage = firebase.storage();\n  // Get the download URL\n\n  if (props.imageUrl.includes(\"firebase\")) {\n    storage\n      .ref()\n      .child(props.imageUrl)\n      .getDownloadURL()\n      .then((url) => {\n        setImage(url);\n      });\n  }\n\n  return (\n    <Card>\n      <DropdownButton imageUrl={props.imageUrl} id={props.id} />\n      <Card.Img\n        style={{ height: \"25rem\", objectFit: \"cover\" }}\n        variant=\"top\"\n        src={image ? image : props.imageUrl}\n      />\n      <Card.Body>\n        <h4>{props.title}</h4>\n        <p>{props.description}</p>\n        {props.ingredients ? (\n          <Table hover size=\"sm\">\n            <thead>\n              <th>Ingredients</th>\n            </thead>\n            <tbody>\n              {props.ingredients.map((ingredient, idx) => (\n                <Ingredient key={idx} ingredient={ingredient} />\n              ))}\n            </tbody>\n          </Table>\n        ) : null}\n        <Table striped size=\"sm\">\n          <thead>\n            <th>Directions</th>\n          </thead>\n          <tbody>\n            {props.directions.split(\"\\n\").map((step, idx) => (\n              <tr>\n                <td key={idx}>{step}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n\n        <Button\n          style={{ width: \"100%\" }}\n          variant=\"outline-primary\"\n          onClick={() => {\n            dispatch(closeRecipe());\n          }}\n        >\n          Close Recipe\n        </Button>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default FullRecipe;\n","/** @format */\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectRecipe, selectRecipes } from \"../../slices/recipe.slice\";\nimport { CardColumns, CardGroup, Col, Row } from \"react-bootstrap\";\nimport GettingStarted from \"../getting-started/getting-started.component\";\nimport SavedRecipeCard from \"../saved-recipe-card/saved-recipe-card.component\";\nimport FullRecipe from \"../full-recipe/full-recipe.component\";\n\nconst RecipeList = () => {\n  const recipes = useSelector(selectRecipes);\n  const recipe = useSelector(selectRecipe);\n  return (\n    <Row className=\"justify-content-center\">\n      {!recipes.length > 0 ? (\n        <Col xs={11} sm={10} md={10}>\n          <GettingStarted />\n        </Col>\n      ) : recipe.isOpen ? (\n        <Col xs={11} sm={10} md={8} lg={6} xl={5}>\n          <CardGroup>\n            <FullRecipe\n              id={recipe.fullRecipe.id}\n              title={recipe.fullRecipe.title}\n              imageUrl={recipe.fullRecipe.imageUrl}\n              description={recipe.fullRecipe.description}\n              ingredients={recipe.fullRecipe.ingredients}\n              directions={recipe.fullRecipe.directions}\n            />\n          </CardGroup>\n        </Col>\n      ) : (\n        <Col xs={11} lg={10}>\n          <CardColumns>\n            {recipes.map((recipe, idx) => (\n              <SavedRecipeCard\n                key={idx}\n                id={recipe.id}\n                title={recipe.title}\n                imageUrl={recipe.imageUrl}\n                description={recipe.description}\n                ingredients={recipe.ingredients}\n                directions={recipe.directions}\n              />\n            ))}\n          </CardColumns>\n        </Col>\n      )}\n    </Row>\n  );\n};\n\nexport default RecipeList;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport withFirebaseAuth from \"react-with-firebase-auth\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseApp from \"../../firebase/firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  authenticate,\n  selectCredentials,\n  resetCredentials,\n  setCredentials,\n  setIsEmailSent,\n  selectIsEmailSent,\n  resetErrorMessage,\n  selectErrorMessage,\n  setErrorMessage,\n  setResetPassword,\n  setSignIn,\n} from \"../../slices/authenticate.slice\";\nimport {\n  Alert,\n  Container,\n  Row,\n  Col,\n  Card,\n  Form,\n  Button,\n} from \"react-bootstrap\";\n\nconst SignUp = (props) => {\n  const {\n    error,\n    setError,\n    signInWithEmailAndPassword,\n    signInWithGoogle,\n    user,\n  } = props;\n  const credentials = useSelector(selectCredentials);\n  const dispatch = useDispatch();\n  const errorMessage = useSelector(selectErrorMessage);\n  const isEmailSent = useSelector(selectIsEmailSent);\n\n  if (isEmailSent) {\n    setTimeout(() => {\n      dispatch(setIsEmailSent(false));\n    }, 2000);\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    signInWithEmailAndPassword(credentials.email, credentials.password);\n    dispatch(resetCredentials());\n  };\n\n  if (error) {\n    dispatch(setErrorMessage(error));\n  }\n  if (user) {\n    dispatch(authenticate());\n  }\n\n  return (\n    <Container>\n      <Row className=\"justify-content-center\">\n        <Col>\n          <Card>\n            <Card.Header style={{ textAlign: \"center\" }} as=\"h5\">\n              Sign In\n            </Card.Header>\n            <Card.Body>\n              <Form onSubmit={handleSubmit}>\n                {isEmailSent ? (\n                  <Alert variant=\"success\">\n                    An email has been sent to reset your password\n                  </Alert>\n                ) : null}\n                <Form.Group controlId=\"formBasicEmail\">\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control\n                    onChange={(event) => {\n                      dispatch(setCredentials(event.target));\n                      setError(\"reset\");\n                    }}\n                    name=\"email\"\n                    type=\"email\"\n                    value={credentials.email}\n                    placeholder=\"Enter email\"\n                  />\n                </Form.Group>\n\n                <Form.Group\n                  style={{ marginBottom: \"0.25rem\" }}\n                  controlId=\"formBasicPassword\"\n                >\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    onChange={(event) => {\n                      dispatch(setCredentials(event.target));\n                      setError(\"reset\");\n                    }}\n                    name=\"password\"\n                    type=\"password\"\n                    value={credentials.password}\n                    placeholder=\"Password\"\n                  />\n                </Form.Group>\n                {errorMessage && errorMessage !== \"reset\" ? (\n                  <Alert className=\"mt-3\" variant=\"warning\">\n                    {errorMessage}\n                  </Alert>\n                ) : null}\n                <Button\n                  className=\"mt-2\"\n                  onClick={() => {\n                    dispatch(setResetPassword());\n                  }}\n                  block\n                  variant=\"link\"\n                >\n                  Forgot password?\n                </Button>\n                <Button\n                  className=\"mt-2\"\n                  block\n                  variant=\"outline-primary\"\n                  type=\"submit\"\n                >\n                  Sign In\n                </Button>\n\n                <Button\n                  onClick={signInWithGoogle}\n                  className=\"mt-3\"\n                  block\n                  variant=\"outline-secondary\"\n                >\n                  Continue with Google\n                </Button>\n\n                <Button\n                  onClick={() => {\n                    dispatch(setSignIn());\n                    dispatch(resetErrorMessage());\n                    dispatch(resetCredentials());\n                  }}\n                  className=\"mt-3\"\n                  block\n                  variant=\"light\"\n                >\n                  Don't have an account? Sign up\n                </Button>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nconst firebaseAppAuth = firebaseApp.auth();\n\nconst providers = {\n  googleProvider: new firebase.auth.GoogleAuthProvider(),\n};\n\nexport default withFirebaseAuth({\n  providers,\n  firebaseAppAuth,\n})(SignUp);\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport withFirebaseAuth from \"react-with-firebase-auth\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseApp from \"../../firebase/firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  authenticate,\n  selectCredentials,\n  selectErrorMessage,\n  resetCredentials,\n  resetErrorMessage,\n  setCredentials,\n  setErrorMessage,\n  setSignIn,\n} from \"../../slices/authenticate.slice\";\nimport {\n  Alert,\n  Container,\n  Row,\n  Col,\n  Card,\n  Form,\n  Button,\n} from \"react-bootstrap\";\n\nconst SignUp = (props) => {\n  const {\n    createUserWithEmailAndPassword,\n    setError,\n    error,\n    signInWithGoogle,\n    user,\n  } = props;\n  const credentials = useSelector(selectCredentials);\n  const [doesNotMatch, setDoesNotMatch] = useState(false);\n  if (doesNotMatch) {\n    setTimeout(() => {}, 1750);\n  }\n  const errorMessage = useSelector(selectErrorMessage);\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (credentials.password !== credentials.confirmPassword) {\n      setDoesNotMatch(true);\n    } else {\n      createUserWithEmailAndPassword(credentials.email, credentials.password);\n      dispatch(resetCredentials());\n    }\n  };\n  const dispatch = useDispatch();\n  if (error) {\n    dispatch(setErrorMessage(error));\n  }\n  if (user) {\n    dispatch(authenticate());\n  }\n  return (\n    <Container>\n      <Row className=\"justify-content-center\">\n        <Col>\n          <Card>\n            <Card.Header style={{ textAlign: \"center\" }} as=\"h5\">\n              Sign Up\n            </Card.Header>\n            <Card.Body>\n              <Form onSubmit={handleSubmit}>\n                <Form.Group controlId=\"formBasicEmail\">\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control\n                    onChange={(event) => {\n                      dispatch(setCredentials(event.target));\n                      setError(\"reset\");\n                      setDoesNotMatch(false);\n                    }}\n                    name=\"email\"\n                    type=\"email\"\n                    value={credentials.email}\n                    placeholder=\"Enter email\"\n                  />\n                  <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    onChange={(event) => {\n                      dispatch(setCredentials(event.target));\n                      setError(\"reset\");\n                      setDoesNotMatch(false);\n                    }}\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                  />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                  <Form.Label>Confirm password</Form.Label>\n                  <Form.Control\n                    onChange={(event) => {\n                      dispatch(setCredentials(event.target));\n                      setError(\"reset\");\n                      setDoesNotMatch(false);\n                    }}\n                    name=\"confirmPassword\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                  />\n                </Form.Group>\n                {doesNotMatch ? (\n                  <Alert variant=\"warning\">The passwords do not match</Alert>\n                ) : null}\n                {errorMessage && errorMessage !== \"reset\" ? (\n                  <Alert variant=\"warning\">{errorMessage}</Alert>\n                ) : null}\n\n                <Button\n                  className=\"mt-3\"\n                  block\n                  variant=\"outline-primary\"\n                  type=\"submit\"\n                >\n                  Sign Up\n                </Button>\n                <Button\n                  onClick={signInWithGoogle}\n                  className=\"mt-3\"\n                  block\n                  variant=\"outline-secondary\"\n                >\n                  Continue with Google\n                </Button>\n                <Button\n                  onClick={() => {\n                    dispatch(setSignIn());\n                    dispatch(resetErrorMessage());\n                  }}\n                  className=\"mt-3\"\n                  block\n                  variant=\"light\"\n                >\n                  Already have an account? Sign in\n                </Button>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nconst firebaseAppAuth = firebaseApp.auth();\n\nconst providers = {\n  googleProvider: new firebase.auth.GoogleAuthProvider(),\n};\n\nexport default withFirebaseAuth({\n  providers,\n  firebaseAppAuth,\n})(SignUp);\n","/** @format */\n\nimport React from \"react\";\nimport firebaseApp from \"../../firebase/firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectCredentials,\n  setCredentials,\n  setIsEmailSent,\n  setResetPassword,\n} from \"../../slices/authenticate.slice\";\nimport { Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\n\nconst ResetPassword = () => {\n  const dispatch = useDispatch();\n  const credentials = useSelector(selectCredentials);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    firebaseApp.auth().sendPasswordResetEmail(credentials.email);\n    dispatch(setIsEmailSent(true));\n    dispatch(setResetPassword());\n  };\n\n  return (\n    <Container>\n      <Row className=\"justify-content-center\">\n        <Col>\n          <Card>\n            <Card.Header style={{ textAlign: \"center\" }} as=\"h5\">\n              Reset Password\n            </Card.Header>\n            <Card.Body>\n              <Form onSubmit={handleSubmit}>\n                <Form.Group controlId=\"formBasicEmail\">\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control\n                    onChange={(event) => {\n                      dispatch(setCredentials(event.target));\n                    }}\n                    name=\"email\"\n                    type=\"email\"\n                    value={credentials.email}\n                    placeholder=\"Enter email\"\n                  />\n                </Form.Group>\n\n                <Button\n                  className=\"mt-2\"\n                  block\n                  variant=\"outline-primary\"\n                  type=\"submit\"\n                >\n                  Reset Password\n                </Button>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default ResetPassword;\n","export default __webpack_public_path__ + \"static/media/breakfast.182e5b07.svg\";","/** @format */\n\nimport React from \"react\";\n\nimport { useSelector } from \"react-redux\";\nimport {\n  selectIsSignIn,\n  selectResetPassword,\n} from \"../../slices/authenticate.slice\";\nimport { Card, Container, Row, Col, Image } from \"react-bootstrap\";\nimport SignIn from \"../sign-in/sign-in.component\";\nimport SignUp from \"../sign-up/sign-up.component\";\nimport ResetPassword from \"../reset-password/reset-password.component\";\nimport image from \"../../assets/breakfast.svg\";\nimport { TitleContainer } from \"./authenticate.styles\";\n\nconst Authenticate = () => {\n  const isSignIn = useSelector(selectIsSignIn);\n  const resetPassword = useSelector(selectResetPassword);\n\n  return (\n    <Container\n      style={{\n        marginTop: \"150px\",\n      }}\n    >\n      <Row className=\"justify-content-center\">\n        <Col\n          style={{\n            marginBottom: \"2rem\",\n            position: \"relative\",\n            textAlign: \"center\",\n          }}\n          xs={8}\n          sm={8}\n          md={6}\n          lg={5}\n        >\n          <Image src={image} />\n        </Col>\n        <Col class=\"mt-1\" xs={12} sm={10} md={8} lg={{ span: 5, offset: 1 }}>\n          {!isSignIn ? (\n            <SignUp />\n          ) : !resetPassword ? (\n            <SignIn />\n          ) : (\n            <ResetPassword />\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Authenticate;\n","/** @format */\n\nimport styled from \"styled-components\";\n\nexport const TitleContainer = styled.div`\n  text-align: center;\n`;\n","/** @format */\n\nimport styled from \"styled-components\";\n\nexport const BodyContainer = styled.div`\n  margin-top: 100px;\n  margin-bottom: 100px;\n`;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectIsAuthenticated } from \"../../slices/authenticate.slice\";\nimport { selectIsFormActive } from \"../../slices/form.slice\";\nimport NewRecipe from \"../new-recipe/new-recipe.component\";\nimport RecipeList from \"../recipe-list/recipe-list.component\";\nimport Authenticate from \"../authenticate/authenticate.component\";\nimport { Spinner } from \"react-bootstrap\";\nimport { BodyContainer } from \"./body.styles\";\n\nconst Body = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const isAuthenticated = useSelector(selectIsAuthenticated);\n  const isFormActive = useSelector(selectIsFormActive);\n\n  setTimeout(() => {\n    setIsLoading(false);\n  }, 500);\n\n  return (\n    <BodyContainer>\n      {isLoading ? (\n        <Spinner\n          style={{ position: \"absolute\", top: \"45%\", left: \"50%\" }}\n          animation=\"border\"\n          variant=\"primary\"\n        />\n      ) : !isAuthenticated ? (\n        <Authenticate />\n      ) : !isFormActive ? (\n        <RecipeList />\n      ) : (\n        <NewRecipe />\n      )}\n    </BodyContainer>\n  );\n};\n\nexport default Body;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport withFirebaseAuth from \"react-with-firebase-auth\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseApp from \"./firebase/firebase\";\nimport Header from \"./components/header/header.component\";\nimport Body from \"./components/body/body.component\";\nimport { useEffect } from \"react\";\n\nimport { loadRecipes } from \"./slices/recipe.slice\";\nimport { setUserId } from \"./slices/authenticate.slice\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst App = (props) => {\n  const { user } = props;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // Update the document title using the browser API\n    if (user) {\n      dispatch(setUserId(user.uid));\n      const itemsRef = firebaseApp\n        .database()\n        .ref(\"users\")\n        .child(user.uid)\n        .child(\"items\");\n      itemsRef.on(\"value\", (snapshot) => {\n        let items = snapshot.val();\n        let newState = [];\n\n        for (let item in items) {\n          newState.push({\n            id: item,\n            title: items[item].title,\n            imageUrl: items[item].imageUrl,\n            description: items[item].description,\n            ingredients: items[item].ingredients,\n            directions: items[item].directions,\n          });\n        }\n        dispatch(loadRecipes(newState));\n      });\n    }\n  });\n  return (\n    <div style={{ overflowX: \"hidden\" }}>\n      <Header />\n      <Body />\n    </div>\n  );\n};\n\nconst firebaseAppAuth = firebaseApp.auth();\n\nconst providers = {\n  googleProvider: new firebase.auth.GoogleAuthProvider(),\n};\n\nexport default withFirebaseAuth({\n  providers,\n  firebaseAppAuth,\n})(App);\n","/** @format */\r\n\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport authenticateReducer from \"../slices/authenticate.slice\";\r\nimport inputReducer from \"../slices/input.slice\";\r\nimport formReducer from \"../slices/form.slice\";\r\nimport recipeReducer from \"../slices/recipe.slice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    input: inputReducer,\r\n    form: formReducer,\r\n    recipe: recipeReducer,\r\n    authenticate: authenticateReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}