{"ast":null,"code":"/** @format */import React from\"react\";import{useDispatch}from\"react-redux\";import{closeRecipe}from\"../../slices/recipe.slice\";import firebase from\"../../firebase/firebase\";import{Button,Card,Col,Container,Row}from\"react-bootstrap\";import DropdownButton from\"../dropdown/dropdown.component\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FullRecipe=function FullRecipe(props){var dispatch=useDispatch();var itemRef=firebase.database().ref(\"/items/\".concat(props.id));return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(Row,{className:\"justify-content-center\",children:/*#__PURE__*/_jsx(Col,{xl:7,children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(DropdownButton,{id:props.id}),/*#__PURE__*/_jsx(Card.Img,{style:{height:\"25rem\",objectFit:\"cover\"},variant:\"top\",src:props.imageUrl}),/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h4\",{children:props.title}),/*#__PURE__*/_jsx(\"p\",{children:props.description}),props.ingredients?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Ingredients\"}),/*#__PURE__*/_jsx(\"ul\",{children:props.ingredients.map(function(ingredient,idx){return/*#__PURE__*/_jsx(\"li\",{children:ingredient},idx);})})]}):null,/*#__PURE__*/_jsx(\"h5\",{children:\"Directions\"}),props.directions.split(\"\\n\").map(function(step,idx){return/*#__PURE__*/_jsx(\"p\",{children:step},idx);}),/*#__PURE__*/_jsx(Button,{style:{width:\"100%\"},variant:\"outline-primary\",onClick:function onClick(){dispatch(closeRecipe());},children:\"Close Recipe\"})]})]})})})});};export default FullRecipe;","map":{"version":3,"sources":["/Users/atorenherrinton/Development/recipeas/src/components/full-recipe/full-recipe.component.jsx"],"names":["React","useDispatch","closeRecipe","firebase","Button","Card","Col","Container","Row","DropdownButton","FullRecipe","props","dispatch","itemRef","database","ref","id","height","objectFit","imageUrl","title","description","ingredients","map","ingredient","idx","directions","split","step","width"],"mappings":"AAAA,cAEA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,WAAT,KAA4B,2BAA5B,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,GAAvB,CAA4BC,SAA5B,CAAuCC,GAAvC,KAAkD,iBAAlD,CACA,MAAOC,CAAAA,cAAP,KAA2B,gCAA3B,C,wFAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAC5B,GAAMC,CAAAA,QAAQ,CAAGX,WAAW,EAA5B,CACA,GAAMY,CAAAA,OAAO,CAAGV,QAAQ,CAACW,QAAT,GAAoBC,GAApB,kBAAkCJ,KAAK,CAACK,EAAxC,EAAhB,CACA,mBACE,KAAC,SAAD,wBACE,KAAC,GAAD,EAAK,SAAS,CAAC,wBAAf,uBACE,KAAC,GAAD,EAAK,EAAE,CAAE,CAAT,uBACE,MAAC,IAAD,yBACE,KAAC,cAAD,EAAgB,EAAE,CAAEL,KAAK,CAACK,EAA1B,EADF,cAEE,KAAC,IAAD,CAAM,GAAN,EACE,KAAK,CAAE,CAAEC,MAAM,CAAE,OAAV,CAAmBC,SAAS,CAAE,OAA9B,CADT,CAEE,OAAO,CAAC,KAFV,CAGE,GAAG,CAAEP,KAAK,CAACQ,QAHb,EAFF,cAOE,MAAC,IAAD,CAAM,IAAN,yBACE,oBAAKR,KAAK,CAACS,KAAX,EADF,cAEE,mBAAIT,KAAK,CAACU,WAAV,EAFF,CAGGV,KAAK,CAACW,WAAN,cACC,oCACE,mCADF,cAEE,oBACGX,KAAK,CAACW,WAAN,CAAkBC,GAAlB,CAAsB,SAACC,UAAD,CAAaC,GAAb,qBACrB,oBAAeD,UAAf,EAASC,GAAT,CADqB,EAAtB,CADH,EAFF,GADD,CASG,IAZN,cAaE,kCAbF,CAcGd,KAAK,CAACe,UAAN,CAAiBC,KAAjB,CAAuB,IAAvB,EAA6BJ,GAA7B,CAAiC,SAACK,IAAD,CAAOH,GAAP,qBAChC,mBAAcG,IAAd,EAAQH,GAAR,CADgC,EAAjC,CAdH,cAkBE,KAAC,MAAD,EACE,KAAK,CAAE,CAAEI,KAAK,CAAE,MAAT,CADT,CAEE,OAAO,CAAC,iBAFV,CAGE,OAAO,CAAE,kBAAM,CACbjB,QAAQ,CAACV,WAAW,EAAZ,CAAR,CACD,CALH,0BAlBF,GAPF,GADF,EADF,EADF,EADF,CA4CD,CA/CD,CAiDA,cAAeQ,CAAAA,UAAf","sourcesContent":["/** @format */\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { closeRecipe } from \"../../slices/recipe.slice\";\nimport firebase from \"../../firebase/firebase\";\nimport { Button, Card, Col, Container, Row } from \"react-bootstrap\";\nimport DropdownButton from \"../dropdown/dropdown.component\"\n\nconst FullRecipe = (props) => {\n  const dispatch = useDispatch();\n  const itemRef = firebase.database().ref(`/items/${props.id}`);\n  return (\n    <Container>\n      <Row className=\"justify-content-center\">\n        <Col xl={7}>\n          <Card>\n            <DropdownButton id={props.id} />\n            <Card.Img\n              style={{ height: \"25rem\", objectFit: \"cover\" }}\n              variant=\"top\"\n              src={props.imageUrl}\n            />\n            <Card.Body>\n              <h4>{props.title}</h4>\n              <p>{props.description}</p>\n              {props.ingredients ? (\n                <div>\n                  <h5>Ingredients</h5>\n                  <ul>\n                    {props.ingredients.map((ingredient, idx) => (\n                      <li key={idx}>{ingredient}</li>\n                    ))}\n                  </ul>\n                </div>\n              ) : null}\n              <h5>Directions</h5>\n              {props.directions.split(\"\\n\").map((step, idx) => (\n                <p key={idx}>{step}</p>\n              ))}\n\n              <Button\n                style={{ width: \"100%\" }}\n                variant=\"outline-primary\"\n                onClick={() => {\n                  dispatch(closeRecipe());\n                }}\n              >\n                Close Recipe\n              </Button>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default FullRecipe;\n"]},"metadata":{},"sourceType":"module"}