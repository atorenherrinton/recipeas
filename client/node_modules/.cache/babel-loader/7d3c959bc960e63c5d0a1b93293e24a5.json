{"ast":null,"code":"import _slicedToArray from\"/Users/atorenherrinton/Development/recipeas/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/** @format */import React,{useState}from\"react\";import withFirebaseAuth from\"react-with-firebase-auth\";import firebase from\"firebase/app\";import\"firebase/auth\";import firebaseApp from\"../../firebase/firebase\";import{useDispatch,useSelector}from\"react-redux\";import{authenticate,selectCredentials,selectErrorMessage,resetCredentials,resetErrorMessage,setCredentials,setErrorMessage,setSignIn}from\"../../slices/authenticate.slice\";import{Alert,Container,Row,Col,Card,Form,Button}from\"react-bootstrap\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SignUp=function SignUp(props){var createUserWithEmailAndPassword=props.createUserWithEmailAndPassword,setError=props.setError,error=props.error,signInWithGoogle=props.signInWithGoogle,user=props.user;var credentials=useSelector(selectCredentials);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),doesNotMatch=_useState2[0],setDoesNotMatch=_useState2[1];if(doesNotMatch){setTimeout(function(){},1750);}var errorMessage=useSelector(selectErrorMessage);var handleSubmit=function handleSubmit(event){event.preventDefault();if(credentials.password!==credentials.confirmPassword){setDoesNotMatch(true);}else{createUserWithEmailAndPassword(credentials.email,credentials.password);dispatch(resetCredentials());}};var dispatch=useDispatch();if(error){dispatch(setErrorMessage(error));}if(user){dispatch(authenticate());}return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(Row,{className:\"justify-content-center\",children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{style:{textAlign:\"center\"},as:\"h5\",children:\"Sign Up\"}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"formBasicEmail\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email address\"}),/*#__PURE__*/_jsx(Form.Control,{onChange:function onChange(event){dispatch(setCredentials(event.target));setError(\"reset\");setDoesNotMatch(false);},name:\"email\",type:\"email\",value:credentials.email,placeholder:\"Enter email\"}),/*#__PURE__*/_jsx(Form.Text,{className:\"text-muted\",children:\"We'll never share your email with anyone else.\"})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"formBasicPassword\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Form.Control,{onChange:function onChange(event){dispatch(setCredentials(event.target));setError(\"reset\");setDoesNotMatch(false);},name:\"password\",type:\"password\",placeholder:\"Password\"})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"formBasicPassword\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Confirm password\"}),/*#__PURE__*/_jsx(Form.Control,{onChange:function onChange(event){dispatch(setCredentials(event.target));setError(\"reset\");setDoesNotMatch(false);},name:\"confirmPassword\",type:\"password\",placeholder:\"Password\"})]}),doesNotMatch?/*#__PURE__*/_jsx(Alert,{variant:\"warning\",children:\"The passwords do not match\"}):null,errorMessage&&errorMessage!==\"reset\"?/*#__PURE__*/_jsx(Alert,{variant:\"warning\",children:errorMessage}):null,/*#__PURE__*/_jsx(Button,{className:\"mt-3\",block:true,variant:\"outline-primary\",type:\"submit\",children:\"Sign Up\"}),/*#__PURE__*/_jsx(Button,{onClick:signInWithGoogle,className:\"mt-3\",block:true,variant:\"outline-secondary\",children:\"Continue with Google\"}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){dispatch(setSignIn());dispatch(resetErrorMessage());},className:\"mt-3\",block:true,variant:\"light\",children:\"Already have an account? Sign in\"})]})})]})})})});};var firebaseAppAuth=firebaseApp.auth();var providers={googleProvider:new firebase.auth.GoogleAuthProvider()};export default withFirebaseAuth({providers:providers,firebaseAppAuth:firebaseAppAuth})(SignUp);","map":{"version":3,"sources":["/Users/atorenherrinton/Development/recipeas/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","withFirebaseAuth","firebase","firebaseApp","useDispatch","useSelector","authenticate","selectCredentials","selectErrorMessage","resetCredentials","resetErrorMessage","setCredentials","setErrorMessage","setSignIn","Alert","Container","Row","Col","Card","Form","Button","SignUp","props","createUserWithEmailAndPassword","setError","error","signInWithGoogle","user","credentials","doesNotMatch","setDoesNotMatch","setTimeout","errorMessage","handleSubmit","event","preventDefault","password","confirmPassword","email","dispatch","textAlign","target","firebaseAppAuth","auth","providers","googleProvider","GoogleAuthProvider"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React, { useState } from \"react\";\nimport withFirebaseAuth from \"react-with-firebase-auth\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseApp from \"../../firebase/firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  authenticate,\n  selectCredentials,\n  selectErrorMessage,\n  resetCredentials,\n  resetErrorMessage,\n  setCredentials,\n  setErrorMessage,\n  setSignIn,\n} from \"../../slices/authenticate.slice\";\nimport {\n  Alert,\n  Container,\n  Row,\n  Col,\n  Card,\n  Form,\n  Button,\n} from \"react-bootstrap\";\n\nconst SignUp = (props) => {\n  const {\n    createUserWithEmailAndPassword,\n    setError,\n    error,\n    signInWithGoogle,\n    user,\n  } = props;\n  const credentials = useSelector(selectCredentials);\n  const [doesNotMatch, setDoesNotMatch] = useState(false);\n  if (doesNotMatch) {\n    setTimeout(() => {}, 1750);\n  }\n  const errorMessage = useSelector(selectErrorMessage);\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (credentials.password !== credentials.confirmPassword) {\n      setDoesNotMatch(true);\n    } else {\n      createUserWithEmailAndPassword(credentials.email, credentials.password);\n      dispatch(resetCredentials());\n    }\n  };\n  const dispatch = useDispatch();\n  if (error) {\n    dispatch(setErrorMessage(error));\n  }\n  if (user) {\n    dispatch(authenticate());\n  }\n  return (\n    <Container>\n      <Row className=\"justify-content-center\">\n        <Col>\n          <Card>\n            <Card.Header style={{ textAlign: \"center\" }} as=\"h5\">\n              Sign Up\n            </Card.Header>\n            <Card.Body>\n              <Form onSubmit={handleSubmit}>\n                <Form.Group controlId=\"formBasicEmail\">\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control\n                    onChange={(event) => {\n                      dispatch(setCredentials(event.target));\n                      setError(\"reset\");\n                      setDoesNotMatch(false);\n                    }}\n                    name=\"email\"\n                    type=\"email\"\n                    value={credentials.email}\n                    placeholder=\"Enter email\"\n                  />\n                  <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                  </Form.Text>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    onChange={(event) => {\n                      dispatch(setCredentials(event.target));\n                      setError(\"reset\");\n                      setDoesNotMatch(false);\n                    }}\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                  />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                  <Form.Label>Confirm password</Form.Label>\n                  <Form.Control\n                    onChange={(event) => {\n                      dispatch(setCredentials(event.target));\n                      setError(\"reset\");\n                      setDoesNotMatch(false);\n                    }}\n                    name=\"confirmPassword\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                  />\n                </Form.Group>\n                {doesNotMatch ? (\n                  <Alert variant=\"warning\">The passwords do not match</Alert>\n                ) : null}\n                {errorMessage && errorMessage !== \"reset\" ? (\n                  <Alert variant=\"warning\">{errorMessage}</Alert>\n                ) : null}\n\n                <Button\n                  className=\"mt-3\"\n                  block\n                  variant=\"outline-primary\"\n                  type=\"submit\"\n                >\n                  Sign Up\n                </Button>\n                <Button\n                  onClick={signInWithGoogle}\n                  className=\"mt-3\"\n                  block\n                  variant=\"outline-secondary\"\n                >\n                  Continue with Google\n                </Button>\n                <Button\n                  onClick={() => {\n                    dispatch(setSignIn());\n                    dispatch(resetErrorMessage());\n                  }}\n                  className=\"mt-3\"\n                  block\n                  variant=\"light\"\n                >\n                  Already have an account? Sign in\n                </Button>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nconst firebaseAppAuth = firebaseApp.auth();\n\nconst providers = {\n  googleProvider: new firebase.auth.GoogleAuthProvider(),\n};\n\nexport default withFirebaseAuth({\n  providers,\n  firebaseAppAuth,\n})(SignUp);\n"]},"metadata":{},"sourceType":"module"}