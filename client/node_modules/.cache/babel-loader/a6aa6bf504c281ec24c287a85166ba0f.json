{"ast":null,"code":"import _defineProperty from\"/Users/atorenherrinton/Development/recipeas/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/atorenherrinton/Development/recipeas/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";/** @format */import{createSlice}from\"@reduxjs/toolkit\";export var authenticateSlice=createSlice({name:\"authenticate\",initialState:{isAuthenticated:false,isSignIn:true,resetPassword:false,userId:\"\",credentials:{email:\"\",password:\"\",conirmPassword:\"\"},isEmailSent:false,errorMessage:\"\"},reducers:{authenticate:function authenticate(state){state.isAuthenticated=true;},deauthenticate:function deauthenticate(state){state.isAuthenticated=false;},resetCredentials:function resetCredentials(state){state.credentials=_objectSpread(_objectSpread({},state.credentials),{},{password:\"\",conirmPassword:\"\"});},resetErrorMessage:function resetErrorMessage(state){state.errorMessage=\"\";},setCredentials:function setCredentials(state,action){var _action$payload=action.payload,value=_action$payload.value,name=_action$payload.name;state.credentials=_objectSpread(_objectSpread({},state.credentials),{},_defineProperty({},name,value));},setIsEmailSent:function setIsEmailSent(state,action){state.isEmailSent=action.payload;},setErrorMessage:function setErrorMessage(state,action){state.errorMessage=action.payload;},setSignIn:function setSignIn(state){state.isSignIn=!state.isSignIn;},setResetPassword:function setResetPassword(state){state.resetPassword=!state.resetPassword;},setUserId:function setUserId(state,action){state.userId=action.payload;}}});var _authenticateSlice$ac=authenticateSlice.actions,authenticate=_authenticateSlice$ac.authenticate,deauthenticate=_authenticateSlice$ac.deauthenticate,resetCredentials=_authenticateSlice$ac.resetCredentials,setCredentials=_authenticateSlice$ac.setCredentials,resetErrorMessage=_authenticateSlice$ac.resetErrorMessage,setErrorMessage=_authenticateSlice$ac.setErrorMessage,setIsEmailSent=_authenticateSlice$ac.setIsEmailSent,setResetPassword=_authenticateSlice$ac.setResetPassword,setSignIn=_authenticateSlice$ac.setSignIn,setUserId=_authenticateSlice$ac.setUserId;// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport{authenticate,deauthenticate,resetCredentials,setCredentials,resetErrorMessage,setErrorMessage,setIsEmailSent,setResetPassword,setSignIn,setUserId};export var selectIsAuthenticated=function selectIsAuthenticated(state){return state.authenticate.isAuthenticated;};export var selectCredentials=function selectCredentials(state){return state.authenticate.credentials;};export var selectIsEmailSent=function selectIsEmailSent(state){return state.authenticate.isEmailSent;};export var selectErrorMessage=function selectErrorMessage(state){return state.authenticate.errorMessage;};export var selectIsSignIn=function selectIsSignIn(state){return state.authenticate.isSignIn;};export var selectResetPassword=function selectResetPassword(state){return state.authenticate.resetPassword;};export var selectUserId=function selectUserId(state){return state.authenticate.userId;};export default authenticateSlice.reducer;","map":{"version":3,"sources":["/Users/atorenherrinton/Development/recipeas/client/src/slices/authenticate.slice.js"],"names":["createSlice","authenticateSlice","name","initialState","isAuthenticated","isSignIn","resetPassword","userId","credentials","email","password","conirmPassword","isEmailSent","errorMessage","reducers","authenticate","state","deauthenticate","resetCredentials","resetErrorMessage","setCredentials","action","payload","value","setIsEmailSent","setErrorMessage","setSignIn","setResetPassword","setUserId","actions","selectIsAuthenticated","selectCredentials","selectIsEmailSent","selectErrorMessage","selectIsSignIn","selectResetPassword","selectUserId","reducer"],"mappings":"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","sourcesContent":["/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nexport const authenticateSlice = createSlice({\n  name: \"authenticate\",\n  initialState: {\n    isAuthenticated: false,\n    isSignIn: true,\n    resetPassword: false,\n    userId: \"\",\n    credentials: {\n      email: \"\",\n      password: \"\",\n      conirmPassword: \"\",\n    },\n    isEmailSent: false,\n    errorMessage: \"\",\n  },\n  reducers: {\n    authenticate: (state) => {\n      state.isAuthenticated = true;\n    },\n    deauthenticate: (state) => {\n      state.isAuthenticated = false;\n    },\n    resetCredentials: (state) => {\n      state.credentials = {\n        ...state.credentials,\n        password: \"\",\n        conirmPassword: \"\",\n      };\n    },\n    resetErrorMessage: (state) => {\n      state.errorMessage = \"\";\n    },\n    setCredentials: (state, action) => {\n      const { value, name } = action.payload;\n      state.credentials = { ...state.credentials, [name]: value };\n    },\n    setIsEmailSent: (state, action) => {\n      state.isEmailSent = action.payload;\n    },\n    setErrorMessage: (state, action) => {\n      state.errorMessage = action.payload;\n    },\n    setSignIn: (state) => {\n      state.isSignIn = !state.isSignIn;\n    },\n    setResetPassword: (state) => {\n      state.resetPassword = !state.resetPassword;\n    },\n    setUserId: (state, action) => {\n      state.userId = action.payload;\n    },\n  },\n});\n\nexport const {\n  authenticate,\n  deauthenticate,\n  resetCredentials,\n  setCredentials,\n  resetErrorMessage,\n  setErrorMessage,\n  setIsEmailSent,\n  setResetPassword,\n  setSignIn,\n  setUserId,\n} = authenticateSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectIsAuthenticated = (state) =>\n  state.authenticate.isAuthenticated;\nexport const selectCredentials = (state) => state.authenticate.credentials;\nexport const selectIsEmailSent = (state) => state.authenticate.isEmailSent;\nexport const selectErrorMessage = (state) => state.authenticate.errorMessage;\nexport const selectIsSignIn = (state) => state.authenticate.isSignIn;\nexport const selectResetPassword = (state) => state.authenticate.resetPassword;\nexport const selectUserId = (state) => state.authenticate.userId;\n\nexport default authenticateSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}