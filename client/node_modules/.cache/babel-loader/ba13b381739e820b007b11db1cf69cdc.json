{"ast":null,"code":"import _slicedToArray from\"/Users/atorenherrinton/Development/recipeas/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/** @format */import React,{useState}from\"react\";import withFirebaseAuth from\"react-with-firebase-auth\";import firebase from\"firebase/app\";import\"firebase/auth\";import firebaseApp from\"../../firebase/firebase\";import{useDispatch,useSelector}from\"react-redux\";import{selectCredentials,setCredentials,setResetPassword}from\"../../slices/authenticate.slice\";import{Alert,Container,Row,Col,Card,Form,Button}from\"react-bootstrap\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ResetPassword=function ResetPassword(props){var resetEmail=props.resetEmail;var credentials=useSelector(selectCredentials);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),emailSent=_useState2[0],setEmailSent=_useState2[1];var handleSubmit=function handleSubmit(event){event.preventDefault();setTimeout(function(){setEmailSent(true);},1000);setTimeout(function(){setEmailSent(false);},1000);dispatch(setResetPassword());};var dispatch=useDispatch();return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(Row,{className:\"justify-content-center\",children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{style:{textAlign:\"center\"},as:\"h5\",children:\"Reset Password\"}),/*#__PURE__*/_jsx(Card.Body,{children:emailSent?/*#__PURE__*/_jsx(Alert,{variant:\"success\",children:\"An email has been sent to reset your password\"}):/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"formBasicEmail\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email address\"}),/*#__PURE__*/_jsx(Form.Control,{onChange:function onChange(event){dispatch(setCredentials(event.target));},name:\"email\",type:\"email\",value:credentials.email,placeholder:\"Enter email\"})]}),/*#__PURE__*/_jsx(Button,{className:\"mt-2\",block:true,variant:\"outline-primary\",type:\"submit\",children:\"Reset Password\"})]})})]})})})});};var firebaseAppAuth=firebaseApp.auth();var providers={googleProvider:new firebase.auth.GoogleAuthProvider()};export default withFirebaseAuth({providers:providers,firebaseAppAuth:firebaseAppAuth})(ResetPassword);","map":{"version":3,"sources":["/Users/atorenherrinton/Development/recipeas/client/src/components/reset-password/reset-password.component.jsx"],"names":["React","useState","withFirebaseAuth","firebase","firebaseApp","useDispatch","useSelector","selectCredentials","setCredentials","setResetPassword","Alert","Container","Row","Col","Card","Form","Button","ResetPassword","props","resetEmail","credentials","emailSent","setEmailSent","handleSubmit","event","preventDefault","setTimeout","dispatch","textAlign","target","email","firebaseAppAuth","auth","providers","googleProvider","GoogleAuthProvider"],"mappings":"yKAAA,cAEA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,gBAAP,KAA6B,0BAA7B,CACA,MAAOC,CAAAA,QAAP,KAAqB,cAArB,CACA,MAAO,eAAP,CACA,MAAOC,CAAAA,WAAP,KAAwB,yBAAxB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OACEC,iBADF,CAEEC,cAFF,CAGEC,gBAHF,KAIO,iCAJP,CAKA,OACEC,KADF,CAEEC,SAFF,CAGEC,GAHF,CAIEC,GAJF,CAKEC,IALF,CAMEC,IANF,CAOEC,MAPF,KAQO,iBARP,C,wFAUA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,IACvBC,CAAAA,UADuB,CACRD,KADQ,CACvBC,UADuB,CAE/B,GAAMC,CAAAA,WAAW,CAAGd,WAAW,CAACC,iBAAD,CAA/B,CAF+B,cAGGN,QAAQ,CAAC,KAAD,CAHX,wCAGxBoB,SAHwB,eAGbC,YAHa,eAK/B,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC9BA,KAAK,CAACC,cAAN,GACAC,UAAU,CAAC,UAAM,CACfJ,YAAY,CAAC,IAAD,CAAZ,CACD,CAFS,CAEP,IAFO,CAAV,CAGAI,UAAU,CAAC,UAAM,CACfJ,YAAY,CAAC,KAAD,CAAZ,CACD,CAFS,CAEP,IAFO,CAAV,CAIAK,QAAQ,CAAClB,gBAAgB,EAAjB,CAAR,CACD,CAVD,CAWA,GAAMkB,CAAAA,QAAQ,CAAGtB,WAAW,EAA5B,CACA,mBACE,KAAC,SAAD,wBACE,KAAC,GAAD,EAAK,SAAS,CAAC,wBAAf,uBACE,KAAC,GAAD,wBACE,MAAC,IAAD,yBACE,KAAC,IAAD,CAAM,MAAN,EAAa,KAAK,CAAE,CAAEuB,SAAS,CAAE,QAAb,CAApB,CAA6C,EAAE,CAAC,IAAhD,4BADF,cAIE,KAAC,IAAD,CAAM,IAAN,WACGP,SAAS,cACR,KAAC,KAAD,EAAO,OAAO,CAAC,SAAf,2DADQ,cAKR,MAAC,IAAD,EAAM,QAAQ,CAAEE,YAAhB,wBACE,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,gBAAtB,wBACE,KAAC,IAAD,CAAM,KAAN,4BADF,cAEE,KAAC,IAAD,CAAM,OAAN,EACE,QAAQ,CAAE,kBAACC,KAAD,CAAW,CACnBG,QAAQ,CAACnB,cAAc,CAACgB,KAAK,CAACK,MAAP,CAAf,CAAR,CACD,CAHH,CAIE,IAAI,CAAC,OAJP,CAKE,IAAI,CAAC,OALP,CAME,KAAK,CAAET,WAAW,CAACU,KANrB,CAOE,WAAW,CAAC,aAPd,EAFF,GADF,cAcE,KAAC,MAAD,EACE,SAAS,CAAC,MADZ,CAEE,KAAK,KAFP,CAGE,OAAO,CAAC,iBAHV,CAIE,IAAI,CAAC,QAJP,4BAdF,GANJ,EAJF,GADF,EADF,EADF,EADF,CA4CD,CA7DD,CA+DA,GAAMC,CAAAA,eAAe,CAAG3B,WAAW,CAAC4B,IAAZ,EAAxB,CAEA,GAAMC,CAAAA,SAAS,CAAG,CAChBC,cAAc,CAAE,GAAI/B,CAAAA,QAAQ,CAAC6B,IAAT,CAAcG,kBAAlB,EADA,CAAlB,CAIA,cAAejC,CAAAA,gBAAgB,CAAC,CAC9B+B,SAAS,CAATA,SAD8B,CAE9BF,eAAe,CAAfA,eAF8B,CAAD,CAAhB,CAGZd,aAHY,CAAf","sourcesContent":["/** @format */\n\nimport React, { useState } from \"react\";\nimport withFirebaseAuth from \"react-with-firebase-auth\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseApp from \"../../firebase/firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectCredentials,\n  setCredentials,\n  setResetPassword,\n} from \"../../slices/authenticate.slice\";\nimport {\n  Alert,\n  Container,\n  Row,\n  Col,\n  Card,\n  Form,\n  Button,\n} from \"react-bootstrap\";\n\nconst ResetPassword = (props) => {\n  const { resetEmail } = props;\n  const credentials = useSelector(selectCredentials);\n  const [emailSent, setEmailSent] = useState(false);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setTimeout(() => {\n      setEmailSent(true);\n    }, 1000);\n    setTimeout(() => {\n      setEmailSent(false);\n    }, 1000);\n\n    dispatch(setResetPassword());\n  };\n  const dispatch = useDispatch();\n  return (\n    <Container>\n      <Row className=\"justify-content-center\">\n        <Col>\n          <Card>\n            <Card.Header style={{ textAlign: \"center\" }} as=\"h5\">\n              Reset Password\n            </Card.Header>\n            <Card.Body>\n              {emailSent ? (\n                <Alert variant=\"success\">\n                  An email has been sent to reset your password\n                </Alert>\n              ) : (\n                <Form onSubmit={handleSubmit}>\n                  <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control\n                      onChange={(event) => {\n                        dispatch(setCredentials(event.target));\n                      }}\n                      name=\"email\"\n                      type=\"email\"\n                      value={credentials.email}\n                      placeholder=\"Enter email\"\n                    />\n                  </Form.Group>\n\n                  <Button\n                    className=\"mt-2\"\n                    block\n                    variant=\"outline-primary\"\n                    type=\"submit\"\n                  >\n                    Reset Password\n                  </Button>\n                </Form>\n              )}\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nconst firebaseAppAuth = firebaseApp.auth();\n\nconst providers = {\n  googleProvider: new firebase.auth.GoogleAuthProvider(),\n};\n\nexport default withFirebaseAuth({\n  providers,\n  firebaseAppAuth,\n})(ResetPassword);\n"]},"metadata":{},"sourceType":"module"}