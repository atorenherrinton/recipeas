{"ast":null,"code":"var _jsxFileName = \"/Users/atorenherrinton/Development/recipeas/client/src/components/full-recipe/full-recipe.component.jsx\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { closeRecipe } from \"../../slices/recipe.slice\";\nimport { Button, Card, Col, Container, Form, Row, Table } from \"react-bootstrap\";\nimport DropdownButton from \"../dropdown/dropdown.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FullRecipe = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xl: 7,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(DropdownButton, {\n            id: props.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Img, {\n            style: {\n              height: \"25rem\",\n              objectFit: \"cover\"\n            },\n            variant: \"top\",\n            src: props.imageUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: props.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: props.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), props.ingredients ? /*#__PURE__*/_jsxDEV(Table, {\n              hover: true,\n              size: \"sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Ingredients\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: props.ingredients.map((ingredient, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                      type: \"checkbox\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 42,\n                      columnNumber: 39\n                    }, this), ingredient]\n                  }, idx, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 42,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this) : null, /*#__PURE__*/_jsxDEV(Table, {\n              hover: true,\n              striped: true,\n              size: \"sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Directions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: props.directions.split(\"\\n\").map((step, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: step\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                width: \"100%\"\n              },\n              variant: \"outline-primary\",\n              onClick: () => {\n                dispatch(closeRecipe());\n              },\n              children: \"Close Recipe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FullRecipe, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = FullRecipe;\nexport default FullRecipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"FullRecipe\");","map":{"version":3,"sources":["/Users/atorenherrinton/Development/recipeas/client/src/components/full-recipe/full-recipe.component.jsx"],"names":["React","useDispatch","closeRecipe","Button","Card","Col","Container","Form","Row","Table","DropdownButton","FullRecipe","props","dispatch","id","height","objectFit","imageUrl","title","description","ingredients","map","ingredient","idx","directions","split","step","width"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { closeRecipe } from \"../../slices/recipe.slice\";\nimport {\n  Button,\n  Card,\n  Col,\n  Container,\n  Form,\n  Row,\n  Table,\n} from \"react-bootstrap\";\nimport DropdownButton from \"../dropdown/dropdown.component\";\n\nconst FullRecipe = (props) => {\n  const dispatch = useDispatch();\n  return (\n    <Container>\n      <Row className=\"justify-content-center\">\n        <Col xl={7}>\n          <Card>\n            <DropdownButton id={props.id} />\n            <Card.Img\n              style={{ height: \"25rem\", objectFit: \"cover\" }}\n              variant=\"top\"\n              src={props.imageUrl}\n            />\n            <Card.Body>\n              <h4>{props.title}</h4>\n              <p>{props.description}</p>\n              {props.ingredients ? (\n                <Table hover size=\"sm\">\n                  <thead>\n                    <th>Ingredients</th>\n                  </thead>\n                  <tbody>\n                    {props.ingredients.map((ingredient, idx) => (\n                      <tr>\n                        \n                        <td key={idx}><Form.Check type=\"checkbox\"/>{ingredient}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              ) : null}\n              <Table hover striped size=\"sm\">\n                <thead>\n                  <th>Directions</th>\n                </thead>\n                <tbody>\n                  {props.directions.split(\"\\n\").map((step, idx) => (\n                    <tr>\n                      <td key={idx}>{step}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n\n              <Button\n                style={{ width: \"100%\" }}\n                variant=\"outline-primary\"\n                onClick={() => {\n                  dispatch(closeRecipe());\n                }}\n              >\n                Close Recipe\n              </Button>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default FullRecipe;\n"]},"metadata":{},"sourceType":"module"}