{"ast":null,"code":"/** @format */\nimport { createSlice } from \"@reduxjs/toolkit\";\nexport const authenticateSlice = createSlice({\n  name: \"authenticate\",\n  initialState: {\n    isAuthenticated: false,\n    isSignIn: true,\n    resetPassword: false,\n    userId: \"\",\n    credentials: {\n      email: \"\",\n      password: \"\",\n      conirmPassword: \"\"\n    },\n    isEmailSent: false,\n    errorMessage: \"\"\n  },\n  reducers: {\n    authenticate: state => {\n      state.isAuthenticated = true;\n    },\n    deauthenticate: state => {\n      state.isAuthenticated = false;\n    },\n    resetCredentials: state => {\n      state.credentials = { ...state.credentials,\n        password: \"\",\n        conirmPassword: \"\"\n      };\n    },\n    resetErrorMessage: state => {\n      state.errorMessage = \"\";\n    },\n    setCredentials: (state, action) => {\n      const {\n        value,\n        name\n      } = action.payload;\n      state.credentials = { ...state.credentials,\n        [name]: value\n      };\n    },\n    setIsEmailSent: (state, action) => {\n      state.isEmailSent = action.payload;\n    },\n    setErrorMessage: (state, action) => {\n      state.errorMessage = action.payload;\n    },\n    setSignIn: state => {\n      state.isSignIn = !state.isSignIn;\n    },\n    setResetPassword: state => {\n      state.resetPassword = !state.resetPassword;\n    },\n    setUserId: (state, action) => {\n      state.userId = action.payload;\n    }\n  }\n});\nexport const {\n  authenticate,\n  deauthenticate,\n  resetCredentials,\n  setCredentials,\n  resetErrorMessage,\n  setErrorMessage,\n  setIsEmailSent,\n  setResetPassword,\n  setSignIn,\n  setUserId\n} = authenticateSlice.actions; // The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\n\nexport const selectIsAuthenticated = state => state.authenticate.isAuthenticated;\nexport const selectCredentials = state => state.authenticate.credentials;\nexport const selectIsEmailSent = state => state.authenticate.isEmailSent;\nexport const selectErrorMessage = state => state.authenticate.errorMessage;\nexport const selectIsSignIn = state => state.authenticate.isSignIn;\nexport const selectResetPassword = state => state.authenticate.resetPassword;\nexport const selectUserId = state => state.authenticate.userId;\nexport default authenticateSlice.reducer;","map":{"version":3,"sources":["/Users/atorenherrinton/Development/recipeas/client/src/slices/authenticate.slice.js"],"names":["createSlice","authenticateSlice","name","initialState","isAuthenticated","isSignIn","resetPassword","userId","credentials","email","password","conirmPassword","isEmailSent","errorMessage","reducers","authenticate","state","deauthenticate","resetCredentials","resetErrorMessage","setCredentials","action","value","payload","setIsEmailSent","setErrorMessage","setSignIn","setResetPassword","setUserId","actions","selectIsAuthenticated","selectCredentials","selectIsEmailSent","selectErrorMessage","selectIsSignIn","selectResetPassword","selectUserId","reducer"],"mappings":"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","sourcesContent":["/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nexport const authenticateSlice = createSlice({\n  name: \"authenticate\",\n  initialState: {\n    isAuthenticated: false,\n    isSignIn: true,\n    resetPassword: false,\n    userId: \"\",\n    credentials: {\n      email: \"\",\n      password: \"\",\n      conirmPassword: \"\",\n    },\n    isEmailSent: false,\n    errorMessage: \"\",\n  },\n  reducers: {\n    authenticate: (state) => {\n      state.isAuthenticated = true;\n    },\n    deauthenticate: (state) => {\n      state.isAuthenticated = false;\n    },\n    resetCredentials: (state) => {\n      state.credentials = {\n        ...state.credentials,\n        password: \"\",\n        conirmPassword: \"\",\n      };\n    },\n    resetErrorMessage: (state) => {\n      state.errorMessage = \"\";\n    },\n    setCredentials: (state, action) => {\n      const { value, name } = action.payload;\n      state.credentials = { ...state.credentials, [name]: value };\n    },\n    setIsEmailSent: (state,action) => {\n      state.isEmailSent = action.payload;\n    },\n    setErrorMessage: (state, action) => {\n      state.errorMessage = action.payload;\n    },\n    setSignIn: (state) => {\n      state.isSignIn = !state.isSignIn;\n    },\n    setResetPassword: (state) => {\n      state.resetPassword = !state.resetPassword;\n    },\n    setUserId: (state, action) => {\n      state.userId = action.payload;\n    },\n  },\n});\n\nexport const {\n  authenticate,\n  deauthenticate,\n  resetCredentials,\n  setCredentials,\n  resetErrorMessage,\n  setErrorMessage,\n  setIsEmailSent,\n  setResetPassword,\n  setSignIn,\n  setUserId,\n} = authenticateSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectIsAuthenticated = (state) =>\n  state.authenticate.isAuthenticated;\nexport const selectCredentials = (state) => state.authenticate.credentials;\nexport const selectIsEmailSent = (state) => state.authenticate.isEmailSent;\nexport const selectErrorMessage = (state) => state.authenticate.errorMessage;\nexport const selectIsSignIn = (state) => state.authenticate.isSignIn;\nexport const selectResetPassword = (state) => state.authenticate.resetPassword;\nexport const selectUserId = (state) => state.authenticate.userId;\n\nexport default authenticateSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}